{"version":3,"sources":["app/modules/dropdown/DropDownMenu4.tsx","app/modules/artistWizard/components/ArtistCard.tsx","app/modules/artistWizard/ArtistList.tsx"],"names":["DropdownMenu4","props","navigate","useNavigate","className","style","paddingLeft","href","id","listStyleType","onClick","openDialog","TokenCard","useSelector","auth","authToken","accessToken","userID","user","shallowEqual","useDispatch","Dropdown","align","Toggle","variant","as","DropdownCustomToggler","xmlns","width","height","fill","viewBox","d","Menu","isMinted","open","handleClickOpen","handleClose","src","imagePath","artistName","ArtsitList","dispatch","intl","useIntl","useState","loading","setLoading","artistData","setArtistData","sucMsg","localStorage","getItem","successResMessage","setSuccessResMessage","failMsg","failureResMessage","setFailureResMessage","checked","setChecked","React","setOpen","setTimeout","removeItem","collectionMeta","ecom","collectionsMeta","isAdmin","useEffect","getArtistsData","then","response","_artistData","data","artist_data","catch","error","setItem","formatMessage","logout","document","getElementById","display","closeDialog","undefined","message","background","color","borderColor","map","artist","process","artist_image","artist_name","title","type","artistID","deleteArtist","res","success","window","location","reload","length","CircularProgress","index","element","to"],"mappings":"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","file":"static/js/13.d24a8f4d.chunk.js","sourcesContent":["/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport const DropdownMenu4 = (props: any) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleEditClick = (id: string) => {\r\n        navigate('/edit-artist', {state: id})\r\n    }\r\n\r\n    return (<>\r\n        {/*begin::Navigation*/}\r\n        <ul className=\"navi navi-hover\" style={{paddingLeft: 0}}>\r\n            <a href={`artist-detail?id=${props.id}`} className=\"navi-item cursor-pointer mt-3\" style={{ listStyleType: \"none\" }}>\r\n                <span className=\"navi-link\">\r\n                    <span className=\"navi-text ms-6 text-dark\"><FormattedMessage id=\"CREATE_EDIT_ARTIST.OPTIONS.VIEW\" /></span>\r\n                </span>\r\n            </a>\r\n            <div className='separator my-2'></div>\r\n            <li className=\"navi-item cursor-pointer mt-3\" style={{ listStyleType: \"none\" }} onClick={() => navigate(`/edit-artist?id=${props.id}`)}>\r\n                <span className=\"navi-link\">\r\n                    <span className=\"navi-text ms-6 text-dark\"><FormattedMessage id=\"CREATE_EDIT_ARTIST.OPTIONS.EDIT\" /></span>\r\n                </span>\r\n            </li>\r\n            <div className='separator my-2'></div>\r\n            <li \r\n                className=\"navi-item cursor-pointer mt-3 text-dark\" \r\n                style={{ listStyleType: \"none\" }} \r\n                onClick={() => props.openDialog(`delete-artist-${props.id}`)}>\r\n                <span className=\"navi-link\">\r\n                    <span className=\"navi-text ms-6 text-dark\"><FormattedMessage id=\"CREATE_EDIT_ARTIST.OPTIONS.DELETE\" /></span>\r\n                </span>\r\n            </li>\r\n        </ul>\r\n        {/*end::Navigation*/}\r\n    </>);\r\n}\r\n","import { DropdownCustomToggler } from 'app/modules/dropdown/DropdownCustomToggler';\r\nimport { DropdownMenu4 } from 'app/modules/dropdown/DropDownMenu4';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {RootState} from \"../../../../setup\"\r\n\r\n\r\nexport default function TokenCard(props: any) {\r\n\r\n\r\n  const {authToken, userID}: any = useSelector<RootState>(\r\n    ({auth}) => ({\r\n      authToken: auth.accessToken,\r\n      userID: auth.user?.userID\r\n    }), shallowEqual\r\n  )\r\n\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const handleEditClick = (id: string) => {\r\n    navigate('/edit-patents', {state: id})\r\n  }\r\n \r\n  return (\r\n    <>\r\n    <div id=\"p-card\" className=\"w-270px mx-3 my-3 cursor-pointer\">\r\n        <div className=\"card card-custom gutter-b card-stretch\">\r\n            <span className=\"card-body d-flex flex-column bg-white justify-content-between product-card\">\r\n                <div className='d-flex justify-content-between'>\r\n                    <span onClick={() => {}} className=\"cursor-pointer\">\r\n                      \r\n                    </span>\r\n                    <Dropdown className=\"dropdown dropdown-inline\" align={'end'}>\r\n                        <Dropdown.Toggle\r\n                            className=\"btn btn-clean btn-hover-light-primary btn-sm btn-icon cursor-pointer\"\r\n                            variant=\"transparent\"\r\n                            id=\"dropdown-toggle-top-user-profile\"\r\n                            as={DropdownCustomToggler}\r\n                        >\r\n                          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-three-dots-vertical\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"/>\r\n                          </svg>   \r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu className=\"dropdown-menu dropdown-menu-sm dropdown-menu-right mt-1\">\r\n                            <DropdownMenu4\r\n                              id={props.id} \r\n                              isMinted={props.isMinted}\r\n                              open={props.open}\r\n                              openDialog={props.openDialog}\r\n                              handleClickOpen={props.handleClickOpen}\r\n                              handleClose={props.handleClose}\r\n                            />\r\n                        </Dropdown.Menu>\r\n                    </Dropdown> \r\n                </div>\r\n                <span>\r\n                  <div className=\"text-center rounded mb-7\">\r\n                      <img src={props.imagePath} className=\"w-200px rounded h-200px\" />\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"d-flex flex-column justify-content-center\">\r\n                        <h4>\r\n                            <div className=\"font-size-12 text-muted text-center\"><FormattedMessage id=\"ADMIN_ARTIST_LIST.ARTIST_NAME\" /></div>\r\n                        </h4>\r\n                        <h6>\r\n                            <div className=\"font-size-17 my-2 text-center\">{props.artistName}</div>\r\n                        </h6>\r\n                    </div>\r\n                  </div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React, {FC, useEffect, useState} from 'react';\r\nimport {useSelector, shallowEqual, useDispatch} from 'react-redux';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport { RootState } from '../../../setup';\r\nimport ArtistCard from './components/ArtistCard';\r\nimport {actions} from '../explore/redux/ecomRedux';\r\nimport * as auth from '../auth/redux/AuthRedux';\r\nimport {AlertDanger, AlertSuccess} from '../alerts/Alerts'\r\nimport { getArtistsData, deleteArtist } from './api'\r\nimport { CircularProgress } from '@mui/material';\r\nimport { FormattedMessage, useIntl } from 'react-intl'\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\n\r\nconst ArtsitList: React.FC = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const intl = useIntl()\r\n\r\n  const [loading, setLoading] = useState<boolean>(true)\r\n  const [artistData, setArtistData] = useState<Array<any>>([])\r\n  const sucMsg = localStorage.getItem('artistDeleted')\r\n  const [successResMessage, setSuccessResMessage] = useState(sucMsg)\r\n\r\n  const failMsg = localStorage.getItem('artistNotDeleted')\r\n  const [failureResMessage, setFailureResMessage] = useState(failMsg)\r\n\r\n  const [checked, setChecked] = useState(true)\r\n\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  if(sucMsg) {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"artistDeleted\");\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setSuccessResMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  if(failMsg) {\r\n    setTimeout(() => {\r\n      localStorage.removeItem(\"artistNotDeleted\");\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setFailureResMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  const { collectionMeta }: any = useSelector<RootState>(\r\n      ({ecom}) => ({\r\n          collectionMeta: ecom.collectionsMeta\r\n      }), shallowEqual\r\n  )\r\n\r\n  const { isAdmin }: any = useSelector<RootState>(\r\n    ({auth}) => ({\r\n        isAdmin: auth.user?.isAdmin\r\n    }), shallowEqual\r\n  )\r\n\r\n  useEffect(() => {\r\n    getArtistsData()\r\n      .then((response) => {\r\n          const _artistData = response.data.artist_data\r\n          setArtistData(_artistData)\r\n          setLoading(false)\r\n      }).catch((error) => {\r\n          localStorage.setItem('sessionTimeOut', intl.formatMessage({ id: \"SESSION.TIMED_OUT\" }))\r\n          dispatch(auth.actions.logout())\r\n      })\r\n  }, [])\r\n\r\n  const handleClick = () => {\r\n    navigate('/create-artist');\r\n  }\r\n\r\n  const handleDeleteArtist = (artistID: string) => {\r\n    deleteArtist(artistID)\r\n        .then(\r\n            (res) => {\r\n                if(res.data.success) {\r\n                    localStorage.setItem('artistDeleted', res.data.message)\r\n                    closeDialog(`delete-artist-${artistID}`)\r\n                    navigate('/view-artists')\r\n                    window.location.reload()\r\n                } else {\r\n                    if(res.data.message) {\r\n                        localStorage.setItem('artistNotDeleted', res.data.message)\r\n                        navigate('/view-artists')\r\n                    } else {\r\n                        localStorage.setItem('artistNotDeleted', intl.formatMessage({ id: \"CREATE_EDIT_ARTIST.ARTIST_DELETE_FAILED\" }))\r\n                        navigate('/view-artists')\r\n                    }\r\n                }\r\n            }\r\n        )\r\n        .catch((error) => {\r\n            localStorage.setItem('sessionTimeOut', intl.formatMessage({ id: \"SESSION.TIMED_OUT\" }))\r\n            dispatch(auth.actions.logout())\r\n        })\r\n  }\r\n\r\n  const openDialog = (id: string) => {\r\n    const element: HTMLElement = document.getElementById(id)!\r\n    element.style.display='block'\r\n  }\r\n\r\n  const closeDialog = (id: string) => {\r\n    const element: HTMLElement = document.getElementById(id)!\r\n    element.style.display='none'\r\n  }\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      {isAdmin == '1' && \r\n        <>\r\n          {!loading && \r\n            <>\r\n              {successResMessage !== undefined && successResMessage !== null && successResMessage !== \"\" ? (\r\n                <AlertSuccess message={successResMessage} checked={checked} />\r\n                ) : null }\r\n    \r\n              {failureResMessage !== undefined && failureResMessage !== null && failureResMessage !== \"\" ? (\r\n                <AlertDanger message={failureResMessage} checked={checked} />\r\n                ) : null }\r\n    \r\n                <div className='card mb-5 mb-xl-10 mt-5' id='kt_profile_details_view'>\r\n                  <div className='card-header'>\r\n                    <div className='card-title m-0'>\r\n                      <h3 className='fw-bolder m-0'><FormattedMessage id=\"ADMIN_ARTIST_LIST.ARTIST_LIST\" /></h3>\r\n                    </div>\r\n                    <div className='card-title m-0'>\r\n                      <button onClick={handleClick} style={{ background: '#ffd600', color: '#000', borderColor: '#0000' }} className='px-4 py-2 rounded'><FormattedMessage id=\"ADMIN_ARTIST_LIST.CREATE_ARTIST\" /></button>\r\n                    </div>\r\n                  </div>\r\n          \r\n                  <div className='d-flex flex-wrap justify-content-center card-body'>\r\n                      {artistData.map((artist: any) => (\r\n                        <div key={artist.id}>\r\n                          <ArtistCard \r\n                              id={artist.id}\r\n                              imagePath={`${process.env.REACT_APP_API_ARTIST_IMAGE_URL}/${artist.artist_image}`}\r\n                              // currency={currency}\r\n                              artistName={artist.artist_name}\r\n                              open={open}\r\n                              openDialog={openDialog}\r\n                              handleClickOpen={handleClickOpen}\r\n                              handleClose={handleClose}\r\n                          />\r\n                          <div id={`delete-artist-${artist.id}`} style={{ display: 'none' }} className=\"modal\">\r\n                              <span onClick={() => closeDialog(`delete-artist-${artist.id}`)} className=\"close\" title=\"Close Modal\">&times;</span>\r\n                              <form className=\"modal-content\">\r\n                              <div className=\"px-7 py-7\">\r\n                                <h3><FormattedMessage id=\"ARTIST_DELETE_BOX.DELETE_ARTIST\" /></h3>\r\n                                <p className='font-size-15'><FormattedMessage id=\"ARTIST_DELETE_BOX.DELETE_ARTIST_CONFIRMATION\" /></p>\r\n    \r\n                                <div className=\"d-flex\">\r\n                                  <button onClick={() => closeDialog(`delete-artist-${artist.id}`)} type=\"button\" className=\"btn btn-primary\"><FormattedMessage id=\"ARTIST_DELETE_BOX.CANCEL\" /></button>\r\n                                  <button onClick={() => handleDeleteArtist(artist.id)} type=\"button\" className=\"btn btn-danger ms-3\"><FormattedMessage id=\"ARTIST_DELETE_BOX.DELETE\" /></button>\r\n                                </div>\r\n                              </div>\r\n                              </form>\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                        {artistData.length == 0 && \r\n                          <div className='mx-auto my-auto'>\r\n                            <span className='fs-4'><FormattedMessage id=\"ADMIN_ARTIST_LIST.NO_ARTIST\" /></span>\r\n                          </div>\r\n                        }\r\n                  </div>\r\n                </div>\r\n            </>\r\n          }\r\n          {loading && \r\n            <div className='d-flex w-100 h-100'>\r\n                <div className='my-auto mx-auto'>\r\n                    <div className='d-flex flex-column justify-content-center'>\r\n                        <span className='text-primary fs-3'><FormattedMessage id=\"AUTH.REGISTER.LOADING\" /></span> <br />\r\n                        <span className='ms-4'>\r\n                            <CircularProgress />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          }\r\n        </>\r\n      }\r\n\r\n      {isAdmin == '0' && \r\n        <Routes>\r\n            <Route index element={<Navigate to={'/error/404'} /> }/>\r\n        </Routes>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ArtsitList;"],"sourceRoot":""}