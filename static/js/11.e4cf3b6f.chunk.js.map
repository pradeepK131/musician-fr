{"version":3,"sources":["app/modules/stripePages/api/index.ts","app/modules/stripePages/StripeStatusPage.tsx"],"names":["CHECK_CARD_TRANSACTION_URL","process","GET_ORDER_DATA_URL","checkCardTransaction","orderCode","axios","method","url","headers","data","getOrderData","customStyle","borderColor","color","backgroundColor","StripeStatusPage","params","URLSearchParams","window","location","search","name","get","artist","image","useSelector","auth","walletAddress","walletName","chainID","useState","processing","setProcessing","setOrderData","status","setStatus","navigate","useNavigate","dispatch","useDispatch","_checkCardTransaction","a","result","success","userWalletList","ethCustodialWallet","custWalletEth","klayCustodialWallet","custWalletKlay","metamaskWallet","metamask_wallet","kaikasWallet","kaikas_wallet","order_data","actions","setUserWalletList","useEffect","className","style","height","marginTop","maxWidth","width","src","display","flexDirection","zIndex","position","top","left","fontSize","fontFamily","letterSpacing","id","onClick","state","lineHeight"],"mappings":"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","file":"static/js/11.e4cf3b6f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst CHECK_CARD_TRANSACTION_URL = `${process.env.REACT_APP_API_URL}/check-card-transaction.php`;\r\nconst GET_ORDER_DATA_URL = `${process.env.REACT_APP_API_URL}/get-order-data.php`;\r\n\r\n\r\nexport function checkCardTransaction(orderCode: string | null) {\r\n    return axios({\r\n        method: 'post',\r\n        url: CHECK_CARD_TRANSACTION_URL,\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded',\r\n        },\r\n        data: {\r\n            orderCode\r\n        }\r\n    })\r\n}\r\n\r\nexport function getOrderData(orderCode: string | null) {\r\n    return axios({\r\n        method: 'post',\r\n        url: GET_ORDER_DATA_URL,\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded',\r\n        },\r\n        data: {\r\n            orderCode\r\n        }\r\n    })\r\n}","import { useEffect, useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { checkCardTransaction } from \"./api\";\r\nimport { actions } from '../auth/redux/AuthRedux'\r\nimport { string } from \"yup\";\r\nimport { RootState } from \"setup\";\r\n\r\nconst customStyle = {\r\n    borderColor: '#ca8837',\r\n    color: '#ca8837',\r\n    backgroundColor: 'transparent'\r\n}\r\n\r\nconst StripeStatusPage = () => {\r\n    \r\n    const params = new URLSearchParams(window.location.search);\r\n    const success: string | null = params.get(\"success\");\r\n    const canceled: string | null = params.get(\"canceled\");\r\n    const name: string | null = params.get(\"name\");\r\n    const artist: string | null = params.get('artist');\r\n    const image: string | null = params.get(\"image\");\r\n    const colID: string | null = params.get(\"colID\");\r\n    const orderCode: string | null = params.get(\"orderCode\");\r\n\r\n    const { walletAddress, walletName, chainID }: any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            walletAddress: auth.walletAddress,\r\n            walletName: auth.walletName,\r\n            chainID: auth.chainID\r\n        })\r\n    )\r\n\r\n    const [style, changeStyle] = useState(customStyle)\r\n    const [processing, setProcessing] = useState<boolean>(true)\r\n    const [orderData, setOrderData] = useState<any>(null)\r\n    const [status, setStatus] = useState<'pay_success_mint_success' | 'pay_success_mint_failed' | 'pay_failed_mint_failed' | ''>('')\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const _checkCardTransaction = async (orderCode: string | null) => {\r\n        const result = await checkCardTransaction(orderCode);\r\n\r\n        if(result.data.success) {\r\n\r\n            const userWalletList = {\r\n                ethCustodialWallet: result.data.custWalletEth,\r\n                klayCustodialWallet: result.data.custWalletKlay,\r\n                metamaskWallet: result.data.metamask_wallet,\r\n                kaikasWallet: result.data.kaikas_wallet\r\n            }\r\n\r\n            switch (result.data.status) {\r\n                case 'pay_success_mint_success':\r\n                    setProcessing(false)\r\n                    setStatus('pay_success_mint_success')\r\n                    setOrderData(result.data.order_data)\r\n\r\n                    dispatch(actions.setUserWalletList(userWalletList, walletAddress, walletName, chainID ? chainID : '0x'))\r\n                    break;\r\n                case 'pay_success_mint_failed':\r\n                    setProcessing(false)\r\n                    setStatus('pay_success_mint_failed')\r\n                    setOrderData(result.data.order_data)\r\n\r\n                    dispatch(actions.setUserWalletList(userWalletList, walletAddress, walletName, chainID ? chainID : '0x'))\r\n                    break;\r\n                    break;\r\n                case 'pay_failed_mint_failed':\r\n                    setProcessing(false)\r\n                    setStatus('pay_failed_mint_failed')\r\n                    setOrderData(result.data.order_data)\r\n\r\n                    dispatch(actions.setUserWalletList(userWalletList, walletAddress, walletName, chainID ? chainID : '0x'))\r\n                    break;\r\n            }\r\n        } else {\r\n            if(result.data.status == 'pending') {\r\n                _checkCardTransaction(orderCode)\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        _checkCardTransaction(orderCode)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div \r\n                className=\"d-flex justify-content-center stripe-success-bg\"\r\n                style={{ height: '100%' }}\r\n            >\r\n                <div \r\n                    className='d-flex'\r\n                    style={{ marginTop:'30px' }}\r\n                >\r\n                    <div className=\"d-flex flex-column\" style={{ maxWidth: '500px' }}>\r\n                        <div className=\"shadow-xl\">\r\n                            <figure \r\n                                className=\"\" \r\n                                style={{ width: '100%' }}\r\n                            >\r\n                                <img \r\n                                    className=\"w-100\" \r\n                                    src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${image}`} \r\n                                    // srcSet={dummyData[index].srcSet}\r\n                                />\r\n                            </figure>\r\n                        </div> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div \r\n                className=\"modal\" \r\n                style={{ \r\n                    display: 'flex', \r\n                    flexDirection: 'column', \r\n                    backgroundColor: 'rgba(0,0,0, 0.4)',\r\n                    zIndex: '2',\r\n                    position: 'absolute',\r\n                    top: '0',\r\n                    left: '0',\r\n                    height: '100%'\r\n                }}\r\n            >\r\n\r\n                {!processing && \r\n                    <>\r\n                        {status == 'pay_success_mint_success' && \r\n                            <div \r\n                                className=\"d-flex flex-column mx-auto justify-content-center\" \r\n                                style={{ width: '30%' }}\r\n                            >\r\n                                <span \r\n                                    className=\"text-white fw-bolder text-center\"\r\n                                    style={{ fontSize: '40px', fontFamily: \"'Antonio', sans-serif\", letterSpacing: '1px' }}\r\n                                >\r\n                                    <FormattedMessage id=\"STRIPE_STATUS.SUCCESS\" />\r\n                                </span>\r\n                                <br />\r\n                                <span \r\n                                    className='text-white text-center mx-auto'\r\n                                    style={{ width: '70%', fontSize: '15px' }}\r\n                                >\r\n                                    <FormattedMessage id=\"STRIPE_STATUS.PURCHASE_DETAIL_1\" /> \r\n                                    <span className=\"mx-1\">{name}</span> <FormattedMessage id=\"STRIPE_STATUS.PURCHASE_DETAIL_2\" />  <span>{artist}</span>\r\n                                </span>\r\n        \r\n                                <div \r\n                                    className=\"d-flex flex-column justify-content-center\" \r\n                                    style={{ \r\n                                        marginTop: '200px', \r\n                                        width: '100%' \r\n                                    }}\r\n                                >\r\n                                    {/* <button \r\n                                        className=\"py-3 text-white\"\r\n                                        style={{\r\n                                            border: '1px solid #ffff',\r\n                                            borderRadius: '5px',\r\n                                            width: '100%',\r\n                                            background: 'inherit'\r\n                                        }} \r\n                                    >\r\n                                        SHARE\r\n                                    </button> */}\r\n                                    <span \r\n                                        className=\"mt-5 text-white text-center cursor-pointer\"\r\n                                        onClick={() => navigate('/view-receipt', {state: { orderCode }})}\r\n                                    >\r\n                                        <FormattedMessage id=\"STRIPE_STATUS.CONTINUE_TO_RECEIPT\" />\r\n                                    </span>\r\n        \r\n                                    <span style={{ lineHeight: '1.8' }} className=\"mt-10 text-white text-center\">\r\n                                        <FormattedMessage id=\"STRIPE_STATUS.INSTRUCTION\" />\r\n                                    </span>\r\n        \r\n                                    <span className=\"text-white mt-10 text-center mb-10\"><FormattedMessage id=\"STRIPE_STATUS.HELP\" /></span>\r\n                                </div>\r\n                            </div>\r\n                        }\r\n\r\n                        {status == 'pay_success_mint_failed' && \r\n                            <div \r\n                                className=\"d-flex flex-column mx-auto justify-content-center\" \r\n                                style={{ width: '30%' }}\r\n                            >\r\n                                <span \r\n                                    className=\"text-white fw-bolder text-center\"\r\n                                    style={{ fontSize: '40px', fontFamily: \"'Antonio', sans-serif\", letterSpacing: '1px' }}\r\n                                >\r\n                                    <FormattedMessage id=\"STRIPE_STATUS.FAILED\" />\r\n                                </span>\r\n                                <br />\r\n                                <span \r\n                                    className='text-white text-center mx-auto'\r\n                                    style={{ width: '70%', fontSize: '15px' }}\r\n                                >\r\n                                    <FormattedMessage id=\"STRIPE_STATUS.FAILED.REASON\" />\r\n                                </span>\r\n                            </div>\r\n                        }\r\n\r\n                        {status == 'pay_failed_mint_failed' && \r\n                            <div \r\n                                className=\"d-flex flex-column mx-auto justify-content-center\" \r\n                                style={{ width: '30%' }}\r\n                            >\r\n                                <span \r\n                                    className=\"text-white fw-bolder text-center\"\r\n                                    style={{ fontSize: '40px', fontFamily: \"'Antonio', sans-serif\", letterSpacing: '1px' }}\r\n                                >\r\n                                    <FormattedMessage id=\"STRIPE_STATUS.PAYMENT.FAILED\" />\r\n                                </span>\r\n                                <br />\r\n                                <span \r\n                                    className='text-white text-center mx-auto'\r\n                                    style={{ width: '70%', fontSize: '15px' }}\r\n                                >\r\n                                    <FormattedMessage id=\"STRIPE_STATUS.PAYMENT.FAILED.REASON\" />\r\n                                </span>\r\n                            </div>\r\n                        }\r\n                        {/* {status == 'pay_success_mint_failed' && \r\n                        \r\n                        } */}\r\n                    </>\r\n                }\r\n\r\n                {processing && \r\n                    <div className=\"d-flex flex-column mx-auto justify-content-center\" style={{ width: '70%', marginTop: '300px' }}>\r\n                        <span className=\"text-white fw-bolder fs-1 text-center mb-5\">\r\n                            <FormattedMessage id=\"STRIPE_STATUS.PAYMENT.PROCESSING\" />\r\n                        </span>\r\n                        <span className=\"text-white fw-bolder fs-5 text-center mb-5\">\r\n                            <FormattedMessage id=\"STRIPE_STATUS.PAYMENT.PROCESSING.MESSAGE\" />\r\n                        </span>\r\n\r\n                    </div>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default StripeStatusPage"],"sourceRoot":""}