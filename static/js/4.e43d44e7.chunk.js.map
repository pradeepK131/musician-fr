{"version":3,"sources":["app/modules/accounts/components/settings/royaltyClaimHistory/components/EthereumRoyaltyClaimHistory.tsx","app/modules/accounts/components/settings/royaltyClaimHistory/components/KlaytnRoyaltyClaimHistory.tsx","app/modules/user-management/user-detail-view/components/ConnectedAccounts.tsx","app/modules/user-management/user-detail-view/components/ShowWalletAddressBox.tsx","app/modules/user-management/user-detail-view/components/UpdatePasswordBox.tsx","app/modules/user-management/user-detail-view/components/UserSummary.tsx","app/modules/user-management/user-detail-view/components/UserUpdateCard.tsx","app/modules/user-management/user-detail-view/components/UserUpdateWithAddress.tsx","app/modules/user-management/user-detail-view/components/UserRoyaltyClaim.tsx","app/modules/user-management/user-detail-view/components/UserOrderDetail.tsx","app/modules/user-management/user-detail-view/components/UserTransferDetail.tsx","app/modules/user-management/user-detail-view/UserDetailView.tsx"],"names":["tokenType","EthereumRoyaltyClaimHistory","claimData","loading","className","id","map","data","src","process","token_image","alt","collection_name","tier","depositNumber","walletAddress","claimer","slice","parseFloat","claimedAmount","href","txHash","KlaytnRoyaltyClaimHistory","token_tier","deposit_number","claimed_amount","tx_hash","ConnectedAccounts","props","userDetail","metamask_wallet","custodial_wallet_eth","custodial_wallet_klay","kaikas_wallet","ShowWalletAddress","tabIndex","xmlns","xmlnsXlink","width","height","viewBox","version","transform","fill","x","y","rx","opacity","action","placeholder","name","value","disabled","type","passwordFormValidationSchema","Yup","shape","newPassword","min","max","required","passwordConfirmation","oneOf","adminPassword","initialValues","UpdatePassword","useDispatch","useNavigate","useState","setLoading","useSelector","auth","adminID","user","userID","authToken","accessToken","shallowEqual","formik","useFormik","validationSchema","onSubmit","values","setTimeout","updatePasswordForAdmin","then","response","success","localStorage","setItem","message","window","location","reload","Dialog","open","showPasswordUpdateDialog","onClose","setShowPasswordUpdateDialog","DialogTitle","onClick","DialogContent","style","padding","handleSubmit","autoComplete","getFieldProps","touched","errors","UserSummary","cover_image","borderRadius","top","left","user_image","stroke","strokeWidth","fillRule","points","d","setShowUserUpdateDialog","full_name","username","email","UserUpdateCard","clipRule","UserUpdateWithAddress","fullname","userName","description","notRequired","image","setImage","coverImage","setCoverImage","isAdmin","is_admin","_isAdmin","setIsAdmin","fullName","formData","FormData","append","updateUserForAdmin","showUserUpdateDialog","overflow","title","backgroundImage","toAbsoluteUrl","URL","createObjectURL","onChange","e","target","files","handleImageChange","accept","handleCoverImageChange","defaultChecked","rows","UserRoyaltyClaimHistory","marginTop","ethClaimData","klayClaimData","UserCardHistory","orderHistory","navigate","order_code","buyer","amount_paid","currency_type","status","minted","state","UserTransferHistory","transferHistory","shrinkWalletAddress","JSON","parse","tokenID","length","from_addr","to_addr","transfer_status","blockchain","ViewUserDetail","useLocation","checked","setChecked","setUserDetail","setOrderHistory","setTransferHistory","ethRoyaltyClaimData","setEthRoyaltyClaimData","klayRoyaltyClaimData","setKlayRoyaltyClaimData","successMsg","getItem","resSuccessMessage","setResSuccessMessage","failureMsg","resFailureMessage","setResFailureMessage","undefined","removeItem","useEffect","getUserDetail","user_detail","order_history","transfer_history","getKlaytnRoyaltyClaimTransactionHistory","getETHRoyaltyClaimTransactionHistoryData","role","CircularProgress"],"mappings":"uGAAA,uDAUMA,EAAiB,CACnB,EAAM,OACN,EAAK,WACL,EAAK,WAGHC,EAA+C,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAS9D,OACI,sBAAKC,UAAS,OAAd,UAEA,qBAAKA,UAAU,4BAAf,SACI,oBAAIA,UAAU,2CAAd,SACI,sBAAMA,UAAU,iCAAhB,SAAiD,cAAC,IAAD,CAAkBC,GAAG,oDAM9E,qBAAKD,UAAU,iBAAf,SAEI,qBAAKA,UAAU,mBAAf,SAEA,wBAAOA,UAAU,+BAAjB,UAEI,gCACI,qBAAIA,UAAU,gCAAd,UACI,oBAAIA,UAAU,iCAAd,SAA+C,cAAC,IAAD,CAAkBC,GAAG,kCACpE,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,0CAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,oCAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,mCAC7D,oBAAID,UAAU,oDAAd,SAAkE,cAAC,IAAD,CAAkBC,GAAG,uCAK7FF,GACE,gCACKD,EAAUI,KAAI,SAACC,GAAD,OACX,+BACI,6BACA,sBAAKH,UAAU,4BAAf,UACI,qBAAKA,UAAU,0BAAf,SACA,qBACII,IAAG,UAAKC,uDAAL,YAAkDF,EAAKG,aAC1DN,UAAU,GACVO,IAAI,OAGR,sBAAKP,UAAU,2CAAf,UACA,sBAAMA,UAAU,mDAAhB,SACKG,EAAKK,kBAEV,uBAAMR,UAAU,6CAAhB,UACI,cAAC,IAAD,CAAkBC,GAAG,gCADzB,KAEI,+BAAOL,EAAUO,EAAKM,KAAKA,mBAKnC,6BACA,sBAAMT,UAAU,uEAAhB,SACKG,EAAKO,kBAIV,6BACA,sBAAMV,UAAU,uEAAhB,UAlECW,EAmEwBR,EAAKS,QAlElCD,EAAcE,MAAM,EAAG,GAGtB,SAFHF,EAAcE,MAAM,SAqEd,6BACA,uBAAMb,UAAU,uEAAhB,UACKc,WAAWX,EAAKY,eAAhB,SAAiC,GAAM,IAD5C,YAKA,oBAAIf,UAAU,4BAAd,SACI,mBACIgB,KAAI,yCAAoCb,EAAKc,QAC7CjB,UAAU,iDAFd,SAII,cAAC,IAAD,CAAkBC,GAAG,2CAlF7B,IAACU,mB,kCClBjC,4DAWMf,EAAiB,CACnB,EAAM,OACN,EAAK,WACL,EAAK,WAGHsB,EAA6C,SAAC,GAA0B,IAAzBpB,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,QAS5D,OACI,sBAAKC,UAAS,OAAd,UAEA,qBAAKA,UAAU,4BAAf,SACI,oBAAIA,UAAU,2CAAd,SACA,sBAAMA,UAAU,iCAAhB,SAAiD,cAAC,IAAD,CAAkBC,GAAG,qDAY1E,qBAAKD,UAAU,iBAAf,SAEI,qBAAKA,UAAU,mBAAf,SAEA,wBAAOA,UAAU,+BAAjB,UAEI,gCACA,qBAAIA,UAAU,gCAAd,UACI,oBAAIA,UAAU,iCAAd,SAA+C,cAAC,IAAD,CAAkBC,GAAG,kCACpE,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,0CAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,oCAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,mCAC7D,oBAAID,UAAU,oDAAd,SAAkE,cAAC,IAAD,CAAkBC,GAAG,uCAKzFF,GACE,gCACKD,EAAUI,KAAI,SAACC,GAAD,OACX,+BACI,6BACA,sBAAKH,UAAU,4BAAf,UACI,qBAAKA,UAAU,0BAAf,SACA,qBACII,IAAG,UAAKC,uDAAL,YAAkDF,EAAKG,aAC1DN,UAAU,GACVO,IAAI,OAGR,sBAAKP,UAAU,2CAAf,UACA,mBAAGgB,KAAK,IAAIhB,UAAU,mDAAtB,SACKG,EAAKK,kBAEV,uBAAMR,UAAU,6CAAhB,UACI,cAAC,IAAD,CAAkBC,GAAG,gCADzB,KAEI,+BAAOL,EAAUO,EAAKgB,yBAK9B,6BACA,mBAAGH,KAAK,IAAIhB,UAAU,uEAAtB,SACKG,EAAKiB,mBAGV,6BACA,mBAAGJ,KAAK,IAAIhB,UAAU,uEAAtB,UAvECW,EAwEwBR,EAAKS,QAvElCD,EAAcE,MAAM,EAAG,GAGtB,SAFHF,EAAcE,MAAM,SAyEd,6BACA,oBAAGG,KAAK,IAAIhB,UAAU,uEAAtB,UACKc,WAAWX,EAAKkB,gBAAhB,SAAkC,GAAM,IAD7C,aAIA,oBAAIrB,UAAU,4BAAd,SACI,mBACIgB,KAAI,6CAAwCb,EAAKmB,SACjDtB,UAAU,iDAFd,SAII,cAAC,IAAD,CAAkBC,GAAG,6CArF7B,IAACU,mB,4ECfpBY,EAAoB,SAACC,GAY9B,OACI,mCACI,sBAAKxB,UAAU,oBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,oBAAIA,UAAU,gBAAd,SAA8B,cAAC,IAAD,CAAkBC,GAAG,mDAG3D,qBAAKD,UAAU,iBAAf,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGgB,KAAK,IAAIhB,UAAU,8CAAtB,SAAoE,cAAC,IAAD,CAAkBC,GAAG,kDACzF,qBACID,UAAU,4DADd,SAGyC,IAApCwB,EAAMC,WAAWC,gBAAwB,sBAAwBF,EAAMC,WAAWC,yBAKnG,qBAAK1B,UAAU,oCACf,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGgB,KAAK,IAAIhB,UAAU,8CAAtB,SAAoE,cAAC,IAAD,CAAkBC,GAAG,uDACzF,qBAAKD,UAAU,4DAAf,SAC8C,IAAzCwB,EAAMC,WAAWE,qBAA6B,sBAAwBH,EAAMC,WAAWE,8BAKxG,qBAAK3B,UAAU,oCACf,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGgB,KAAK,IAAIhB,UAAU,8CAAtB,SAAoE,cAAC,IAAD,CAAkBC,GAAG,wDACzF,qBAAKD,UAAU,4DAAf,SAC+C,IAA1CwB,EAAMC,WAAWG,sBAA8B,sBAAwBJ,EAAMC,WAAWG,+BAKzG,qBAAK5B,UAAU,oCACf,qBAAKA,UAAU,oBAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,qBAAf,UACI,mBAAGgB,KAAK,IAAIhB,UAAU,8CAAtB,SAAoE,cAAC,IAAD,CAAkBC,GAAG,gDACzF,qBAAKD,UAAU,4DAAf,SACuC,IAAlCwB,EAAMC,WAAWI,cAAsB,sBAAwBL,EAAMC,WAAWI,uBAKjG,qBAAK7B,UAAU,+CCpE1B8B,EAAoB,SAACN,GAE9B,OACI,mCACI,qBAAKxB,UAAU,aAAaC,GAAG,+BAA+B8B,UAAW,EAAG,cAAY,OAAxF,SACI,qBAAK/B,UAAU,8CAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,eAAf,UACI,oBAAIA,UAAU,YAAd,uBACA,qBAAKA,UAAU,8CAA8C,kBAAgB,QAA7E,SACI,sBAAMA,UAAU,sBAAhB,SACI,qBAAKgC,MAAM,6BAA6BC,WAAW,+BAA+BC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAYC,QAAQ,MAAzI,SACI,oBAAGC,UAAU,qHAAqHC,KAAK,UAAvI,UACI,sBAAMA,KAAK,UAAUC,EAAE,IAAIC,EAAE,IAAIP,MAAM,KAAKC,OAAO,IAAIO,GAAG,MAC1D,sBAAMH,KAAK,UAAUI,QAAQ,MAAML,UAAU,oFAAoFE,EAAE,IAAIC,EAAE,IAAIP,MAAM,KAAKC,OAAO,IAAIO,GAAG,kBAM1L,qBAAK1C,UAAU,yCAAf,SACI,uBAAMC,GAAG,6BAA6BD,UAAU,OAAO4C,OAAO,IAA9D,UACI,sBAAK5C,UAAU,cAAf,UACI,uBAAOA,UAAU,+BAAjB,SACI,oDAEJ,uBAAOA,UAAU,kCAAkC6C,YAAY,GAAGC,KAAK,gBAAgBC,MAAO,aAAcC,UAAU,OAE1H,qBAAKhD,UAAU,oBAAf,SACI,wBAAQiD,KAAK,QAAQjD,UAAU,sBAAsB,kBAAgB,QAArE,oC,+EClB9BkD,EAA+BC,MAAaC,MAAM,CACpDC,YAAaF,MACVG,IAAI,EAAG,qBACPC,IAAI,GAAI,sBACRC,SAAS,wBACZC,qBAAsBN,MACnBG,IAAI,EAAG,qBACPC,IAAI,GAAI,sBACRC,SAAS,wBACTE,MAAM,CAACP,IAAQ,eAAgB,MAAO,4BACzCQ,cAAeR,MAAaG,IAAI,EAAG,iCAAiCE,SAAS,gCAS3EI,EAAqC,CACvCP,YAAa,GACbI,qBAAsB,GACtBE,cAAe,IAGNE,EAAiB,SAACrC,GAEVsC,cACAC,cADjB,IAEA,EAA8BC,oBAAkB,GAAhD,mBAAOjE,EAAP,KAAgBkE,EAAhB,KAEA,EAAoCC,aAChC,kBAAEC,EAAF,EAAEA,KAAF,MAAa,CACTC,QAAO,UAAED,EAAKE,YAAP,aAAE,EAAWC,OACpBC,UAAWJ,EAAKK,eAChBC,KAJAL,EAAR,EAAQA,QAOFM,GAPN,EAAiBH,UAOFI,YAAU,CACrBf,gBACAgB,iBAAkB1B,EAClB2B,SAAU,SAACC,GACPb,GAAW,GACXc,YAAW,WAEPC,YAAuBZ,EAASU,EAAOnB,cAAenC,EAAM8C,OAAQQ,EAAOzB,aAC1E4B,MAAK,SAACC,GACAA,EAAS/E,KAAKgF,SACbC,aAAaC,QAAQ,aAAcH,EAAS/E,KAAKmF,SACjDC,OAAOC,SAASC,SAChBxB,GAAW,IAERiB,EAAS/E,KAAKmF,SACbF,aAAaC,QAAQ,aAAcH,EAAS/E,KAAKmF,SACjDC,OAAOC,SAASC,SAChBxB,GAAW,KAEXmB,aAAaC,QAAQ,aAAc,mDACnCE,OAAOC,SAASC,SAChBxB,GAAW,SAKxB,SAGX,OACI,mCACI,eAACyB,EAAA,EAAD,CACIC,KAAMnE,EAAMoE,yBACZC,QAAS,kBAAMrE,EAAMsE,6BAA4B,IACjD,kBAAgB,oBAHpB,UAKI,cAACC,EAAA,EAAD,CAAa/F,UAAU,wCAAwCC,GAAG,oBAAlE,SACI,sBAAKD,UAAU,eAAf,UACI,oBAAIA,UAAU,YAAd,SAA0B,cAAC,IAAD,CAAkBC,GAAG,gEAC/C,qBAAKD,UAAU,8CAA8CgG,QAAS,kBAAMxE,EAAMsE,6BAA4B,IAA9G,SACI,sBAAM9F,UAAU,sBAAhB,SACI,qBAAKgC,MAAM,6BAA6BC,WAAW,+BAA+BC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAYC,QAAQ,MAAzI,SACI,oBAAGC,UAAU,qHAAqHC,KAAK,UAAvI,UACI,sBAAMA,KAAK,UAAUC,EAAE,IAAIC,EAAE,IAAIP,MAAM,KAAKC,OAAO,IAAIO,GAAG,MAC1D,sBAAMH,KAAK,UAAUI,QAAQ,MAAML,UAAU,oFAAoFE,EAAE,IAAIC,EAAE,IAAIP,MAAM,KAAKC,OAAO,IAAIO,GAAG,oBAO9L,cAACuD,EAAA,EAAD,UACI,uBAAMC,MAAO,CAAEC,QAAS,aAAelG,GAAG,gCAAgCD,UAAU,OAAO6E,SAAUH,EAAO0B,aAA5G,UACI,sBAAKpG,UAAU,eAAe,yBAAuB,OAArD,UACI,sBAAKA,UAAU,OAAf,UACI,uBAAOA,UAAU,wCAAjB,SAAyD,cAAC,IAAD,CAAkBC,GAAG,6DAC9E,sBAAKD,UAAU,yBAAf,UACI,mCACIA,UAAU,kDACViD,KAAK,WACLJ,YAAY,eACZwD,aAAa,OACT3B,EAAO4B,cAAc,iBAE5B5B,EAAO6B,QAAQlD,aAAeqB,EAAO8B,OAAOnD,aACzC,qBAAKrD,UAAU,+BAAf,SACI,qBAAKA,UAAU,4BAAf,SAA4C0E,EAAO8B,OAAOnD,sBAK1E,qBAAKrD,UAAU,aAAf,mFAEJ,sBAAKA,UAAU,eAAf,UACI,uBAAOA,UAAU,wCAAjB,SAAyD,cAAC,IAAD,CAAkBC,GAAG,iEAC9E,mCACID,UAAU,kDACViD,KAAK,WACLJ,YAAY,mBACZwD,aAAa,OACT3B,EAAO4B,cAAc,0BAE5B5B,EAAO6B,QAAQ9C,sBAAwBiB,EAAO8B,OAAO/C,sBAClD,qBAAKzD,UAAU,+BAAf,SACI,qBAAKA,UAAU,4BAAf,SAA4C0E,EAAO8B,OAAO/C,4BAKtE,sBAAKzD,UAAU,cAAf,UACI,uBAAOA,UAAU,6BAAjB,SAA8C,cAAC,IAAD,CAAkBC,GAAG,yCACnE,mCACIgD,KAAK,WACLjD,UAAU,+CACV6C,YAAY,kBACR6B,EAAO4B,cAAc,mBAE5B5B,EAAO6B,QAAQ5C,eAAiBe,EAAO8B,OAAO7C,eAC3C,qBAAK3D,UAAU,+BAAf,SACI,qBAAKA,UAAU,4BAAf,SAA4C0E,EAAO8B,OAAO7C,qBAKtE,sBAAK3D,UAAU,oBAAf,UACI,wBACIiD,KAAK,QACLjD,UAAU,qBACVgG,QAAS,kBAAMxE,EAAMsE,6BAA4B,IAHrD,qBAOA,yBAAQ7C,KAAK,SAASjD,UAAU,kBAAhC,UACI,sBAAMA,UAAU,kBAAhB,oBACCD,GACG,sBAAMC,UAAU,wECjKvCyG,EAAc,SAACjF,GAExB,OACI,mCACI,qBAAKxB,UAAU,oBAAf,SACI,sBAAKA,UAAU,yBAAf,UACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,0DAAf,UACI,qBAAKA,UAAU,yCAAf,SACqC,WAAhCwB,EAAMC,WAAWiF,YACd,mCACI,qBACIR,MAAO,CAAChE,MAAO,UAAWC,OAAQ,WAElC/B,IAAG,UAAKC,4DAAL,iBACHE,IAAI,OAIZ,mCACI,qBACI2F,MAAO,CAAChE,MAAO,UAAWC,OAAQ,WAElC/B,IAAG,UAAKC,4DAAL,YAAuDmB,EAAMC,WAAWiF,aAC3EnG,IAAI,SAKpB,qBACIP,UAAU,oBACVkG,MAAO,CAAEhE,MAAO,QAASC,OAAQ,QAASwE,aAAc,MAAOC,IAAK,QAASC,KAAM,OAFvF,SAII,qBAAK7G,UAAU,yCAAf,SACI,qBAAKI,IAAG,UAAKC,uDAAL,YAAiDmB,EAAMC,WAAWqF,YAAcvG,IAAI,mBAW5G,sBAAKP,UAAU,8BAAf,UACI,sBACIA,UAAU,YADd,UAGI,cAAC,IAAD,CAAkBC,GAAG,yCACrB,sBAAMD,UAAU,kBAAhB,SACI,sBAAMA,UAAU,sBAAhB,SACI,qBAAKgC,MAAM,6BAA6BC,WAAW,+BAA+BC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAYC,QAAQ,MAAzI,SACI,oBAAG0E,OAAO,OAAOC,YAAY,IAAIzE,KAAK,OAAO0E,SAAS,UAAtD,UACI,yBAASC,OAAO,wBAChB,sBAAMC,EAAE,scAAsc5E,KAAK,UAAU0E,SAAS,UAAU3E,UAAU,sGAM9gB,+BACI,qBACItC,UAAU,+BACVgG,QAAS,kBAAMxE,EAAM4F,yBAAwB,IAFjD,SAII,cAAC,IAAD,CAAkBnH,GAAG,6CAIjC,qBAAKD,UAAU,cACf,sBAAKC,GAAG,uBAAuBD,UAAU,OAAzC,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,iBAAf,SAAgC,cAAC,IAAD,CAAkBC,GAAG,4CACrD,qBAAKD,UAAU,gBAAf,SACI,mBAAGgB,KAAK,IAAIhB,UAAU,mCAAtB,SAA0DwB,EAAMC,WAAW4F,iBAGnF,sBAAKrH,UAAU,YAAf,UACI,qBAAKA,UAAU,iBAAf,SAAgC,cAAC,IAAD,CAAkBC,GAAG,4CACrD,qBAAKD,UAAU,gBAAf,SACI,mBAAGgB,KAAK,IAAIhB,UAAU,mCAAtB,SAA0DwB,EAAMC,WAAW6F,gBAGnF,sBAAKtH,UAAU,YAAf,UACI,qBAAKA,UAAU,iBAAf,SAAgC,cAAC,IAAD,CAAkBC,GAAG,yCACrD,qBAAKD,UAAU,gBAAf,SACI,mBAAGgB,KAAK,IAAIhB,UAAU,mCAAtB,SAA0DwB,EAAMC,WAAW8F,wBCxF9FC,EAAkB,SAAChG,GAE5B,OACI,mCACI,sBAAKxB,UAAU,yBAAf,UACI,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,aAAf,SACI,6BAAI,cAAC,IAAD,CAAkBC,GAAG,mDAGjC,qBAAKD,UAAU,sBAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,uBAAOA,UAAU,2CAA2CC,GAAG,+BAA/D,SACI,uBAAOD,UAAU,6BAAjB,SACI,+BACI,oBAAIA,UAAU,OAAd,SAAqB,cAAC,IAAD,CAAkBC,GAAG,gDAC1C,wCACA,oBAAID,UAAU,gBAAd,SACI,wBACIiD,KAAK,SACLjD,UAAU,8DACVgG,QAAS,kBAAMxE,EAAMsE,6BAA4B,IAHrD,SAKI,sBAAM9F,UAAU,sBAAhB,SACI,sBAAKgC,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYG,KAAK,OAAxF,UACI,sBAAMI,QAAQ,OAAOH,EAAE,IAAIC,EAAE,KAAKP,MAAM,KAAKC,OAAO,IAAIO,GAAG,IAAIH,KAAK,YACpE,sBAAM0E,SAAS,UAAUQ,SAAS,UAAUN,EAAE,oKAAoK5E,KAAK,YACvN,sBAAM0E,SAAS,UAAUQ,SAAS,UAAUN,EAAE,8DAA8D5E,KAAK,YACjH,sBAAMI,QAAQ,OAAOsE,SAAS,UAAUQ,SAAS,UAAUN,EAAE,gLAAgL5E,KAAK,sC,QCMzRmF,GAtBkBvE,MAAaC,MAAM,CAC9CuE,SAAUxE,MAAaK,SAAS,yBAChCoE,SAAUzE,MAAaK,SAAS,wBAChC+D,MAAOpE,MACJoE,MAAM,sBACNjE,IAAI,EAAG,qBACPC,IAAI,GAAI,sBACRC,SAAS,qBAEZqE,YAAa1E,MAAa2E,cAC1BnE,cAAeR,MAAaG,IAAI,EAAG,iCAAiCE,SAAS,gCAY5C,SAAChC,GAEjBsC,cACAC,cADjB,IAEA,EAA8BC,oBAAkB,GAAhD,mBAAOjE,EAAP,KAAgBkE,EAAhB,KACA,EAA0BD,mBAAc,IAAxC,mBAAO+D,EAAP,KAAcC,EAAd,KACA,EAAoChE,mBAAc,IAAlD,mBAAOiE,EAAP,KAAmBC,EAAnB,KACA,EAAgClE,mBAAiB,IAAjD,mBAGA,GAHA,UAG6CE,aACzC,oBAAEC,EAAF,EAAEA,KAAF,MAAa,CACTC,QAAO,UAAED,EAAKE,YAAP,aAAE,EAAWC,OACpBC,UAAWJ,EAAKK,YAChB2D,QAAO,UAAEhE,EAAKE,YAAP,aAAE,EAAW8D,WACpB1D,MALAL,EAAR,EAAQA,QAASG,EAAjB,EAAiBA,UAQjB,GARA,EAA4B4D,QAQGnE,mBAA+C,KAA7BxC,EAAMC,WAAW2G,WAAlE,mBAAOC,EAAP,KAAiBC,EAAjB,KAGM1E,EAAsC,CACxC2E,SAAU/G,EAAMC,WAAW4F,UAC3BO,SAAUpG,EAAMC,WAAW6F,SAC3BC,MAAO/F,EAAMC,WAAW8F,MACxBM,YAAarG,EAAMC,WAAWoG,YAC9BlE,cAAe,IAWbe,EAASC,YAAU,CACrBf,gBAEAiB,SAAU,SAACC,GACPb,GAAW,GACXc,YAAW,WACP,IAAMyD,EAAW,IAAIC,SACrBD,EAASE,OAAO,SAAUlH,EAAM8C,QAChCkE,EAASE,OAAO,YAAanE,GAC7BiE,EAASE,OAAO,SAAU5D,EAAO8C,UACpB,KAAVG,GACCS,EAASE,OAAO,YAAaX,GAEf,KAAfE,GACCO,EAASE,OAAO,aAAcT,GAElCO,EAASE,OAAO,OAAQ5D,EAAOyD,UAC/BC,EAASE,OAAO,QAAS5D,EAAOyC,OAChCiB,EAASE,OAAO,UAAWL,EAAW,IAAM,KAC5CG,EAASE,OAAO,cAAe5D,EAAO+C,aACtCW,EAASE,OAAO,UAAWtE,GAC3BoE,EAASE,OAAO,gBAAiB5D,EAAOnB,eAExCgF,YAAmBH,GAClBvD,MAAK,SAACC,GACAA,EAAS/E,KAAKgF,SACbC,aAAaC,QAAQ,aAAcH,EAAS/E,KAAKmF,SACjDC,OAAOC,SAASC,SAChBxB,GAAW,IAERiB,EAAS/E,KAAKmF,SACbF,aAAaC,QAAQ,aAAcH,EAAS/E,KAAKmF,SACjDC,OAAOC,SAASC,SAChBxB,GAAW,KAEXmB,aAAaC,QAAQ,aAAc,gCACnCE,OAAOC,SAASC,SAChBxB,GAAW,SAUxB,QAQX,OACI,mCACI,eAACyB,EAAA,EAAD,CACIC,KAAMnE,EAAMoH,qBACZ/C,QAAS,kBAAMrE,EAAM4F,yBAAwB,IAC7C,kBAAgB,oBAHpB,UAKI,cAACrB,EAAA,EAAD,CAAa/F,UAAU,wCAAwCC,GAAG,oBAAlE,SACI,sBAAKD,UAAU,eAAeC,GAAG,8BAAjC,UACI,oBAAID,UAAU,YAAd,SACI,cAAC,IAAD,CAAkBC,GAAG,sDAEzB,qBAAKD,UAAU,8CAA8CgG,QAAS,kBAAMxE,EAAM4F,yBAAwB,IAA1G,SACI,sBAAMpH,UAAU,sBAAhB,SACI,qBAAKgC,MAAM,6BAA6BC,WAAW,+BAA+BC,MAAM,OAAOC,OAAO,OAAOC,QAAQ,YAAYC,QAAQ,MAAzI,SACI,oBAAGC,UAAU,qHAAqHC,KAAK,UAAvI,UACI,sBAAMA,KAAK,UAAUC,EAAE,IAAIC,EAAE,IAAIP,MAAM,KAAKC,OAAO,IAAIO,GAAG,MAC1D,sBAAMH,KAAK,UAAUI,QAAQ,MAAML,UAAU,oFAAoFE,EAAE,IAAIC,EAAE,IAAIP,MAAM,KAAKC,OAAO,IAAIO,GAAG,oBAO9L,cAACuD,EAAA,EAAD,UACI,uBAAMC,MAAO,CAAEC,QAAS,aAAenG,UAAU,OAAO6E,SAAUH,EAAO0B,aAAcnG,GAAG,4BAA1F,UACI,qBACID,UAAU,4BACVkG,MAAO,CAAE2C,SAAU,QAFvB,SAII,qBAAK7I,UAAU,yCAAyCC,GAAG,8BAA8B,iBAAe,OAAO,0BAAwB,6BAA6B,4BAA0B,OAAO,8BAA4B,+BAA+B,0BAAwB,+BAA+B,wBAAsB,QAA7U,SACI,sBAAKA,GAAG,iCAAiCD,UAAU,OAAnD,UACI,sBAAKA,UAAU,OAAf,UACI,wBAAOA,UAAU,yBAAjB,UACI,+BACI,cAAC,IAAD,CAAkBC,GAAG,gDAEzB,mBAAGD,UAAU,sCAAsC,iBAAe,UAAU8I,MAAM,2CAEtF,qBAAK9I,UAAU,OAAf,SACI,sBAAKA,UAAU,kCAAkC,sBAAoB,OAAOkG,MAAO,CAAC6C,gBAAgB,OAAD,OAASC,YAAc,4BAAvB,MAAnG,UACI,qBACIhJ,UAAU,sCACVkG,MAAO,CAAC6C,gBAAgB,OAAD,OAAmB,KAAVhB,EAAA,UAAkB1H,uDAAlB,YAA8DmB,EAAMC,WAAWqF,YAAemC,IAAIC,gBAAgBnB,GAA3H,QAE3B,wBAAO/H,UAAU,gFAAgF,6BAA2B,SAAS,iBAAe,UAAU8I,MAAM,gBAApK,UACI,mBAAG9I,UAAU,2BACb,uBAAOmJ,SAAU,SAACC,GAAD,OA9GvC,SAACA,GACvBpB,EAASoB,EAAEC,OAAOC,MAAM,IA6G4CC,CAAkBH,IAAInG,KAAK,OAAOH,KAAK,SAAS0G,OAAO,sBAC/E,uBAAOvG,KAAK,SAASH,KAAK,qBAE9B,sBAAM9C,UAAU,gFAAgF,6BAA2B,SAAS,iBAAe,UAAU8I,MAAM,gBAAnK,SACI,mBAAG9I,UAAU,mBAEjB,sBAAMA,UAAU,gFAAgF,6BAA2B,SAAS,iBAAe,UAAU8I,MAAM,gBAAnK,SACI,mBAAG9I,UAAU,2BAM7B,sBAAKA,UAAU,eAAf,UACI,uBAAOA,UAAU,kBAAjB,SACI,cAAC,IAAD,CAAkBC,GAAG,oDAGN,IAAdgI,EACG,8BACqC,WAAhCzG,EAAMC,WAAWiF,YACd,mCACI,qBACItG,IAAG,UAAKC,4DAAL,iBACHL,UAAU,mBAIlB,mCACI,qBACII,IAAG,UAAKC,4DAAL,YAAuDmB,EAAMC,WAAWiF,aAC3E1G,UAAU,qBAM1B,8BACI,qBAAKI,IAAK6I,IAAIC,gBAAgBjB,GAAajI,UAAU,mBAIjE,8BACI,uBAAOiD,KAAK,OAAOhD,GAAG,QAAQuJ,OAAO,wBAAwBL,SAAU,SAACC,GAAD,OArJhF,SAACA,GAC5BlB,EAAckB,EAAEC,OAAOC,MAAM,IAoJqFG,CAAuBL,WAI7G,sBAAKpJ,UAAU,cAAf,UACI,uBAAOA,UAAU,6BAAjB,SAA8C,cAAC,IAAD,CAAkBC,GAAG,4CACnE,mCACIgD,KAAK,OACLjD,UAAU,kCACV6C,YAAY,aACR6B,EAAO4B,cAAc,cAE5B5B,EAAO6B,QAAQgC,UAAY7D,EAAO8B,OAAO+B,UACtC,qBAAKvI,UAAU,+BAAf,SACI,qBAAKA,UAAU,gBAAf,SAAgC0E,EAAO8B,OAAO+B,gBAI1D,sBAAKvI,UAAU,cAAf,UACI,uBAAOA,UAAU,6BAAjB,SAA8C,cAAC,IAAD,CAAkBC,GAAG,4CACnE,mCACIgD,KAAK,OACLjD,UAAU,kCACV6C,YAAY,aACR6B,EAAO4B,cAAc,cAE5B5B,EAAO6B,QAAQqB,UAAYlD,EAAO8B,OAAOoB,UACtC,qBAAK5H,UAAU,+BAAf,SACI,qBAAKA,UAAU,gBAAf,SAAgC0E,EAAO8B,OAAOoB,gBAI1D,sBAAK5H,UAAU,cAAf,UACI,wBAAOA,UAAU,6BAAjB,UACI,+BAAM,cAAC,IAAD,CAAkBC,GAAG,yCAC3B,mBAAGD,UAAU,sCAAsC,iBAAe,UAAU8I,MAAM,oCAEtF,mCACI7F,KAAK,QACLjD,UAAU,kCACV6C,YAAY,SACR6B,EAAO4B,cAAc,WAE5B5B,EAAO6B,QAAQgB,OAAS7C,EAAO8B,OAAOe,OACnC,qBAAKvH,UAAU,+BAAf,SACI,qBAAKA,UAAU,gBAAf,SAAgC0E,EAAO8B,OAAOe,aAiB1D,sBAAKvH,UAAU,SAAf,UACI,uBACIiD,KAAK,WACLjD,UAAU,wBACV0J,eAAgBrB,EAChBc,SAjKZ,WACxBb,GAAYD,MAkKoB,uBAAOrI,UAAU,6BAAjB,SACI,+BAAM,cAAC,IAAD,CAAkBC,GAAG,6CAInC,sBAAKD,UAAU,cAAf,UACI,uBAAOA,UAAU,6BAAjB,SAA8C,cAAC,IAAD,CAAkBC,GAAG,8CACnE,sCACID,UAAU,kCACV2J,KAAM,GACFjF,EAAO4B,cAAc,iBAG5B5B,EAAO6B,QAAQsB,aAAenD,EAAO8B,OAAOqB,aACzC,qBAAK7H,UAAU,+BAAf,SACI,qBAAKA,UAAU,4BAAf,SAA4C0E,EAAO8B,OAAOqB,mBAKtE,sBAAK7H,UAAU,cAAf,UACI,uBAAOA,UAAU,6BAAjB,SAA8C,cAAC,IAAD,CAAkBC,GAAG,yCACnE,mCACIgD,KAAK,WACLjD,UAAU,+CACV6C,YAAY,kBACR6B,EAAO4B,cAAc,mBAE5B5B,EAAO6B,QAAQ5C,eAAiBe,EAAO8B,OAAO7C,eAC3C,qBAAK3D,UAAU,+BAAf,SACI,qBAAKA,UAAU,4BAAf,SAA4C0E,EAAO8B,OAAO7C,4BAOlF,sBAAK3D,UAAU,2BAAf,UACI,wBACIiD,KAAK,QACLjD,UAAU,qBACVgG,QAAS,kBAAMxE,EAAM4F,yBAAwB,IAHjD,SAKI,cAAC,IAAD,CAAkBnH,GAAG,0CAEzB,yBAAQgD,KAAK,SAASjD,UAAU,kBAAhC,UACI,sBAAMA,UAAU,kBAAhB,SAAkC,cAAC,IAAD,CAAkBC,GAAG,uBACtDF,GACG,sBAAMC,UAAU,yE,8CC1U9C4J,EAA0B,SAACpI,GA8B7B,OACI,qCACI,qBAAK0E,MAAO,CAAE2D,UAAW,QAAzB,SACI,cAAChK,EAAA,EAAD,CACIC,UAAW0B,EAAMsI,aACjB/J,SAAS,MAIjB,qBAAKmG,MAAO,CAAE2D,UAAW,QAAzB,SACI,cAAC3I,EAAA,EAAD,CACIpB,UAAW0B,EAAMuI,cACjBhK,SAAS,UCzCvBH,EAAiB,CACnB,EAAM,OACN,EAAK,WACL,EAAK,WAOHoK,EAAmC,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAExC,EAA8BjG,oBAAkB,GAAhD,mBAUMkG,GAVN,UAUiBnG,eAqBjB,OACI,sBAAK/D,UAAS,OAAUkG,MAAO,CAAE2D,UAAW,QAA5C,UAEA,qBAAK7J,UAAU,4BAAf,SACI,oBAAIA,UAAU,2CAAd,SACI,sBAAMA,UAAU,iCAAhB,SACI,cAAC,IAAD,CAAkBC,GAAG,8CAQjC,qBAAKD,UAAU,iBAAf,SAEI,qBAAKA,UAAU,mBAAf,SAEA,wBAAOA,UAAU,+BAAjB,UAEI,gCACI,qBAAIA,UAAU,gCAAd,UACI,oBAAIA,UAAU,iCAAd,SACI,cAAC,IAAD,CAAkBC,GAAG,kDAEzB,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,+CAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,0CAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,2CAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,iDAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,mDAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,gDAC7D,oBAAID,UAAU,oDAAd,SAAkE,cAAC,IAAD,CAAkBC,GAAG,iDAK/F,gCACKgK,EAAa/J,KAAI,SAACC,GAAD,OACd,+BACI,6BACA,sBAAKH,UAAU,4BAAf,UACI,qBAAKA,UAAU,0BAAf,SACA,qBACII,IAAG,UAAKC,uDAAL,YAAkDF,EAAKG,aAC1DN,UAAU,GACVO,IAAI,OAGR,sBAAKP,UAAU,2CAAf,UACA,sBAAMA,UAAU,mDAAhB,SACKG,EAAKK,kBAEV,uBAAMR,UAAU,6CAAhB,UACI,cAAC,IAAD,CAAkBC,GAAG,gCADzB,KAEI,+BAAOL,EAAUO,EAAKM,mBAK9B,6BACA,sBAAMT,UAAU,uEAAhB,SACKG,EAAKgK,eAIV,6BACA,sBAAMnK,UAAU,uEAAhB,UArFKW,EAsFoBR,EAAKiK,MArF9BzJ,EAAcE,MAAM,EAAG,GAGtB,SAFHF,EAAcE,MAAM,SAwFlB,6BACA,uBAAMb,UAAU,uEAAhB,UACKG,EAAKkK,YADV,IACuB,sBAAMrK,UAAU,OAAhB,SAAwBG,EAAKmK,qBAGpD,6BACA,sBAAMtK,UAAU,uEAAhB,SAC2B,OAAtBG,EAAKmK,cAAyB,OAAS,aAG5C,6BACA,sBAAMtK,UAAU,uEAAhB,SACoB,QAAfG,EAAKoK,OACF,qBAAKvI,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKI,KAAK,eAAevC,UAAU,uCAAuCoC,QAAQ,YAA5I,SACI,sBAAM+E,EAAE,8LAGZ,qBAAKnF,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKI,KAAK,eAAevC,UAAU,kCAAkCoC,QAAQ,YAAvI,SACI,sBAAM+E,EAAE,8NAKpB,6BACA,sBAAMnH,UAAU,uEAAhB,SACoB,KAAfG,EAAKqK,OACF,qBAAKxI,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKI,KAAK,eAAevC,UAAU,uCAAuCoC,QAAQ,YAA5I,SACI,sBAAM+E,EAAE,8LAGZ,qBAAKnF,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKI,KAAK,eAAevC,UAAU,kCAAkCoC,QAAQ,YAAvI,SACI,sBAAM+E,EAAE,8NAMpB,oBAAInH,UAAU,4BAAd,SACI,sBACIA,UAAU,iDACVgG,QAAS,kBAAMkE,EAAS,gBAAiB,CAACO,MAAOtK,EAAKgK,cAF1D,SAII,cAAC,IAAD,CAAkBlK,GAAG,sDApIzB,IAACU,kBCzB3Bf,EAAiB,CACnB,EAAM,OACN,EAAK,WACL,EAAK,WAOH8K,EAAuC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBAS5C,EAA8B3G,oBAAkB,GAAhD,mBAGM4G,GAHN,UACiB7G,cAEW,SAACpD,GAIzB,OAHoBA,EAAcE,MAAM,EAAG,GAGtB,SAFHF,EAAcE,MAAM,MAiB1C,OACI,sBAAKb,UAAS,OAAUkG,MAAO,CAAE2D,UAAW,QAA5C,UAEA,qBAAK7J,UAAU,4BAAf,SACI,oBAAIA,UAAU,2CAAd,SACI,sBAAMA,UAAU,iCAAhB,SAAiD,cAAC,IAAD,CAAkBC,GAAG,iDAM9E,qBAAKD,UAAU,iBAAf,SAEI,qBAAKA,UAAU,mBAAf,SAEA,wBAAOA,UAAU,+BAAjB,UAEI,gCACI,qBAAIA,UAAU,gCAAd,UACI,oBAAIA,UAAU,iCAAd,SAA+C,cAAC,IAAD,CAAkBC,GAAG,qDACpE,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,gDAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,4CAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,0CAC7D,oBAAID,UAAU,0BAAd,SAAwC,cAAC,IAAD,CAAkBC,GAAG,8CAC7D,oBAAID,UAAU,oDAAd,SAAkE,cAAC,IAAD,CAAkBC,GAAG,wDAK/F,gCACK0K,EAAgBzK,KAAI,SAACC,GAAD,OACjB,+BACI,6BACA,sBAAKH,UAAU,4BAAf,UACI,qBAAKA,UAAU,0BAAf,SACA,qBACII,IAAG,UAAKC,uDAAL,YAAkDF,EAAKG,aAC1DN,UAAU,GACVO,IAAI,OAGR,sBAAKP,UAAU,2CAAf,UACA,sBAAMA,UAAU,mDAAhB,SACKG,EAAKK,kBAEV,uBAAMR,UAAU,6CAAhB,UACI,cAAC,IAAD,CAAkBC,GAAG,gCADzB,KAEI,+BAAOL,EAAUO,EAAKM,mBAK9B,6BACA,sBAAMT,UAAU,uEAAhB,SACK6K,KAAKC,MAAM3K,EAAK4K,SAASC,WAI9B,6BACA,sBAAMhL,UAAU,uEAAhB,SACK4K,EAAoBzK,EAAK8K,eAI9B,6BACA,sBAAMjL,UAAU,uEAAhB,SACK4K,EAAoBzK,EAAK+K,aAG9B,6BACA,uBAAMlL,UAAU,uEAAhB,UAC6B,KAAxBG,EAAKgL,iBACF,qBAAKnJ,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKI,KAAK,eAAevC,UAAU,uCAAuCoC,QAAQ,YAA5I,SACI,sBAAM+E,EAAE,8LAIS,KAAxBhH,EAAKgL,iBACF,qBAAKnJ,MAAM,6BAA6BE,MAAM,KAAKC,OAAO,KAAKI,KAAK,eAAevC,UAAU,kCAAkCoC,QAAQ,YAAvI,SACI,sBAAM+E,EAAE,+NAMpB,qBAAInH,UAAU,4BAAd,UACwB,YAAnBG,EAAKiL,YACF,mBACIpK,KAAI,yCAAoCb,EAAKmB,SAC7CtB,UAAU,iDAFd,SAII,cAAC,IAAD,CAAkBC,GAAG,sCAIT,UAAnBE,EAAKiL,YACF,mBACIpK,KAAI,6CAAwCb,EAAKmB,SACjDtB,UAAU,iDAFd,SAII,cAAC,IAAD,CAAkBC,GAAG,8D,SCwB9CoL,UAxJQ,SAAC7J,GAEpB,IACM8C,EADUgH,cAATb,MAEP,EAA8BzG,oBAAS,GAAvC,mBAAOuH,EAAP,KAAgBC,EAAhB,KACA,EAA8BxH,oBAAS,GAAvC,mBAAOjE,EAAP,KAAgBkE,EAAhB,KAEA,EAAoCD,mBAAc,MAAlD,mBAAOvC,EAAP,KAAmBgK,EAAnB,KACA,EAAwCzH,mBAAqB,IAA7D,mBAAOiG,EAAP,KAAqByB,EAArB,KACA,EAA8C1H,mBAAqB,IAAnE,mBAAO2G,EAAP,KAAwBgB,EAAxB,KACA,EAAsD3H,mBAAc,IAApE,mBAAO4H,EAAP,KAA4BC,EAA5B,KACA,EAAwD7H,mBAAc,IAAtE,mBAAO8H,EAAP,KAA6BC,EAA7B,KAEA,EAAwD/H,oBAAkB,GAA1E,mBAAO4E,EAAP,KAA6BxB,EAA7B,KACA,EAAgEpD,oBAAkB,GAAlF,mBAAO4B,GAAP,KAAiCE,GAAjC,KAEMkG,GAAa5G,aAAa6G,QAAQ,cACxC,GAAkDjI,mBAAwBgI,IAA1E,qBAAOE,GAAP,MAA0BC,GAA1B,MAEMC,GAAahH,aAAa6G,QAAQ,cACxC,GAAkDjI,mBAAwBoI,IAA1E,qBAAOC,GAAP,MAA0BC,GAA1B,MAiDA,OA/CyB,OAAtBJ,SAAoDK,IAAtBL,IAC7BnH,YAAW,WACTyG,GAAW,GACXpG,aAAaoH,WAAW,cACxBzH,YAAW,WACToH,GAAqB,QACpB,OACF,KAGkB,OAAtBE,SAAoDE,IAAtBF,IAC7BtH,YAAW,WACPyG,GAAW,GACXpG,aAAaoH,WAAW,cACxBzH,YAAW,WACPuH,GAAqB,QACtB,OACJ,KAGPG,qBAAU,WACNC,YAAcpI,GACbW,MAAK,SAACC,GACHuG,EAAcvG,EAAS/E,KAAKwM,aAC5BjB,EAAgBxG,EAAS/E,KAAKyM,eAC9BjB,EAAmBzG,EAAS/E,KAAK0M,uBAEtC,IAEHJ,qBAAU,WACHhL,GACCqL,YAAwCrL,EAAWI,eAClDoD,MAAK,SAACC,GACAA,EAAS/E,KAAKgF,UACb4G,EAAwB7G,EAAS/E,KAAKL,WAEtCiN,YAAyCtL,EAAWC,iBACnDuD,MAAK,SAAC9E,GACH0L,EAAuB1L,GACvB8D,GAAW,YAM5B,CAACxC,IAGA,sCACK1B,GACG,qBAAKC,UAAU,gCAAgCC,GAAG,UAAlD,SACI,sBAAKA,GAAG,uBAAuBD,UAAU,YAAzC,UACI,sBAAKA,UAAU,iCAAf,UACI,sBAAKA,UAAU,sDAAf,UACI,cAAC,EAAD,CACIsE,OAAQA,EACRsE,qBAAsBA,EACtBxB,wBAAyBA,EACzB3F,WAAYA,IAEhB,cAAC,EAAD,CACI6C,OAAQA,EACR7C,WAAYA,OAGpB,sBAAKzB,UAAU,6BAAf,UAC2B,OAAtBkM,SAAoDK,IAAtBL,IAAyD,KAAtBA,GAC9D,cAAC,IAAD,CAAc5G,QAAS4G,GAAmBX,QAASA,IACnD,KAEmB,OAAtBc,SAAoDE,IAAtBF,IAAyD,KAAtBA,GAC9D,cAAC,IAAD,CAAa/G,QAAS+G,GAAmBd,QAASA,IAClD,KAEJ,qBAAKvL,UAAU,cAAcC,GAAG,eAAhC,SACI,sBAAKD,UAAU,uBAAuBC,GAAG,iCAAiC+M,KAAK,WAA/E,UACI,cAAC,EAAD,CACI1I,OAAUA,EACVsB,yBAA0BA,GAC1BE,4BAA6BA,KAGjC,cAAC,EAAD,CACImE,aAAcA,IAGlB,cAAC,EAAD,CACIU,gBAAiBA,IAGrB,cAAC,EAAD,CACIb,aAAc8B,EACd7B,cAAe+B,eAMnC,cAAC,EAAD,CACIxH,OAAQA,EACRsE,qBAAsBA,EACtBxB,wBAAyBA,EACzB3F,WAAYA,IAEhB,cAAC,EAAD,CAAmB6C,OAAQA,IAC3B,cAAC,EAAD,CACIA,OAAQA,EACRsB,yBAA0BA,GAC1BE,4BAA6BA,UAM7C/F,GACI,qBAAKC,UAAU,qBAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,sBAAKA,UAAU,4CAAf,UACI,sBAAMA,UAAU,oBAAhB,qBADJ,IACuD,uBACnD,sBAAMA,UAAU,OAAhB,SACI,cAACiN,EAAA,EAAD","file":"static/js/4.e43d44e7.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { CircularProgress } from '@mui/material'\r\nimport { useState, useEffect } from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\ntype Props = {\r\n    claimData: Array<any>\r\n    loading: boolean\r\n}\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\nconst EthereumRoyaltyClaimHistory: React.FC<Props> = ({claimData, loading}) => {\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    return (\r\n        <div className={`card`}>\r\n        {/* begin::Header */}\r\n        <div className='card-header border-0 pt-5'>\r\n            <h3 className='card-title align-items-start flex-column'>\r\n                <span className='card-label fw-bolder fs-3 mb-1'><FormattedMessage id='SETTINGS_PAGE.ROYALTY_CLAIM_HISTORIES_ETH' /></span>\r\n                {/* <span className='text-muted mt-1 fw-bold fs-7'>Over 500 new products</span> */}\r\n            </h3>\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Body */}\r\n        <div className='card-body py-3'>\r\n            {/* begin::Table container */}\r\n            <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table align-middle gs-0 gy-4'>\r\n                {/* begin::Table head */}\r\n                <thead>\r\n                    <tr className='fw-bolder text-muted bg-light'>\r\n                        <th className='ps-4 min-w-150px rounded-start'><FormattedMessage id='SETTINGS_PAGE.TOKEN_DETAILS' /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id='ADMIN_COLLECTION_PREVIEW.DEPOSIT_NO' /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id='SETTINGS_PAGE.CLAIMER_ADDRESS' /></th>\r\n                        <th className='text-center min-w-200px'><FormattedMessage id='SETTINGS_PAGE.CLAIMED_AMOUNT' /></th>\r\n                        <th className='text-center min-w-200px text-end rounded-end pe-5'><FormattedMessage id='SETTINGS_PAGE.TRANSACTIONS' /></th>\r\n                    </tr>\r\n                </thead>\r\n                {/* end::Table head */}\r\n                {/* begin::Table body */}\r\n                {!loading && \r\n                    <tbody>\r\n                        {claimData.map((data: any) => (\r\n                            <tr>\r\n                                <td>\r\n                                <div className='d-flex align-items-center'>\r\n                                    <div className='symbol symbol-50px me-5'>\r\n                                    <img\r\n                                        src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${data.token_image}`}\r\n                                        className=''\r\n                                        alt=''\r\n                                    />\r\n                                    </div>\r\n                                    <div className='d-flex justify-content-start flex-column'>\r\n                                    <span className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\r\n                                        {data.collection_name}\r\n                                    </span>\r\n                                    <span className='text-muted fw-bold text-muted d-block fs-7'>\r\n                                        <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /> : \r\n                                        <span>{tokenType[data.tier.tier]}</span>\r\n                                    </span>\r\n                                    </div>\r\n                                </div>\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.depositNumber}\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Paid</span> */}\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {shrinkWalletAddress(data.claimer)}\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Rejected</span> */}\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {parseFloat(data.claimedAmount) / 10 ** 18} ETH\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Insurance</span> */}\r\n                                </td>\r\n                                <td className='text-center text-end pe-5'>\r\n                                    <a\r\n                                        href={`https://goerli.etherscan.io/tx/${data.txHash}`}\r\n                                        className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                    >\r\n                                        <FormattedMessage id='SETTINGS_PAGE.VIEW_ON_ETHERSCAN' />\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                }\r\n                {/* end::Table body */}\r\n            </table>\r\n            {/* end::Table */}\r\n            </div>\r\n            {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {EthereumRoyaltyClaimHistory}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { CircularProgress } from '@mui/material'\r\nimport React from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../../../../../_metronic/helpers'\r\n\r\ntype Props = {\r\n    claimData: Array<any>\r\n    loading: boolean\r\n}\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\nconst KlaytnRoyaltyClaimHistory: React.FC<Props> = ({claimData, loading}) => {\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    return (\r\n        <div className={`card`}>\r\n        {/* begin::Header */}\r\n        <div className='card-header border-0 pt-5'>\r\n            <h3 className='card-title align-items-start flex-column'>\r\n            <span className='card-label fw-bolder fs-3 mb-1'><FormattedMessage id='SETTINGS_PAGE.ROYALTY_CLAIM_HISTORIES_KLAY' /></span>\r\n            {/* <span className='text-muted mt-1 fw-bold fs-7'>Over 500 new products</span> */}\r\n            </h3>\r\n            {/* <div className='card-toolbar'>\r\n            <a href='#' className='btn btn-sm btn-light-primary'>\r\n                <KTSVG path='/media/icons/duotune/arrows/arr075.svg' className='svg-icon-2' />\r\n                New Member\r\n            </a>\r\n            </div> */}\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Body */}\r\n        <div className='card-body py-3'>\r\n            {/* begin::Table container */}\r\n            <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table align-middle gs-0 gy-4'>\r\n                {/* begin::Table head */}\r\n                <thead>\r\n                <tr className='fw-bolder text-muted bg-light'>\r\n                    <th className='ps-4 min-w-150px rounded-start'><FormattedMessage id='SETTINGS_PAGE.TOKEN_DETAILS' /></th>\r\n                    <th className='text-center min-w-125px'><FormattedMessage id='ADMIN_COLLECTION_PREVIEW.DEPOSIT_NO' /></th>\r\n                    <th className='text-center min-w-125px'><FormattedMessage id='SETTINGS_PAGE.CLAIMER_ADDRESS' /></th>\r\n                    <th className='text-center min-w-200px'><FormattedMessage id='SETTINGS_PAGE.CLAIMED_AMOUNT' /></th>\r\n                    <th className='text-center min-w-200px text-end rounded-end pe-5'><FormattedMessage id='SETTINGS_PAGE.TRANSACTIONS' /></th>\r\n                </tr>\r\n                </thead>\r\n                {/* end::Table head */}\r\n                {/* begin::Table body */}\r\n                {!loading && \r\n                    <tbody>\r\n                        {claimData.map((data: any) => (\r\n                            <tr>\r\n                                <td>\r\n                                <div className='d-flex align-items-center'>\r\n                                    <div className='symbol symbol-50px me-5'>\r\n                                    <img\r\n                                        src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${data.token_image}`}\r\n                                        className=''\r\n                                        alt=''\r\n                                    />\r\n                                    </div>\r\n                                    <div className='d-flex justify-content-start flex-column'>\r\n                                    <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\r\n                                        {data.collection_name}\r\n                                    </a>\r\n                                    <span className='text-muted fw-bold text-muted d-block fs-7'>\r\n                                        <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /> : \r\n                                        <span>{tokenType[data.token_tier]}</span>\r\n                                    </span>\r\n                                    </div>\r\n                                </div>\r\n                                </td>\r\n                                <td>\r\n                                <a href='#' className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.deposit_number}\r\n                                </a>\r\n                                </td>\r\n                                <td>\r\n                                <a href='#' className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {shrinkWalletAddress(data.claimer)}\r\n                                </a>\r\n                                </td>\r\n                                <td>\r\n                                <a href='#' className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {parseFloat(data.claimed_amount) / 10 ** 18} KLAY\r\n                                </a>\r\n                                </td>\r\n                                <td className='text-center text-end pe-5'>\r\n                                    <a\r\n                                        href={`https://baobab.scope.klaytn.com/tx/${data.tx_hash}`}\r\n                                        className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                    >\r\n                                        <FormattedMessage id='SETTINGS_PAGE.VIEW_ON_KLAYTNSCOPE' />\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                }\r\n                {/* end::Table body */}\r\n            </table>\r\n            {/* end::Table */}\r\n            </div>\r\n            {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {KlaytnRoyaltyClaimHistory}\r\n","import { FormattedMessage } from \"react-intl\"\r\nimport { useSelector, shallowEqual } from \"react-redux\"\r\nimport { RootState } from \"../../../../../setup\"\r\n\r\nexport const ConnectedAccounts = (props: any) => {\r\n\r\n    type GetShortWalletAddress = (walletAddress: string) => (string)\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        if(walletAddress == \"\") return \"No Connected Wallet\"\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-5 mb-xl-8\">\r\n                <div className=\"card-header border-0\">\r\n                    <div className=\"card-title\">\r\n                        <h3 className=\"fw-bolder m-0\"><FormattedMessage id=\"ADMIN.VIEW_USER.CONNECTED_ACCOUNTS.TITLE\" /></h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body pt-2\">\r\n                    <div className=\"py-2\">\r\n                        <div className=\"d-flex flex-stack\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\"><FormattedMessage id=\"ADMIN.VIEW_USER.CONNECTED_ACCOUNTS.METAMASK\" /></a>\r\n                                    <div \r\n                                        className=\"fs-6 fw-bold text-muted text-hover-primary cursor-pointer\"\r\n                                    >\r\n                                        {props.userDetail.metamask_wallet == \"\" ? \"No Connected Wallet\" : props.userDetail.metamask_wallet}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"separator separator-dashed my-5\"></div>\r\n                        <div className=\"d-flex flex-stack\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\"><FormattedMessage id=\"ADMIN.VIEW_USER.CONNECTED_ACCOUNTS.CUSTODIAL_ETH\" /></a>\r\n                                    <div className=\"fs-6 fw-bold text-muted text-hover-primary cursor-pointer\">\r\n                                        {props.userDetail.custodial_wallet_eth == \"\" ? \"No Connected Wallet\" : props.userDetail.custodial_wallet_eth}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"separator separator-dashed my-5\"></div>\r\n                        <div className=\"d-flex flex-stack\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\"><FormattedMessage id=\"ADMIN.VIEW_USER.CONNECTED_ACCOUNTS.CUSTODIAL_KLAY\" /></a>\r\n                                    <div className=\"fs-6 fw-bold text-muted text-hover-primary cursor-pointer\">\r\n                                        {props.userDetail.custodial_wallet_klay == \"\" ? \"No Connected Wallet\" : props.userDetail.custodial_wallet_klay}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"separator separator-dashed my-5\"></div>\r\n                        <div className=\"d-flex flex-stack\">\r\n                            <div className=\"d-flex\">\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\"><FormattedMessage id=\"ADMIN.VIEW_USER.CONNECTED_ACCOUNTS.KAIKAS\" /></a>\r\n                                    <div className=\"fs-6 fw-bold text-muted text-hover-primary cursor-pointer\">\r\n                                        {props.userDetail.kaikas_wallet == \"\" ? \"No Connected Wallet\" : props.userDetail.kaikas_wallet}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"separator separator-dashed my-5\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { RootState } from '../../../../../setup'\r\n\r\nexport const ShowWalletAddress = (props: any) => {\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"modal fade\" id=\"kt_modal_show_wallet_address\" tabIndex={-1} aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-dialog-centered mw-650px\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2 className=\"fw-bolder\">Meta Mask</h2>\r\n                            <div className=\"btn btn-icon btn-sm btn-active-icon-primary\" data-bs-dismiss='modal'>\r\n                                <span className=\"svg-icon svg-icon-1\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                                        <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#000000\">\r\n                                            <rect fill=\"#000000\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                            <rect fill=\"#000000\" opacity=\"0.5\" transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </span>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-body scroll-y mx-5 mx-xl-15 my-7\">\r\n                            <form id=\"kt_modal_update_email_form\" className=\"form\" action=\"#\">\r\n                                <div className=\"fv-row mb-7\">\r\n                                    <label className=\"fs-6 fw-bold form-label mb-2\">\r\n                                        <span>Wallet Address</span>\r\n                                    </label>\r\n                                    <input className=\"form-control form-control-solid\" placeholder=\"\" name=\"profile_email\" value={'oxMetamask'} disabled={true}/>\r\n                                </div>\r\n                                <div className=\"text-center pt-15\">\r\n                                    <button type=\"reset\" className=\"btn btn-danger me-3\" data-bs-dismiss='modal'>Close</button>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react'\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { useNavigate } from 'react-router'\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogActions } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { DialogTitle } from '@mui/material';\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport { RootState } from '../../../../../setup'\r\nimport * as admin from '../../../auth/redux/AuthRedux'\r\nimport {FormattedMessage} from 'react-intl'\r\nimport { updatePasswordForAdmin } from '../../api';\r\n\r\nconst passwordFormValidationSchema = Yup.object().shape({\r\n    newPassword: Yup.string()\r\n      .min(3, 'Minimum 3 symbols')\r\n      .max(50, 'Maximum 50 symbols')\r\n      .required('Password is required'),\r\n    passwordConfirmation: Yup.string()\r\n      .min(3, 'Minimum 3 symbols')\r\n      .max(50, 'Maximum 50 symbols')\r\n      .required('Password is required')\r\n      .oneOf([Yup.ref('newPassword'), null], 'Passwords does not match'),\r\n    adminPassword: Yup.string().min(6, 'Require mininmum 6 characters').required('Admin Password is required')\r\n})\r\n\r\ninterface PasswordChangeModel {\r\n    newPassword: string\r\n    passwordConfirmation: string\r\n    adminPassword: string\r\n}\r\n\r\nconst initialValues: PasswordChangeModel = {\r\n    newPassword: '',\r\n    passwordConfirmation: '',\r\n    adminPassword: ''\r\n}\r\n\r\nexport const UpdatePassword = (props: any) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n\r\n    const { adminID, authToken }: any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            adminID: auth.user?.userID,\r\n            authToken: auth.accessToken\r\n        }), shallowEqual\r\n    )\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: passwordFormValidationSchema,\r\n        onSubmit: (values) => {\r\n            setLoading(true)\r\n            setTimeout(() => {\r\n\r\n                updatePasswordForAdmin(adminID, values.adminPassword, props.userID, values.newPassword)\r\n                .then((response) => {\r\n                    if(response.data.success) {\r\n                        localStorage.setItem('resSuccess', response.data.message)\r\n                        window.location.reload()\r\n                        setLoading(false)\r\n                    } else {\r\n                        if(response.data.message) {\r\n                            localStorage.setItem('resFailure', response.data.message)\r\n                            window.location.reload()\r\n                            setLoading(false)\r\n                        } else {\r\n                            localStorage.setItem('resFailure', 'Password update failed. Please try agein later.')\r\n                            window.location.reload()\r\n                            setLoading(false)\r\n                        }\r\n                    }\r\n                    \r\n                })\r\n            }, 1000)\r\n        }\r\n    })\r\n    return (\r\n        <>\r\n            <Dialog \r\n                open={props.showPasswordUpdateDialog} \r\n                onClose={() => props.setShowPasswordUpdateDialog(false)} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle className='px-5 text-center fw-bolder text-muted' id=\"form-dialog-title\">\r\n                    <div className=\"modal-header\">\r\n                        <h2 className=\"fw-bolder\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_UPDATE_CARD.PASSWORD.UPDATE_PASSWORD\" /></h2>\r\n                        <div className=\"btn btn-icon btn-sm btn-active-icon-primary\" onClick={() => props.setShowPasswordUpdateDialog(false)}>\r\n                            <span className=\"svg-icon svg-icon-1\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                                    <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#000000\">\r\n                                        <rect fill=\"#000000\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                        <rect fill=\"#000000\" opacity=\"0.5\" transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                    </g>\r\n                                </svg>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form style={{ padding: '10px 50px' }} id=\"kt_modal_update_password_form\" className=\"form\" onSubmit={formik.handleSubmit}>\r\n                        <div className=\"mb-10 fv-row\" data-kt-password-meter=\"true\">\r\n                            <div className=\"mb-1\">\r\n                                <label className=\"required form-label fw-bold fs-6 mb-2\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_UPDATE_CARD.PASSWORD.NEW_PASSWORD\" /></label>\r\n                                <div className=\"position-relative mb-3\">\r\n                                    <input \r\n                                        className=\"form-control form-control-lg form-control-solid\" \r\n                                        type=\"password\" \r\n                                        placeholder=\"New Password\" \r\n                                        autoComplete=\"off\" \r\n                                        {...formik.getFieldProps('newPassword')}\r\n                                    />\r\n                                    {formik.touched.newPassword && formik.errors.newPassword && (\r\n                                        <div className='fv-plugins-message-container'>\r\n                                            <div className='fv-help-block text-danger'>{formik.errors.newPassword}</div>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"text-muted\">Use 8 or more characters with a mix of letters, numbers &amp; symbols.</div>\r\n                        </div>\r\n                        <div className=\"fv-row mb-10\">\r\n                            <label className=\"required form-label fw-bold fs-6 mb-2\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_UPDATE_CARD.PASSWORD.CONFIRM_PASSWORD\" /></label>\r\n                            <input \r\n                                className=\"form-control form-control-lg form-control-solid\" \r\n                                type=\"password\" \r\n                                placeholder=\"Confirm Password\" \r\n                                autoComplete=\"off\"\r\n                                {...formik.getFieldProps('passwordConfirmation')}\r\n                            />\r\n                            {formik.touched.passwordConfirmation && formik.errors.passwordConfirmation && (\r\n                                <div className='fv-plugins-message-container'>\r\n                                    <div className='fv-help-block text-danger'>{formik.errors.passwordConfirmation}</div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"fv-row mb-7\">\r\n                            <label className=\"required fw-bold fs-6 mb-2\"><FormattedMessage id=\"ADMIN.USER.ADD_USER.ADMIN_PASSWORD\" /></label>\r\n                            <input \r\n                                type=\"password\" \r\n                                className=\"form-control form-control-solid mb-3 mb-lg-0\" \r\n                                placeholder=\"Admin Password\" \r\n                                {...formik.getFieldProps('adminPassword')}\r\n                            />\r\n                            {formik.touched.adminPassword && formik.errors.adminPassword && (\r\n                                <div className='fv-plugins-message-container'>\r\n                                    <div className='fv-help-block text-danger'>{formik.errors.adminPassword}</div>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n\r\n                        <div className=\"text-center pt-15\">\r\n                            <button \r\n                                type=\"reset\" \r\n                                className=\"btn btn-light me-3\" \r\n                                onClick={() => props.setShowPasswordUpdateDialog(false)}\r\n                            >\r\n                                Discard\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                <span className=\"indicator-label\">Submit</span>\r\n                                {loading &&\r\n                                    <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                                }\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import { useSelector, shallowEqual } from 'react-redux'\r\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport { RootState } from '../../../../../setup'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { Navigate, Route } from 'react-router'\r\n\r\nexport const UserSummary = (props: any) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-5 mb-xl-8\">\r\n                <div className=\"card-body pt-0 pt-lg-1\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body d-flex flex-center flex-column pt-12 p-9 px-0\">\r\n                            <div className=\"position-relative m-auto w-100 h-150px\">\r\n                                {props.userDetail.cover_image == 'default' ? (\r\n                                    <>\r\n                                        <img \r\n                                            style={{width: 'inherit', height: 'inherit'}} \r\n                                            // src=\"https://newwallpapershd.com/wp-content/uploads/2018/11/Technology-Music-Beats-Guitar-Facebook-Covers-Photos.jpg\"\r\n                                            src={`${process.env.REACT_APP_API_USER_COVER_IMAGE_URL}/default.jpeg`}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </>\r\n                                ) : (\r\n                                    <>\r\n                                        <img \r\n                                            style={{width: 'inherit', height: 'inherit'}} \r\n                                            // src=\"https://newwallpapershd.com/wp-content/uploads/2018/11/Technology-Music-Beats-Guitar-Facebook-Covers-Photos.jpg\"\r\n                                            src={`${process.env.REACT_APP_API_USER_COVER_IMAGE_URL}/${props.userDetail.cover_image}`}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </>\r\n                                )}\r\n                            </div>\r\n                            <div \r\n                                className=\"position-relative\" \r\n                                style={{ width: '180px', height: '180px', borderRadius: '50%', top: '-25px', left: '10%'}}\r\n                            >\r\n                                <div className=\"symbol symbol-100px symbol-circle mb-7\">\r\n                                    <img src={`${process.env.REACT_APP_API_USER_IMAGE_URL}/${props.userDetail.user_image}`} alt=\"image\" />\r\n                                </div>\r\n                            </div>\r\n                            {/* <a href=\"#\" className=\"fs-3 text-gray-800 text-hover-primary fw-bolder mb-3\">{props.userDetail.full_name}</a> */}\r\n                            {/* <div className=\"mb-9\">\r\n                                <div className=\"badge badge-lg badge-light-primary d-inline\">\r\n                                    {spacedRoles()}\r\n                                </div>\r\n                            </div> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-stack fs-4 py-3\">\r\n                        <div \r\n                            className=\"fw-bolder\" \r\n                        >\r\n                            <FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.DETAILS\" />\r\n                            <span className=\"ms-2 rotate-180\">\r\n                                <span className=\"svg-icon svg-icon-3\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                                        <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\r\n                                            <polygon points=\"0 0 24 0 24 24 0 24\" />\r\n                                            <path d=\"M6.70710678,15.7071068 C6.31658249,16.0976311 5.68341751,16.0976311 5.29289322,15.7071068 C4.90236893,15.3165825 4.90236893,14.6834175 5.29289322,14.2928932 L11.2928932,8.29289322 C11.6714722,7.91431428 12.2810586,7.90106866 12.6757246,8.26284586 L18.6757246,13.7628459 C19.0828436,14.1360383 19.1103465,14.7686056 18.7371541,15.1757246 C18.3639617,15.5828436 17.7313944,15.6103465 17.3242754,15.2371541 L12.0300757,10.3841378 L6.70710678,15.7071068 Z\" fill=\"#000000\" fillRule=\"nonzero\" transform=\"translate(12.000003, 11.999999) rotate(-180.000000) translate(-12.000003, -11.999999)\" />\r\n                                        </g>\r\n                                    </svg>\r\n                                </span>\r\n                            </span>\r\n                        </div>\r\n                        <span>\r\n                            <div \r\n                                className=\"btn btn-sm btn-light-primary\" \r\n                                onClick={() => props.setShowUserUpdateDialog(true)}\r\n                            >\r\n                                <FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.EDIT\" />\r\n                            </div>\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"separator\"></div>\r\n                    <div id=\"kt_user_view_details\" className=\"show\">\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.FULLNAME\" /></div>\r\n                            <div className=\"text-gray-600\">\r\n                                <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{props.userDetail.full_name}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.USERNAME\" /></div>\r\n                            <div className=\"text-gray-600\">\r\n                                <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{props.userDetail.username}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.EMAIL\" /></div>\r\n                            <div className=\"text-gray-600\">\r\n                                <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{props.userDetail.email}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useSelector, shallowEqual } from 'react-redux'\r\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport { RootState } from '../../../../../setup'\r\nimport {FormattedMessage} from 'react-intl'\r\n\r\nexport const UserUpdateCard =  (props: any) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card pt-4 mb-6 mb-xl-9\">\r\n                <div className=\"card-header border-0\">\r\n                    <div className=\"card-title\">\r\n                        <h2><FormattedMessage id=\"ADMIN.VIEW_USER.USER_UPDATE_CARD.PROFILE\" /></h2>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body pt-0 pb-5\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table align-middle table-row-dashed gy-5\" id=\"kt_table_users_login_session\">\r\n                            <tbody className=\"fs-6 fw-bold text-gray-600\">\r\n                                <tr>\r\n                                    <td className='ps-3'><FormattedMessage id=\"ADMIN.VIEW_USER.USER_UPDATE_CARD.PASSWORD\" /></td>\r\n                                    <td>******</td>\r\n                                    <td className=\"text-end pe-3\">\r\n                                        <button \r\n                                            type=\"button\" \r\n                                            className=\"btn btn-icon btn-active-light-primary w-30px h-30px ms-auto\" \r\n                                            onClick={() => props.setShowPasswordUpdateDialog(true)}\r\n                                        >\r\n                                            <span className=\"svg-icon svg-icon-3\">\r\n                                                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\">\r\n                                                    <rect opacity=\"0.25\" x=\"3\" y=\"21\" width=\"18\" height=\"2\" rx=\"1\" fill=\"#191213\" />\r\n                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M4.08576 11.5L3.58579 12C3.21071 12.375 3 12.8838 3 13.4142V17C3 18.1045 3.89543 19 5 19H8.58579C9.11622 19 9.62493 18.7893 10 18.4142L10.5 17.9142L4.08576 11.5Z\" fill=\"#121319\" />\r\n                                                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M5.5 10.0858L11.5858 4L18 10.4142L11.9142 16.5L5.5 10.0858Z\" fill=\"#121319\" />\r\n                                                    <path opacity=\"0.25\" fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M18.1214 1.70705C16.9498 0.535476 15.0503 0.535476 13.8787 1.70705L13 2.58576L19.4142 8.99997L20.2929 8.12126C21.4645 6.94969 21.4645 5.0502 20.2929 3.87862L18.1214 1.70705Z\" fill=\"#191213\" />\r\n                                                </svg>\r\n                                            </span>\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","import { useState } from 'react'\r\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux'\r\nimport { useLocation, useNavigate } from 'react-router'\r\nimport { Button } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogActions } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { DialogTitle } from '@mui/material';\r\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport {languages, timeZones} from '../../../accounts/components/settings/LangAndTimeZone'\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport { RootState } from '../../../../../setup'\r\nimport * as admin from '../../../auth/redux/AuthRedux'\r\nimport { updateUserForAdmin } from '../../api';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nconst adminUserDetailsSchema = Yup.object().shape({\r\n    fullname: Yup.string().required('Full Name is required'),\r\n    userName: Yup.string().required('Username is required'),\r\n    email: Yup.string()\r\n      .email('Wrong email format')\r\n      .min(3, 'Minimum 3 symbols')\r\n      .max(50, 'Maximum 50 symbols')\r\n      .required('Email is required'),\r\n    // isAdminUser: Yup.boolean(),\r\n    description: Yup.string().notRequired(),\r\n    adminPassword: Yup.string().min(6, 'Require mininmum 6 characters').required('Admin Password is required')\r\n})\r\n\r\ninterface AdminUserDetailModel {\r\n    fullName: string\r\n    userName: string\r\n    email: string\r\n    // isAdminUser: boolean\r\n    description: string\r\n    adminPassword: string\r\n}\r\n\r\nexport const UserUpdateWithAddress = (props: any) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [image, setImage] = useState<any>(\"\")\r\n    const [coverImage, setCoverImage] = useState<any>(\"\")\r\n    const [password, setPassword] = useState<string>('')\r\n    \r\n\r\n    const { adminID, authToken, isAdmin }: any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            adminID: auth.user?.userID,\r\n            authToken: auth.accessToken,\r\n            isAdmin: auth.user?.isAdmin\r\n        }), shallowEqual\r\n    )\r\n\r\n    const [_isAdmin, setIsAdmin] = useState<boolean>(props.userDetail.is_admin == '1' ? true : false)\r\n    \r\n\r\n    const initialValues: AdminUserDetailModel = {\r\n        fullName: props.userDetail.full_name,\r\n        userName: props.userDetail.username,\r\n        email: props.userDetail.email,\r\n        description: props.userDetail.description,\r\n        adminPassword: ''\r\n    }\r\n\r\n    const handleImageChange = (e: any) => {\r\n        setImage(e.target.files[0])\r\n    };\r\n\r\n    const handleCoverImageChange = (e: any) => {\r\n        setCoverImage(e.target.files[0])\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        // validationSchema: adminUserDetailsSchema,\r\n        onSubmit: (values) => {\r\n            setLoading(true)\r\n            setTimeout(() => {\r\n                const formData = new FormData()\r\n                formData.append('userID', props.userID)\r\n                formData.append('authToken', authToken)\r\n                formData.append('handle', values.userName)\r\n                if(image !== \"\") {\r\n                    formData.append('userImage', image)\r\n                }\r\n                if(coverImage !== \"\") {\r\n                    formData.append('coverImage', coverImage)\r\n                }\r\n                formData.append('name', values.fullName)\r\n                formData.append('email', values.email)\r\n                formData.append('isAdmin', _isAdmin ? '1' : '0')\r\n                formData.append('description', values.description)\r\n                formData.append('adminID', adminID)\r\n                formData.append('adminPassword', values.adminPassword)\r\n\r\n                updateUserForAdmin(formData)\r\n                .then((response) => {\r\n                    if(response.data.success) {\r\n                        localStorage.setItem('resSuccess', response.data.message)\r\n                        window.location.reload()\r\n                        setLoading(false)\r\n                    } else {\r\n                        if(response.data.message) {\r\n                            localStorage.setItem('resFailure', response.data.message)\r\n                            window.location.reload()\r\n                            setLoading(false)\r\n                        } else {\r\n                            localStorage.setItem('resFailure', 'Failed to update the profile')\r\n                            window.location.reload()\r\n                            setLoading(false)\r\n                        }\r\n                    }\r\n                })\r\n                // .catch((error) => {\r\n                //     // dispatch(admin.actions.signOut())\r\n                //     localStorage.setItem('sessionTimeOut', 'Access denied. Session timed out.')\r\n                //     navigate('/admin')\r\n                // })\r\n\r\n            }, 1000)\r\n        }\r\n    })\r\n\r\n    const handleIsAdminChange = () => {\r\n        setIsAdmin(!_isAdmin)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog \r\n                open={props.showUserUpdateDialog} \r\n                onClose={() => props.setShowUserUpdateDialog(false)} \r\n                aria-labelledby=\"form-dialog-title\"\r\n            >\r\n                <DialogTitle className='px-5 text-center fw-bolder text-muted' id=\"form-dialog-title\">\r\n                    <div className=\"modal-header\" id=\"kt_modal_update_user_header\">\r\n                        <h2 className=\"fw-bolder\">\r\n                            <FormattedMessage id=\"ADMIN.VIEW_USER.UPDATE_USER.UPDATE_USER_DETAILS\" />\r\n                        </h2>\r\n                        <div className=\"btn btn-icon btn-sm btn-active-icon-primary\" onClick={() => props.setShowUserUpdateDialog(false)}>\r\n                            <span className=\"svg-icon svg-icon-1\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n                                    <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#000000\">\r\n                                        <rect fill=\"#000000\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                        <rect fill=\"#000000\" opacity=\"0.5\" transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n                                    </g>\r\n                                </svg>\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </DialogTitle>\r\n                <DialogContent>\r\n                    <form style={{ padding: '10px 50px' }} className=\"form\" onSubmit={formik.handleSubmit} id=\"kt_modal_update_user_form\">\r\n                        <div \r\n                            className=\"modal-body py-10 px-lg-17\"\r\n                            style={{ overflow: 'auto' }}\r\n                        >\r\n                            <div className=\"d-flex flex-column scroll-y me-n7 pe-7\" id=\"kt_modal_update_user_scroll\" data-kt-scroll=\"true\" data-kt-scroll-activate=\"{default: false, lg: true}\" data-kt-scroll-max-height=\"auto\" data-kt-scroll-dependencies=\"#kt_modal_update_user_header\" data-kt-scroll-wrappers=\"#kt_modal_update_user_scroll\" data-kt-scroll-offset=\"300px\">\r\n                                <div id=\"kt_modal_update_user_user_info\" className=\"show\">\r\n                                    <div className=\"mb-7\">\r\n                                        <label className=\"fs-6 fw-bold mb-2 me-5\">\r\n                                            <span>\r\n                                                <FormattedMessage id=\"ADMIN.VIEW_USER.UPDATE_USER.UPADTE_AVATAR\" />\r\n                                            </span>\r\n                                            <i className=\"fas fa-exclamation-circle ms-1 fs-7\" data-bs-toggle=\"tooltip\" title=\"Allowed file types: png, jpg, jpeg.\"></i>\r\n                                        </label>\r\n                                        <div className=\"mt-5\">\r\n                                            <div className=\"image-input image-input-outline\" data-kt-image-input=\"true\" style={{backgroundImage: `url(${toAbsoluteUrl('/media/avatars/blank.png')})`}}>\r\n                                                <div \r\n                                                    className=\"image-input-wrapper w-125px h-125px\" \r\n                                                    style={{backgroundImage: `url(${image === \"\" ? `${process.env.REACT_APP_API_USER_IMAGE_URL}/${props.userDetail.user_image}` : URL.createObjectURL(image)})`}}\r\n                                                ></div>\r\n                                                <label className=\"btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow\" data-kt-image-input-action=\"change\" data-bs-toggle=\"tooltip\" title=\"Change avatar\">\r\n                                                    <i className=\"bi bi-pencil-fill fs-7\"></i>\r\n                                                    <input onChange={(e) => handleImageChange(e)} type=\"file\" name=\"avatar\" accept=\".png, .jpg, .jpeg\" />\r\n                                                    <input type=\"hidden\" name=\"avatar_remove\" />\r\n                                                </label>\r\n                                                <span className=\"btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow\" data-kt-image-input-action=\"cancel\" data-bs-toggle=\"tooltip\" title=\"Cancel avatar\">\r\n                                                    <i className=\"bi bi-x fs-2\"></i>\r\n                                                </span>\r\n                                                <span className=\"btn btn-icon btn-circle btn-active-color-primary w-25px h-25px bg-body shadow\" data-kt-image-input-action=\"remove\" data-bs-toggle=\"tooltip\" title=\"Remove avatar\">\r\n                                                    <i className=\"bi bi-x fs-2\"></i>\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='mb-10 fv-row'>\r\n                                        <label className='form-label mb-3'>\r\n                                            <FormattedMessage id='ADMIN.VIEW_USER.UPDATE_USER.UPADTE_USER_COVER' />\r\n                                        </label>\r\n\r\n                                            {coverImage == \"\" ? (\r\n                                                <div>\r\n                                                    {props.userDetail.cover_image == 'default' ? (\r\n                                                        <>\r\n                                                            <img \r\n                                                                src={`${process.env.REACT_APP_API_USER_COVER_IMAGE_URL}/default.jpeg`} \r\n                                                                className='w-400px mb-3' \r\n                                                            />\r\n                                                        </>\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            <img \r\n                                                                src={`${process.env.REACT_APP_API_USER_COVER_IMAGE_URL}/${props.userDetail.cover_image}`} \r\n                                                                className='w-400px mb-3' \r\n                                                            />\r\n                                                        </>\r\n                                                    )}\r\n                                                </div>\r\n                                            ): (\r\n                                                <div>\r\n                                                    <img src={URL.createObjectURL(coverImage)} className='w-400px mb-3' />\r\n                                                </div>\r\n                                            )}\r\n\r\n                                        <div>\r\n                                            <input type=\"file\" id=\"image\" accept=\"image/png, image/jpeg\" onChange={(e) => handleCoverImageChange(e)} />\r\n                                        </div>\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fs-6 fw-bold mb-2\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.FULLNAME\" /></label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control form-control-solid\" \r\n                                            placeholder=\"Full Name\" \r\n                                            {...formik.getFieldProps('fullName')}\r\n                                        />\r\n                                        {formik.touched.fullName && formik.errors.fullName && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block'>{formik.errors.fullName}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fs-6 fw-bold mb-2\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.USERNAME\" /></label>\r\n                                        <input \r\n                                            type=\"text\" \r\n                                            className=\"form-control form-control-solid\" \r\n                                            placeholder=\"User Name\" \r\n                                            {...formik.getFieldProps('userName')}\r\n                                        />\r\n                                        {formik.touched.userName && formik.errors.userName && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block'>{formik.errors.userName}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fs-6 fw-bold mb-2\">\r\n                                            <span><FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.EMAIL\" /></span>\r\n                                            <i className=\"fas fa-exclamation-circle ms-1 fs-7\" data-bs-toggle=\"tooltip\" title=\"Email address must be active\"></i>\r\n                                        </label>\r\n                                        <input \r\n                                            type=\"email\" \r\n                                            className=\"form-control form-control-solid\" \r\n                                            placeholder=\"Email\" \r\n                                            {...formik.getFieldProps('email')}\r\n                                        />\r\n                                        {formik.touched.email && formik.errors.email && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block'>{formik.errors.email}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    {/* <div className=\"fv-row mb-7\">\r\n                                        <input \r\n                                            type=\"checkbox\" \r\n                                            className=\"form-check-input me-3\" \r\n                                            defaultChecked={_isAdmin}\r\n                                            onChange={handleIsAdminChange}\r\n                                        />\r\n                                        <label className=\"required fs-6 fw-bold mb-2\">\r\n                                            <span><FormattedMessage id=\"ADMIN.VIEW_USER.UPDATE_USER.ADMIN\" /></span>\r\n                                        </label>\r\n                                    </div> */}\r\n\r\n                                    <div className='d-flex'>\r\n                                        <input \r\n                                            type=\"checkbox\" \r\n                                            className=\"form-check-input me-3\" \r\n                                            defaultChecked={_isAdmin}\r\n                                            onChange={handleIsAdminChange}\r\n                                        />\r\n                                        <label className=\"required fs-6 fw-bold mb-2\">\r\n                                            <span><FormattedMessage id=\"ADMIN.VIEW_USER.UPDATE_USER.ADMIN\" /></span>\r\n                                        </label>\r\n                                    </div>\r\n\r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fs-6 fw-bold mb-2\"><FormattedMessage id=\"ADMIN.VIEW_USER.UPDATE_USER.DESCRIPTION\" /></label>\r\n                                        <textarea  \r\n                                            className=\"form-control form-control-solid\" \r\n                                            rows={6}\r\n                                            {...formik.getFieldProps('description')}\r\n                                        />\r\n\r\n                                        {formik.touched.description && formik.errors.description && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block text-danger'>{formik.errors.description}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n\r\n                                    <div className=\"fv-row mb-7\">\r\n                                        <label className=\"required fw-bold fs-6 mb-2\"><FormattedMessage id=\"ADMIN.USER.ADD_USER.ADMIN_PASSWORD\" /></label>\r\n                                        <input \r\n                                            type=\"password\" \r\n                                            className=\"form-control form-control-solid mb-3 mb-lg-0\" \r\n                                            placeholder=\"Admin Password\" \r\n                                            {...formik.getFieldProps('adminPassword')}\r\n                                        />\r\n                                        {formik.touched.adminPassword && formik.errors.adminPassword && (\r\n                                            <div className='fv-plugins-message-container'>\r\n                                                <div className='fv-help-block text-danger'>{formik.errors.adminPassword}</div>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer flex-center\">\r\n                            <button \r\n                                type=\"reset\" \r\n                                className=\"btn btn-light me-3\" \r\n                                onClick={() => props.setShowUserUpdateDialog(false)}\r\n                            >\r\n                                <FormattedMessage id=\"ADMIN.VIEW_USER.UPDATE_USER.DISCARD\" />\r\n                            </button>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                <span className=\"indicator-label\"><FormattedMessage id=\"HOME_PAGE.SUBMIT\" /></span>\r\n                                {loading &&\r\n                                    <span className=\"spinner-border spinner-border-sm align-middle ms-2\"></span>\r\n                                }\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import { useState, useEffect } from \"react\"\r\nimport { useSelector, shallowEqual } from \"react-redux\"\r\nimport { RootState } from \"setup\"\r\nimport { EthereumRoyaltyClaimHistory } from \"../../../accounts/components/settings/royaltyClaimHistory/components/EthereumRoyaltyClaimHistory\"\r\nimport { KlaytnRoyaltyClaimHistory } from \"../../../accounts/components/settings/royaltyClaimHistory/components/KlaytnRoyaltyClaimHistory\"\r\nimport { getKlaytnRoyaltyClaimTransactionHistory } from \"../../../accounts/components/settings/_redux/accountCrud\"\r\nimport { getETHRoyaltyClaimTransactionHistoryData } from \"app/modules/dropDetail/dropDetailEthereum/queries/Queries\"\r\n\r\nconst UserRoyaltyClaimHistory = (props: any) => {\r\n\r\n    // const [claimData, setClaimData] = useState([])\r\n    // const [loading, setLoading] = useState<boolean>(true)\r\n\r\n    // const {walletAddress, walletName}: any = useSelector<RootState>(\r\n    //     ({auth}) => ({\r\n    //         walletAddress: auth.walletAddress,\r\n    //         walletName: auth.walletName\r\n    //     })\r\n    // )\r\n\r\n    // useEffect(() => {\r\n    //     if(walletName == 'kaikas') {\r\n    //         getKlaytnRoyaltyClaimTransactionHistory(walletAddress)\r\n    //         .then((response) => {\r\n    //             if(response.data.success) {\r\n    //                 setClaimData(response.data.claimData)\r\n    //                 setLoading(false)\r\n    //             }\r\n    //         })\r\n    //     } else if(walletName == 'metamask') {\r\n    //         getETHRoyaltyClaimTransactionHistoryData(walletAddress)\r\n    //         .then((data: any) => {\r\n    //             setClaimData(data)\r\n    //             setLoading(false)\r\n    //         })\r\n    //     }\r\n    // }, [walletName])\r\n\r\n    return (\r\n        <> \r\n            <div style={{ marginTop: '40px' }}>\r\n                <EthereumRoyaltyClaimHistory \r\n                    claimData={props.ethClaimData}\r\n                    loading={false}\r\n                />\r\n            </div>\r\n            \r\n            <div style={{ marginTop: '40px' }}>\r\n                <KlaytnRoyaltyClaimHistory \r\n                    claimData={props.klayClaimData}\r\n                    loading={false}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport {UserRoyaltyClaimHistory}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { CircularProgress } from '@mui/material'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { getOrderHistory } from 'app/modules/accounts/components/settings/cardHistory/api'\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\ntype Props = {\r\n    orderHistory: Array<any>\r\n}\r\n\r\nconst UserCardHistory: React.FC<Props> = ({ orderHistory }) => {\r\n\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    // const { walletAddress, userID } : any = useSelector<RootState>(\r\n    //     ({auth}) => ({\r\n    //         walletAddress: auth.walletAddress,\r\n    //         userID: auth.user?.userID\r\n    //     })\r\n    // )\r\n\r\n    // const [orderHistory, setOrderHistory] = useState<Array<any>>([])\r\n    // const [loading, setLoading] = useState<boolean>(true)\r\n    const navigate = useNavigate()\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     getOrderHistory(userID)\r\n    //     .then((response) => {\r\n    //         if(response.data.success) {\r\n    //             setOrderHistory(response.data.order_history)\r\n    //             setLoading(false)\r\n    //         } else {\r\n\r\n    //         }\r\n    //     })\r\n    // }, [])\r\n\r\n    return (\r\n        <div className={`card`} style={{ marginTop: '40px' }}>\r\n        {/* begin::Header */}\r\n        <div className='card-header border-0 pt-5'>\r\n            <h3 className='card-title align-items-start flex-column'>\r\n                <span className='card-label fw-bolder fs-3 mb-1'>\r\n                    <FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.TITLE\" />\r\n                    \r\n                </span>\r\n                {/* <span className='text-muted mt-1 fw-bold fs-7'>Over 500 new products</span> */}\r\n            </h3>\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Body */}\r\n        <div className='card-body py-3'>\r\n            {/* begin::Table container */}\r\n            <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table align-middle gs-0 gy-4'>\r\n                {/* begin::Table head */}\r\n                <thead>\r\n                    <tr className='fw-bolder text-muted bg-light'>\r\n                        <th className='ps-4 min-w-150px rounded-start'>\r\n                            <FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.TOKEN_DETAILS\" />\r\n                        </th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.ORDER_CODE\" /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.BUYER\" /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.AMOUNT\" /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.PAYMENT_TYPE\" /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.PAYMENT_STATUS\" /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.MINT_STATUS\" /></th>\r\n                        <th className='text-center min-w-200px text-end rounded-end pe-5'><FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.RECEIPT\" /></th>\r\n                    </tr>\r\n                </thead>\r\n                {/* end::Table head */}\r\n                {/* begin::Table body */}\r\n                <tbody>\r\n                    {orderHistory.map((data: any) => (\r\n                        <tr>\r\n                            <td>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className='symbol symbol-50px me-5'>\r\n                                <img\r\n                                    src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${data.token_image}`}\r\n                                    className=''\r\n                                    alt=''\r\n                                />\r\n                                </div>\r\n                                <div className='d-flex justify-content-start flex-column'>\r\n                                <span className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\r\n                                    {data.collection_name}\r\n                                </span>\r\n                                <span className='text-muted fw-bold text-muted d-block fs-7'>\r\n                                    <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /> : \r\n                                    <span>{tokenType[data.tier]}</span>\r\n                                </span>\r\n                                </div>\r\n                            </div>\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {data.order_code}\r\n                            </span>\r\n                            {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Paid</span> */}\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {shrinkWalletAddress(data.buyer)}\r\n                            </span>\r\n                            {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Rejected</span> */}\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {data.amount_paid} <span className='ms-2'>{data.currency_type}</span>\r\n                            </span>\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {data.currency_type == 'USD' ? 'Card' : 'Crypto'}\r\n                            </span>\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {data.status == 'paid' ? (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check-circle-fill text-success\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n                                    </svg>\r\n                                ) : (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-circle-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n                                    </svg>\r\n                                )}\r\n                            </span>\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {data.minted == '1' ? (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check-circle-fill text-success\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n                                    </svg>\r\n                                ) : (\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-circle-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n                                    </svg>\r\n                                )}\r\n                            </span>\r\n                            </td>\r\n                            {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Insurance</span> */}\r\n                            <td className='text-center text-end pe-5'>\r\n                                <span\r\n                                    className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                    onClick={() => navigate('/order-detail', {state: data.order_code})}\r\n                                >\r\n                                    <FormattedMessage id=\"ADMIN.VIEW_USER.ORDER_HISTORY.VIEW_DETAILS\" />\r\n                                </span>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n                {/* end::Table body */}\r\n            </table>\r\n            {/* end::Table */}\r\n            </div>\r\n            {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {UserCardHistory}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { CircularProgress } from '@mui/material'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from 'setup'\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\ntype Props = {\r\n    transferHistory: Array<any>\r\n}\r\n\r\nconst UserTransferHistory: React.FC<Props> = ({ transferHistory }) => {\r\n\r\n    // const { userID } : any = useSelector<RootState>(\r\n    //     ({auth}) => ({\r\n    //         userID: auth.user?.userID\r\n    //     })\r\n    // )\r\n\r\n    // const [transferHistory, setTransferHistory] = useState<Array<any>>([])\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const navigate = useNavigate()\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     getTransferHistory(userID)\r\n    //     .then((response) => {\r\n    //         if(response.data.success) {\r\n    //             setTransferHistory(response.data.transfer_history)\r\n    //             setLoading(false)\r\n    //         } else {\r\n\r\n    //         }\r\n    //     })\r\n    // }, [])\r\n\r\n    return (\r\n        <div className={`card`} style={{ marginTop: '40px' }}>\r\n        {/* begin::Header */}\r\n        <div className='card-header border-0 pt-5'>\r\n            <h3 className='card-title align-items-start flex-column'>\r\n                <span className='card-label fw-bolder fs-3 mb-1'><FormattedMessage id='ADMIN.VIEW_USER.TRANSFER_HISTORY.TITLE' /></span>\r\n                {/* <span className='text-muted mt-1 fw-bold fs-7'>Over 500 new products</span> */}\r\n            </h3>\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Body */}\r\n        <div className='card-body py-3'>\r\n            {/* begin::Table container */}\r\n            <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table align-middle gs-0 gy-4'>\r\n                {/* begin::Table head */}\r\n                <thead>\r\n                    <tr className='fw-bolder text-muted bg-light'>\r\n                        <th className='ps-4 min-w-150px rounded-start'><FormattedMessage id='ADMIN.VIEW_USER.TRANSFER_HISTORY.TOKEN_DETAILS' /></th>\r\n                        <th className='min-w-125px text-center'><FormattedMessage id='ADMIN.VIEW_USER.TRANSFER_HISTORY.QUANTITY' /></th>\r\n                        <th className='min-w-125px text-center'><FormattedMessage id='ADMIN.VIEW_USER.TRANSFER_HISTORY.FROM' /></th>\r\n                        <th className='min-w-125px text-center'><FormattedMessage id='ADMIN.VIEW_USER.TRANSFER_HISTORY.TO' /></th>\r\n                        <th className='min-w-200px text-center'><FormattedMessage id='ADMIN.VIEW_USER.TRANSFER_HISTORY.STATUS' /></th>\r\n                        <th className='min-w-200px text-end rounded-end pe-5 text-center'><FormattedMessage id='ADMIN.VIEW_USER.TRANSFER_HISTORY.TRANSACTION' /></th>\r\n                    </tr>\r\n                </thead>\r\n                {/* end::Table head */}\r\n                {/* begin::Table body */}\r\n                <tbody>\r\n                    {transferHistory.map((data: any) => (\r\n                        <tr>\r\n                            <td>\r\n                            <div className='d-flex align-items-center'>\r\n                                <div className='symbol symbol-50px me-5'>\r\n                                <img\r\n                                    src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${data.token_image}`}\r\n                                    className=''\r\n                                    alt=''\r\n                                />\r\n                                </div>\r\n                                <div className='d-flex justify-content-start flex-column'>\r\n                                <span className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\r\n                                    {data.collection_name}\r\n                                </span>\r\n                                <span className='text-muted fw-bold text-muted d-block fs-7'>\r\n                                    <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /> : \r\n                                    <span>{tokenType[data.tier]}</span>\r\n                                </span>\r\n                                </div>\r\n                            </div>\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {JSON.parse(data.tokenID).length}\r\n                            </span>\r\n                            {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Paid</span> */}\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {shrinkWalletAddress(data.from_addr)}\r\n                            </span>\r\n                            {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Rejected</span> */}\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {shrinkWalletAddress(data.to_addr)}\r\n                            </span>\r\n                            </td>\r\n                            <td>\r\n                            <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                {data.transfer_status == '1' && \r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check-circle-fill text-success\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n                                    </svg>\r\n                                }\r\n\r\n                                {data.transfer_status == '0' && \r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-circle-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                        <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n                                    </svg>\r\n                                }\r\n                            </span>\r\n                            </td>\r\n                            {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Insurance</span> */}\r\n                            <td className='text-center text-end pe-5'>\r\n                                {data.blockchain == 'ethereum' && \r\n                                    <a\r\n                                        href={`https://goerli.etherscan.io/tx/${data.tx_hash}`}\r\n                                        className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                    >\r\n                                        <FormattedMessage id='SETTINGS_PAGE.VIEW_ON_ETHERSCAN' />\r\n                                    </a>\r\n                                }\r\n\r\n                                {data.blockchain == 'klaytn' && \r\n                                    <a\r\n                                        href={`https://baobab.scope.klaytn.com/tx/${data.tx_hash}`}\r\n                                        className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                    >\r\n                                        <FormattedMessage id='SETTINGS_PAGE.VIEW_ON_KLAYTNSCOPE' />\r\n                                    </a>\r\n                                }\r\n                                \r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n                {/* end::Table body */}\r\n            </table>\r\n            {/* end::Table */}\r\n            </div>\r\n            {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {UserTransferHistory}\r\n","import { useEffect, useState } from 'react'\r\nimport {ConnectedAccounts} from './components/ConnectedAccounts'\r\nimport {ShowWalletAddress} from './components/ShowWalletAddressBox'\r\nimport {UpdatePassword} from './components/UpdatePasswordBox'\r\nimport {UserSummary} from './components/UserSummary'\r\nimport {UserUpdateCard} from './components/UserUpdateCard'\r\nimport {UserUpdateWithAddress} from './components/UserUpdateWithAddress'\r\nimport {ViewUserHeader} from './components/ViewUserHeader'\r\nimport {AlertDanger, AlertSuccess} from '../../alerts/Alerts'\r\nimport { shallowEqual, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../../setup'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getUserDetail } from '../api'\r\nimport { getKlaytnRoyaltyClaimTransactionHistory } from 'app/modules/accounts/components/settings/_redux/accountCrud'\r\nimport { getETHRoyaltyClaimTransactionHistoryData } from 'app/modules/dropDetail/dropDetailEthereum/queries/Queries'\r\nimport { UserRoyaltyClaimHistory } from './components/UserRoyaltyClaim'\r\nimport { UserCardHistory } from './components/UserOrderDetail'\r\nimport { UserTransferHistory } from './components/UserTransferDetail'\r\nimport { CircularProgress } from '@mui/material'\r\n\r\n\r\nconst ViewUserDetail = (props: any) => {\r\n\r\n    const {state} = useLocation();\r\n    const userID = state;\r\n    const [checked, setChecked] = useState(true);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [userDetail, setUserDetail] = useState<any>(null)\r\n    const [orderHistory, setOrderHistory] = useState<Array<any>>([])\r\n    const [transferHistory, setTransferHistory] = useState<Array<any>>([])\r\n    const [ethRoyaltyClaimData, setEthRoyaltyClaimData] = useState<any>([])\r\n    const [klayRoyaltyClaimData, setKlayRoyaltyClaimData] = useState<any>([])\r\n\r\n    const [showUserUpdateDialog, setShowUserUpdateDialog] = useState<boolean>(false)\r\n    const [showPasswordUpdateDialog, setShowPasswordUpdateDialog] = useState<boolean>(false)\r\n\r\n    const successMsg = localStorage.getItem('resSuccess')\r\n    const [resSuccessMessage, setResSuccessMessage] = useState<string | null>(successMsg)\r\n\r\n    const failureMsg = localStorage.getItem('resFailure')\r\n    const [resFailureMessage, setResFailureMessage] = useState<string | null>(failureMsg)\r\n\r\n    if(resSuccessMessage !== null && resSuccessMessage !== undefined) {\r\n        setTimeout(() => {\r\n          setChecked(false);\r\n          localStorage.removeItem('resSuccess')\r\n          setTimeout(() => {\r\n            setResSuccessMessage(null);\r\n          }, 300);\r\n        }, 5000);\r\n    }\r\n    \r\n    if(resFailureMessage !== null && resFailureMessage !== undefined) {\r\n        setTimeout(() => {\r\n            setChecked(false);\r\n            localStorage.removeItem('resFailure')\r\n            setTimeout(() => {\r\n                setResFailureMessage(null);\r\n            }, 300);\r\n        }, 5000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUserDetail(userID)\r\n        .then((response) => {\r\n            setUserDetail(response.data.user_detail)\r\n            setOrderHistory(response.data.order_history)\r\n            setTransferHistory(response.data.transfer_history)\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(userDetail) {\r\n            getKlaytnRoyaltyClaimTransactionHistory(userDetail.kaikas_wallet)\r\n            .then((response) => {\r\n                if(response.data.success) {\r\n                    setKlayRoyaltyClaimData(response.data.claimData)\r\n                    // setLoading(false)\r\n                    getETHRoyaltyClaimTransactionHistoryData(userDetail.metamask_wallet)\r\n                    .then((data: any) => {\r\n                        setEthRoyaltyClaimData(data)\r\n                        setLoading(false)\r\n                    })\r\n                }\r\n            })\r\n        }\r\n\r\n    }, [userDetail])\r\n\r\n    return (\r\n        <>  \r\n           {!loading && \r\n                <div className=\"post d-flex flex-column-fluid\" id=\"kt_post\">\r\n                    <div id=\"kt_content_container\" className=\"container\">\r\n                        <div className=\"d-flex flex-column flex-xl-row\">\r\n                            <div className=\"flex-column flex-lg-row-auto w-100 w-xl-400px mb-10\">\r\n                                <UserSummary \r\n                                    userID={userID} \r\n                                    showUserUpdateDialog={showUserUpdateDialog}\r\n                                    setShowUserUpdateDialog={setShowUserUpdateDialog}\r\n                                    userDetail={userDetail}\r\n                                />\r\n                                <ConnectedAccounts \r\n                                    userID={userID} \r\n                                    userDetail={userDetail}\r\n                                />\r\n                            </div>\r\n                            <div className=\"flex-lg-row-fluid ms-lg-15\">\r\n                                {resSuccessMessage !== null && resSuccessMessage !== undefined && resSuccessMessage !== \"\"  ? (\r\n                                    <AlertSuccess message={resSuccessMessage} checked={checked} />\r\n                                ) : null}\r\n\r\n                                {resFailureMessage !== null && resFailureMessage !== undefined && resFailureMessage !== \"\"  ? (\r\n                                    <AlertDanger message={resFailureMessage} checked={checked} />\r\n                                ) : null}\r\n                                {/* <ViewUserHeader /> */}\r\n                                <div className=\"tab-content\" id=\"myTabContent\">\r\n                                    <div className=\"tab-pane show active\" id=\"kt_user_view_overview_security\" role=\"tabpanel\">\r\n                                        <UserUpdateCard \r\n                                            userID = {userID} \r\n                                            showPasswordUpdateDialog={showPasswordUpdateDialog}\r\n                                            setShowPasswordUpdateDialog={setShowPasswordUpdateDialog}\r\n                                        />\r\n\r\n                                        <UserCardHistory \r\n                                            orderHistory={orderHistory}\r\n                                        />\r\n\r\n                                        <UserTransferHistory \r\n                                            transferHistory={transferHistory}\r\n                                        />\r\n\r\n                                        <UserRoyaltyClaimHistory \r\n                                            ethClaimData={ethRoyaltyClaimData}\r\n                                            klayClaimData={klayRoyaltyClaimData}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <UserUpdateWithAddress \r\n                            userID={userID} \r\n                            showUserUpdateDialog={showUserUpdateDialog}\r\n                            setShowUserUpdateDialog={setShowUserUpdateDialog}\r\n                            userDetail={userDetail}\r\n                        />\r\n                        <ShowWalletAddress userID={userID} />\r\n                        <UpdatePassword \r\n                            userID={userID} \r\n                            showPasswordUpdateDialog={showPasswordUpdateDialog}\r\n                            setShowPasswordUpdateDialog={setShowPasswordUpdateDialog}\r\n                        />\r\n                    </div>\r\n                </div>\r\n           }\r\n\r\n           {loading && \r\n                <div className='d-flex w-100 h-100'>\r\n                    <div className='my-auto mx-auto'>\r\n                        <div className='d-flex flex-column justify-content-center'>\r\n                            <span className='text-primary fs-3'>Loading</span> <br />\r\n                            <span className='ms-4'>\r\n                                <CircularProgress />\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewUserDetail"],"sourceRoot":""}