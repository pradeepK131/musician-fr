{"version":3,"sources":["app/modules/profile/crud.ts","app/modules/dropdown/ProfileCardMenu.tsx","app/modules/profile/components/TokenCard.tsx","app/modules/profile/components/TokenTransferDialog.tsx","app/modules/profile/ProfilePage.tsx"],"names":["GET_KLAYTN_TOKENS_DATA_BY_WALLET_URL","process","UPDATE_USER_COVER_IMAGE_URL","UPDATE_USER_AVATAR_IMAGE_URL","TRANSFER_NFT_URL","getKlaytnTokensDataByWallet","walletAddresses","axios","method","url","headers","data","JSON","stringify","updateUserCoverImage","formData","updateUserAvatarImage","transferNFT","collectionID","tier","custWalletAddress","userWalletAddress","userID","tokenIDs","blockchain","password","ProfileCardMenu","props","navigate","useNavigate","intl","useIntl","useSelector","auth","walletAddress","walletName","className","style","paddingLeft","listStyleType","onClick","setBlockchain","setCustodialWallet","ownedWalletAddress","setTokenIDs","setCollectionID","setTier","setImageName","imagePath","setQuantity","quantity","setShowTokenTransferDialog","state","message","formatMessage","id","TokenCard","isCustodialWallet","walletType","width","border","paddingTop","Dropdown","align","Toggle","variant","as","DropdownCustomToggler","xmlns","height","fill","viewBox","d","Menu","totalOwns","tierImage","collectionName","dropDate","artistName","ownershipOffered","totalQuantity","collectorName","collectorImage","src","background","blockchainAbbre","TokenTransferDialog","useState","loading","setLoading","checked","setChecked","setPassword","setMessage","user","setTimeout","shrinkWalletAddress","slice","handleSubmit","a","length","custodialWallet","then","response","success","setResponseMessage","window","scrollTo","setResponseFailMessage","catch","error","console","log","Dialog","open","showTokenTransferDialog","onClose","DialogTitle","DialogContent","type","value","disabled","autoComplete","onChange","event","preventDefault","target","handlePasswordChange","ProfilePage","tokensMeta","setTokensMeta","coverImageUploading","setCoverImageUploading","userImageUploading","setUserImageUploading","imageName","responseMessage","responseFailMessage","dispatch","useDispatch","userName","username","userImage","userImages","userCoverImage","coverImage","custWalletEth","userWalletList","ethCustodialWallet","custWalletKlay","klayCustodialWallet","metaMaskWallet","metamaskWallet","kaikasWallet","shallowEqual","useEffect","tokenBalancesForWallets","prevTokensMeta","marginTop","alt","bottom","right","CircularProgress","accept","e","FormData","append","files","setUserImages","err","handleCoverChange","fillRule","clipRule","borderRadius","marginLeft","top","left","handleAvatarChange","fontSize","metaData","numb","map","balance","getCollectedNumber","tokenMeta","token_image","collection_id","token_tier","collection_name","token_quantity","drop_date","artist_name","ownership_offered","wallet_type","token_ids","wallet_address"],"mappings":"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","file":"static/js/9.19e8d13b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst GET_KLAYTN_TOKENS_DATA_BY_WALLET_URL = `${process.env.REACT_APP_API_URL}/get-token-balances-by-wallet.php`;\r\nconst UPDATE_USER_COVER_IMAGE_URL = `${process.env.REACT_APP_API_URL}/update-user-cover-image.php`;\r\nconst UPDATE_USER_AVATAR_IMAGE_URL = `${process.env.REACT_APP_API_URL}/update-profile-image.php`;\r\nconst TRANSFER_NFT_URL = `${process.env.REACT_APP_NODE_JS_SERVER_URL}/nft-transfer`;\r\n\r\nexport function getKlaytnTokensDataByWallet(walletAddresses: Array<any>) {\r\n    return axios({\r\n        method: 'post',\r\n        url: GET_KLAYTN_TOKENS_DATA_BY_WALLET_URL,\r\n        headers: {\r\n            'content-type': 'application/x-www-form-urlencoded',\r\n        },\r\n        data: {\r\n            walletAddresses: JSON.stringify(walletAddresses)\r\n        }\r\n    })\r\n}\r\n\r\nexport function updateUserCoverImage(formData: any) {\r\n    return axios({\r\n        method: 'post',\r\n        url: UPDATE_USER_COVER_IMAGE_URL,\r\n        headers: {\r\n            'content-type': 'multipart/form-data',\r\n        },\r\n        data: formData\r\n    })\r\n}\r\n\r\nexport function updateUserAvatarImage(formData: any) {\r\n    return axios({\r\n        method: 'post',\r\n        url: UPDATE_USER_AVATAR_IMAGE_URL,\r\n        headers: {\r\n            'content-type': 'multipart/form-data',\r\n        },\r\n        data: formData\r\n    })\r\n}\r\n\r\nexport const transferNFT = (\r\n    collectionID: string,\r\n    tier: string,\r\n    custWalletAddress: string,\r\n    userWalletAddress: string,\r\n    userID: string,\r\n    tokenIDs: Array<any>,\r\n    blockchain: string,\r\n    password: string\r\n) => {\r\n    return axios({\r\n        method: 'post',\r\n        url: TRANSFER_NFT_URL,\r\n        headers: {\r\n            'content-type': 'application/json',\r\n        },\r\n        data: {\r\n            collectionID,\r\n            tier,\r\n            custWalletAddress,\r\n            userWalletAddress,\r\n            userID,\r\n            tokenIDs,\r\n            blockchain,\r\n            password\r\n        }\r\n    })\r\n}","/* eslint-disable no-script-url,jsx-a11y/anchor-is-valid */\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FormattedMessage, useIntl } from \"react-intl\";\r\nimport { RootState } from \"setup\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport function ProfileCardMenu(props: any) {\r\n\r\n    const navigate = useNavigate();\r\n    const intl = useIntl()\r\n\r\n    const { walletAddress, walletName }: any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            walletAddress: auth.walletAddress,\r\n            walletName: auth.walletName\r\n        })\r\n    )\r\n\r\n    const handleClick = () => {\r\n\r\n        if(walletAddress && props.blockchain == 'ethereum' && walletName == 'metamask') {\r\n            props.setBlockchain(props.blockchain)\r\n            props.setCustodialWallet(props.ownedWalletAddress)\r\n            props.setTokenIDs(props.tokenIDs)\r\n            props.setCollectionID(props.collectionID)\r\n            props.setTier(props.tier)\r\n            props.setImageName(props.imagePath)\r\n            props.setQuantity(props.quantity)\r\n            props.setShowTokenTransferDialog(true)\r\n        } else if(walletAddress && props.blockchain == 'klaytn' && walletName == 'kaikas') {\r\n            props.setBlockchain(props.blockchain)\r\n            props.setCustodialWallet(props.ownedWalletAddress)\r\n            props.setTokenIDs(props.tokenIDs)\r\n            props.setCollectionID(props.collectionID)\r\n            props.setTier(props.tier)\r\n            props.setImageName(props.imagePath)\r\n            props.setQuantity(props.quantity)\r\n            props.setShowTokenTransferDialog(true)\r\n        } else if(!walletAddress) {\r\n            navigate('/my-wallet', {state:{ message: intl.formatMessage({ id: 'DROPDOWN.PROFILE_CARD_MENU.CONN_WALLET' }) }});\r\n        } else {\r\n            navigate('/my-wallet', {state:{ message: intl.formatMessage({ id: 'DROPDOWN.PROFILE_CARD_MENU.INCORRECT_WALLET' }) }});\r\n        }\r\n    }\r\n \r\n    return (<>\r\n        {/*begin::Navigation*/}\r\n        <ul className=\"navi navi-hover\" style={{paddingLeft: 0}}>\r\n            {/* <li className=\"navi-item cursor-pointer mt-3\" style={{ listStyleType: \"none\" }} onClick={() => routeTo(`/preview-collection?id=${props.id}`)}>\r\n                <span className=\"navi-link\">\r\n                    <span className=\"navi-text ms-6 text-dark\">History</span>\r\n                </span>\r\n            </li> */}\r\n            <div className='separator my-2'></div>\r\n            <li \r\n                className=\"navi-item cursor-pointer mt-3 text-dark\" \r\n                style={{ listStyleType: \"none\" }} \r\n                onClick={() => handleClick()}>\r\n                <span className=\"navi-link\">\r\n                    <span className=\"navi-text ms-6 text-dark\"><FormattedMessage id=\"DROPDOWN.PROFILE_CARD_MENU.TRANSFER\" /></span>\r\n                </span>\r\n            </li>\r\n        </ul>\r\n        {/*end::Navigation*/}\r\n    </>);\r\n}\r\n","import { DropdownCustomToggler } from 'app/modules/dropdown/DropdownCustomToggler';\r\nimport { ProfileCardMenu } from 'app/modules/dropdown/ProfileCardMenu';\r\nimport { Dropdown } from 'react-bootstrap';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { useSelector, shallowEqual, useDispatch } from \"react-redux\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {RootState} from \"../../../../setup\"\r\n\r\n\r\n\r\nexport const TokenCard = (props: any) => {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const renderGoldSection = () => {\r\n        return (\r\n            <figcaption \r\n                className=\"px-4 py-1\" \r\n                style={{ background: 'linear-gradient(87.65deg, rgb(234, 209, 168) -1.34%, rgba(234, 209, 168, 0.2) 73.33%, rgb(234, 209, 168) 104.02%)' }}\r\n            >\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <h6>GOLD</h6>\r\n                    <h6>SINGLE</h6>\r\n                </div>\r\n            </figcaption>\r\n        )\r\n    }\r\n\r\n    const renderPlatinumSection = () => {\r\n        return (\r\n            <figcaption \r\n                className=\"px-4 py-1\" \r\n                style={{ background: 'linear-gradient(87.65deg, rgb(207, 216, 226) -1.34%, rgba(207, 216, 226, 0.2) 73.33%, rgb(207, 216, 226) 104.02%)' }}\r\n            >\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <h6>PLATINUM</h6>\r\n                    <h6>SINGLE</h6>\r\n                </div>\r\n            </figcaption>\r\n        )\r\n    }\r\n\r\n    const renderDiamondSection = () => {\r\n        return (\r\n            <figcaption \r\n                className=\"px-4 py-1\" \r\n                style={{ background: 'linear-gradient(87.65deg, rgb(193, 222, 228) -1.34%, rgba(193, 222, 228, 0.2) 73.33%, rgb(193, 222, 228) 104.02%)' }}\r\n            >\r\n                <div className=\"d-flex justify-content-between\">\r\n                <h6>Diamond</h6>\r\n                <h6>SINGLE</h6>\r\n                </div>\r\n            </figcaption>\r\n        )\r\n    }\r\n\r\n    const isCustodialWallet = (walletType: string) => {\r\n        if(walletType == \"custodial_wallet_eth\" || walletType == \"custodial_wallet_klay\") {\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n \r\n  return (\r\n    <>\r\n    <div id=\"p-card\" className=\"mx-3 my-3 cursor-pointer\" style={{ width: '280px' }}>\r\n        <div \r\n            className=\"card card-custom gutter-b card-stretch product-card\" \r\n            style={{ border: '1px solid rgb(184, 169, 169)' }}\r\n        >\r\n            {/* <span className=\"card-body d-flex flex-column bg-white justify-content-between\"> */}\r\n                <div \r\n                    className='d-flex ms-auto me-3'\r\n                    style={{ paddingTop: !isCustodialWallet(props.walletType) ? '20px' : '0px' }}\r\n                >\r\n                    {props.walletType && isCustodialWallet(props.walletType) &&\r\n                        <Dropdown className=\"dropdown dropdown-inline\" align={'end'}>\r\n                            <Dropdown.Toggle\r\n                                className=\"btn btn-clean btn-hover-light-primary btn-sm btn-icon cursor-pointer\"\r\n                                variant=\"transparent\"\r\n                                id=\"dropdown-toggle-top-user-profile\"\r\n                                as={DropdownCustomToggler}\r\n                            >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" fill=\"currentColor\" className=\"bi bi-three-dots-vertical\" viewBox=\"0 0 16 16\">\r\n                                <path d=\"M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z\"/>\r\n                            </svg>   \r\n                            </Dropdown.Toggle>\r\n                            <Dropdown.Menu className=\"dropdown-menu dropdown-menu-sm dropdown-menu-right mt-1\">\r\n                                <ProfileCardMenu \r\n                                    setCustodialWallet={props.setCustodialWallet}\r\n                                    setTokenIDs={props.setTokenIDs}\r\n                                    setCollectionID={props.setCollectionID}\r\n                                    setTier={props.setTier}\r\n                                    setImageName={props.setImageName}\r\n                                    setQuantity={props.setQuantity}\r\n                                    setShowTokenTransferDialog={props.setShowTokenTransferDialog}\r\n                                    tokenIDs={props.tokenIDs}\r\n                                    collectionID={props.collectionID}\r\n                                    tier={props.tier}\r\n                                    ownedWalletAddress={props.ownedWalletAddress}\r\n                                    blockchain={props.blockchain}\r\n                                    quantity={props.totalOwns}\r\n                                    imagePath={props.imagePath}\r\n                                    setBlockchain={props.setBlockchain}\r\n                                />\r\n                            </Dropdown.Menu>\r\n                        </Dropdown> \r\n                    }\r\n                    {props.walletType && !isCustodialWallet(props.walletType) && \r\n                        <span style={{ width: '20px', height: '20px' }}></span>\r\n                    }\r\n                </div>\r\n                <span\r\n                    onClick={() => navigate('/collector-asset-detail', {state: {\r\n                        tierImage: props.imagePath,\r\n                        collectionName: props.collectionName,\r\n                        dropDate: props.dropDate,\r\n                        artistName: props.artistName,\r\n                        collectionID: props.collectionID,\r\n                        tier: props.tier,\r\n                        ownershipOffered: props.ownershipOffered,\r\n                        totalQuantity: props.totalQuantity,\r\n                        totalOwns: props.totalOwns,\r\n                        blockchain: props.blockchain,\r\n                        collectorName: props.collectorName,\r\n                        collectorImage: props.collectorImage\r\n                    }})}\r\n                >\r\n                    <div className=\"text-center rounded\">\r\n                        <img src={props.imagePath} className=\"w-100\" />\r\n                    </div>\r\n                    {props.tier == '0' && \r\n                        renderGoldSection()\r\n                    }\r\n                    {props.tier == '1' && \r\n                        renderPlatinumSection()\r\n                    }\r\n                    {props.tier == '2' && \r\n                        renderDiamondSection()\r\n                    }\r\n                    <div className='px-3 py-5'>\r\n                        <div className=\"d-flex justify-content-between\">\r\n                            <div >\r\n                                <h4 className=\"font-size-12\">\r\n                                    <div className=\"text-dark\">{props.collectionName}</div>\r\n                                </h4>\r\n                                <h4 className=\"font-size-12\">\r\n                                    <div className=\"text-muted\">\r\n                                        <FormattedMessage id='PROFILE_PAGE.OWNS' />: {props.totalOwns} / {props.totalQuantity}\r\n                                    </div>\r\n                                </h4>\r\n                            </div>\r\n                            <div>\r\n                                <h4>\r\n                                    <div className=\"font-size-12\"><FormattedMessage id='ADMIN_COLLECTION_PREVIEW.BLOCKCHAIN' /></div>\r\n                                </h4>\r\n                                <h4>\r\n                                    <div className=\"font-size-12 text-muted\">{props.blockchain == 'ethereum' ? 'Ethereum' : 'Klaytn'}</div>\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </span>\r\n            {/* </span> */}\r\n        </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import {useState} from \"react\";\r\nimport { Button } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogActions } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { DialogTitle } from '@mui/material';\r\nimport { toAbsoluteUrl } from \"_metronic/helpers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"setup\";\r\nimport { transferNFT } from \"../crud\";\r\nimport { AlertDanger } from \"app/modules/alerts/Alerts\";\r\n\r\nconst blockchainAbbre: any = {\r\n    'ethereum' : 'Ethereum',\r\n    'klaytn' : 'Klaytn'\r\n}\r\n\r\n\r\nexport const TokenTransferDialog = (props: any) => {\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    const [openConfirmPopup, setOpenConfirmPopup] = useState(false)\r\n    const [password, setPassword] = useState<string>('')\r\n    const [message, setMessage] = useState<any>('')\r\n\r\n    const { walletAddress, userID }: any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            walletAddress: auth.walletAddress,\r\n            userID: auth.user?.userID,\r\n        })\r\n    )\r\n\r\n    if(message !== \"\") {\r\n        setTimeout(() => {\r\n          setChecked(false);\r\n          setTimeout(() => {\r\n            setMessage(\"\");\r\n          }, 200);\r\n        }, 5000);\r\n    }\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    const getOrderSuffix = (walletAddress: string) => {\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletEnd\r\n    }\r\n\r\n    const showPopup = () => {\r\n        var popup = document.getElementById(\"connectWallet\")!;\r\n        popup.classList.toggle(\"show\");\r\n    }\r\n\r\n    const openDialog = (id: string) => {\r\n        props.setDialogOpen(false)\r\n        const element: HTMLElement = document.getElementById(id)!\r\n        element.style.display='block'\r\n    }\r\n\r\n    const closeDialog = (id: string) => {\r\n        const element: HTMLElement = document.getElementById(id)!\r\n        element.style.display='none'\r\n    }\r\n\r\n    const handlePasswordChange = (event: any) => {\r\n        event.preventDefault()\r\n\r\n        setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        setLoading(true)\r\n        if(password.length > 0) {\r\n            if(walletAddress) {\r\n                transferNFT(\r\n                    props.collectionID,\r\n                    props.tier,\r\n                    props.custodialWallet,\r\n                    walletAddress,\r\n                    userID,\r\n                    props.tokenIDs,\r\n                    props.blockchain,\r\n                    password\r\n                )\r\n                .then((response) => {\r\n\r\n                    if(response.data.success) {\r\n                        setLoading(false)\r\n                        props.setShowTokenTransferDialog(false)\r\n                        props.setResponseMessage(response.data.message)\r\n                        props.setChecked(true)\r\n                        window.scrollTo(0,0)\r\n                    } else {\r\n                        setLoading(false)\r\n                        props.setShowTokenTransferDialog(false)\r\n                        props.setResponseFailMessage(response.data.message)\r\n                        props.setChecked(true)\r\n                        window.scrollTo(0,0)\r\n                    }\r\n                    \r\n                })\r\n                .catch((error) => console.log(error))\r\n            } else {\r\n                //\r\n            }\r\n        } else {\r\n            setMessage('Please enter your password.')\r\n            setChecked(true)\r\n        }\r\n        \r\n    }\r\n\r\n    const renderGoldSection = () => {\r\n        return (\r\n            <figcaption \r\n                className=\"px-4 py-1\" \r\n                style={{ background: 'linear-gradient(87.65deg, rgb(234, 209, 168) -1.34%, rgba(234, 209, 168, 0.2) 73.33%, rgb(234, 209, 168) 104.02%)' }}\r\n            >\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <h6>GOLD</h6>\r\n                    <h6>SINGLE</h6>\r\n                </div>\r\n            </figcaption>\r\n        )\r\n    }\r\n\r\n    const renderPlatinumSection = () => {\r\n        return (\r\n            <figcaption \r\n                className=\"px-4 py-1\" \r\n                style={{ background: 'linear-gradient(87.65deg, rgb(207, 216, 226) -1.34%, rgba(207, 216, 226, 0.2) 73.33%, rgb(207, 216, 226) 104.02%)' }}\r\n            >\r\n                <div className=\"d-flex justify-content-between\">\r\n                    <h6>PLATINUM</h6>\r\n                    <h6>SINGLE</h6>\r\n                </div>\r\n            </figcaption>\r\n        )\r\n    }\r\n\r\n    const renderDiamondSection = () => {\r\n        return (\r\n            <figcaption \r\n                className=\"px-4 py-1\" \r\n                style={{ background: 'linear-gradient(87.65deg, rgb(193, 222, 228) -1.34%, rgba(193, 222, 228, 0.2) 73.33%, rgb(193, 222, 228) 104.02%)' }}\r\n            >\r\n                <div className=\"d-flex justify-content-between\">\r\n                <h6>Diamond</h6>\r\n                <h6>SINGLE</h6>\r\n                </div>\r\n            </figcaption>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={props.showTokenTransferDialog} onClose={() => props.setShowTokenTransferDialog(false)} aria-labelledby=\"form-dialog-title\">\r\n                {message && message != '' && \r\n                    <AlertDanger message={message} checked={checked} />\r\n                }\r\n                <DialogTitle className='px-5 text-center fw-bolder text-muted' id=\"form-dialog-title\">Transfer Token</DialogTitle>\r\n                <div className='separator'></div>\r\n                <DialogContent>\r\n                    <div \r\n                        className='d-flex px-5 justify-content-center mb-5'\r\n                    >\r\n                        <span \r\n                            className='px-2 pb-4 ms-4 fs-5 cursor-pointer'\r\n                        >\r\n                            Transfer your token from custodial wallet\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"shadow-xl mx-auto mb-6\" style={{ width: '200px' }}>\r\n                        <div \r\n                            className=\"\" \r\n                            style={{ width: '100%' }}\r\n                        >\r\n                            <img \r\n                                className=\"w-100\" \r\n                                src={props.imagePath} \r\n                                // srcSet={dummyData[index].srcSet}\r\n                            />\r\n                            {props.tier == '0' && \r\n                                renderGoldSection()\r\n                            }\r\n                            {props.tier == '1' && \r\n                                renderPlatinumSection()\r\n                            }\r\n                            {props.tier == '2' && \r\n                                renderDiamondSection()\r\n                            }\r\n                        </div>\r\n                    </div> \r\n                    \r\n                    <div className='row mb-6'>\r\n                        <label className='col-lg-4 col-form-label required fw-bold fs-6 text-muted'>\r\n                            Blockchain\r\n                        </label>\r\n                        <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                                type='text'\r\n                                className='form-control form-control-lg form-control-solid text-muted'\r\n                                value={blockchainAbbre[props.blockchain]}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='row mb-6'>\r\n                        <label className='col-lg-4 col-form-label required fw-bold fs-6 text-muted'>\r\n                            Quantity\r\n                        </label>\r\n                        <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                                type='text'\r\n                                className='form-control form-control-lg form-control-solid text-muted'\r\n                                value={props.quantity}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='row mb-6'>\r\n                        <label className='col-lg-4 col-form-label required fw-bold fs-6 text-muted'>\r\n                            Transfer from (Custodial Wallet)\r\n                        </label>\r\n                        <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                                type='text'\r\n                                className='form-control form-control-lg form-control-solid text-muted'\r\n                                value={shrinkWalletAddress(props.custodialWallet)}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='row mb-6'>\r\n                        <label className='col-lg-4 col-form-label required fw-bold fs-6 text-muted'>\r\n                            Transfered to (Connected Wallet)\r\n                        </label>\r\n                        <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                                type='text'\r\n                                className='form-control form-control-lg form-control-solid text-muted'\r\n                                value={walletAddress ? shrinkWalletAddress(walletAddress) : \"\"}\r\n                                disabled\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='row mb-6'>\r\n                        <label className='col-lg-4 col-form-label required fw-bold fs-6 text-muted'>\r\n                            Password\r\n                        </label>\r\n                        <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                                type='password'\r\n                                autoComplete='off'\r\n                                className={'form-control form-control-lg form-control-solid'}\r\n                                value={password}\r\n                                onChange={(event) => handlePasswordChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n\r\n                <div className='separator mb-5'></div>\r\n\r\n                <div className=\"me-5 mt-5 mb-5 text-center\">\r\n                    <span \r\n                        onClick={() => handleSubmit()}\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Transfer\r\n                        {loading && \r\n                            <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                        }\r\n                    </span>\r\n                </div>\r\n            </Dialog>\r\n\r\n            {/* <div id={`checkout-confirmation`} style={{ display: 'none', zIndex: '2' }} className=\"modal\">\r\n                <span onClick={() => closeDialog(`checkout-confirmation`)} className=\"close\" title=\"Close Modal\">&times;</span>\r\n                <form className=\"modal-content\">\r\n                    <div className=\"px-7 py-7\">\r\n                        <h3>Proceed to checkout</h3>\r\n                        <p className='font-size-15'>\r\n                            Are you sure you want to proceed to the checkout page?\r\n                        </p>\r\n\r\n                        <div className=\"d-flex\">\r\n                            <button onClick={() => handleCheckoutSession()} type=\"button\" className=\"btn btn-primary\">\r\n                                Proceed\r\n                                {loading && \r\n                                    <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                                }\r\n                            </button>\r\n                            <button onClick={() => closeDialog(`checkout-confirmation`)} type=\"button\" className=\"btn btn-danger ms-3\">\r\n                                Cancel\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div> */}\r\n        </>\r\n    )\r\n}","import {useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CircularProgress from \"@mui/material/CircularProgress/CircularProgress\";\r\nimport { getKlaytnTokensDataByWallet, updateUserAvatarImage, updateUserCoverImage } from './crud'\r\nimport { TokenCard } from './components/TokenCard'\r\nimport { TokenTransferDialog } from './components/TokenTransferDialog'\r\nimport { tokenBalancesForWallets } from '../dropDetail/dropDetailEthereum/queries/Queries'\r\nimport { useSelector, useDispatch, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport * as auth from '../auth/redux/AuthRedux'\r\nimport { UserModel } from '../auth/models/UserModel';\r\nimport { FormattedMessage } from 'react-intl';\r\nimport { AlertSuccess, AlertDanger } from '../alerts/Alerts'\r\n\r\nconst ProfilePage: React.FC = () => {\r\n\r\n  const [tokensMeta, setTokensMeta] = useState<any>([])\r\n  const [loading, setLoading] = useState<boolean>(true)\r\n  const [coverImageUploading, setCoverImageUploading] = useState<boolean>(false)\r\n  const [userImageUploading, setUserImageUploading] = useState<boolean>(false)\r\n\r\n  const [coverImage, setCoverImage] = useState<any>('')\r\n  const [avatarImage, setAvatarImage] = useState<any>('')\r\n\r\n  const [custodialWallet, setCustodialWallet] = useState<string>('')\r\n  const [blockchain, setBlockchain] = useState<string>('')\r\n  const [tokenIDs, setTokenIDs] = useState<Array<any>>([])\r\n  const [collectionID, setCollectionID] = useState<string>('')\r\n  const [tier, setTier] = useState<string>('')\r\n  const [imageName, setImageName] = useState<string>('')\r\n  const [quantity, setQuantity] = useState<string>('')\r\n  const [showTokenTransferDialog, setShowTokenTransferDialog] = useState<boolean>(false)\r\n\r\n  const [responseMessage, setResponseMessage] = useState<string>('')\r\n  const [responseFailMessage, setResponseFailMessage] = useState<string>('')\r\n  const [checked, setChecked] = useState<boolean>(false)\r\n\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n\r\n  const { \r\n    userName, \r\n    userID, \r\n    userImage, \r\n    userCoverImage, \r\n    custWalletEth,\r\n    custWalletKlay,\r\n    metaMaskWallet,\r\n    kaikasWallet\r\n  }: any = useSelector<RootState>(\r\n    ({auth}) => ({\r\n      walletAddress: auth.walletAddress,\r\n      walletName: auth.walletName,\r\n      userName: auth.user?.username,\r\n      userID: auth.user?.userID,\r\n      userImage: auth.userImages.userImage,\r\n      userCoverImage: auth.userImages.coverImage,\r\n      custWalletEth: auth.userWalletList.ethCustodialWallet,\r\n      custWalletKlay: auth.userWalletList.klayCustodialWallet,\r\n      metaMaskWallet: auth.userWalletList.metamaskWallet,\r\n      kaikasWallet: auth.userWalletList.kaikasWallet\r\n    }), shallowEqual\r\n  )\r\n\r\n  useEffect(() => {\r\n\r\n    tokenBalancesForWallets([metaMaskWallet, custWalletEth])\r\n    .then((data) => {\r\n      setTokensMeta(data)\r\n    })\r\n    .then(() => {\r\n      getKlaytnTokensDataByWallet([kaikasWallet, custWalletKlay])\r\n      .then((response) => {\r\n        if(response.data.success) {\r\n          setTokensMeta((prevTokensMeta: any) => {\r\n            let newTokensMeta = [...prevTokensMeta, ...response.data.tokensMeta]\r\n            return newTokensMeta\r\n          })\r\n          setLoading(false)\r\n        }\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  if(responseMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setResponseMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  if(responseFailMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setResponseFailMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  const getCollectedNumber = (metaData: Array<any>) => {\r\n    let numb = 0;\r\n\r\n    metaData.map((data) => {\r\n      if(data.balance > 0) {\r\n        numb += 1\r\n      }\r\n    })\r\n\r\n    return numb\r\n  }\r\n\r\n  const handleCoverChange = (event: any) => {\r\n    setCoverImageUploading(true)\r\n    const formData = new FormData()\r\n    formData.append('userID', userID)\r\n    formData.append('coverImage', event.target.files[0])\r\n\r\n    updateUserCoverImage(formData)\r\n    .then((response) => {\r\n      if(response.data.success) {\r\n        dispatch(auth.actions.setUserImages(response.data.userImages))\r\n        setCoverImageUploading(false)\r\n      } else {\r\n        if(response.data.message) {\r\n          console.log(response.data.message)\r\n        }\r\n        setCoverImageUploading(false)\r\n      }\r\n    })\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  const handleAvatarChange = (event: any) => {\r\n    setUserImageUploading(true)\r\n    const formData = new FormData()\r\n    formData.append('userID', userID)\r\n    formData.append('userImage', event.target.files[0])\r\n\r\n    updateUserAvatarImage(formData)\r\n    .then((response) => {\r\n      if(response.data.success) {\r\n        dispatch(auth.actions.setUserImages(response.data.userImages))\r\n        setUserImageUploading(false)\r\n      } else {\r\n        if(response.data.message) {\r\n          console.log(response.data.message)\r\n        }\r\n        setUserImageUploading(false)\r\n      }\r\n    })\r\n    .catch((err) => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!loading &&\r\n        <>\r\n          <div className=\"bg-white\" style={{ marginTop: '-30px' }}>\r\n            <div className=\"position-relative m-auto w-100 h-300px\">\r\n              <img \r\n                  style={{width: 'inherit', height: 'inherit'}} \r\n                  // src=\"https://newwallpapershd.com/wp-content/uploads/2018/11/Technology-Music-Beats-Guitar-Facebook-Covers-Photos.jpg\"\r\n                  src={\r\n                    userCoverImage != 'default' ? `${process.env.REACT_APP_API_USER_COVER_IMAGE_URL}/${userCoverImage}` : \"https://newwallpapershd.com/wp-content/uploads/2018/11/Technology-Music-Beats-Guitar-Facebook-Covers-Photos.jpg\"\r\n                  }\r\n                  alt=\"\"\r\n              />\r\n              {coverImageUploading && \r\n                <div className='position-absolute' style={{ bottom: '120px', right: '50%' }}>\r\n                  <CircularProgress />\r\n                </div>\r\n              }\r\n              <div className=\"banner-upload-btn\" style={{marginTop: '50px'}}>\r\n                <input \r\n                  type=\"file\" \r\n                  id=\"prof-cover-image\" \r\n                  accept=\"image/png, image/jpeg\"\r\n                  onChange={(e) => handleCoverChange(e)}\r\n                />\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" className=\"camera\">\r\n                  <path fillRule=\"evenodd\" d=\"M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\"></path>\r\n                </svg>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex m-auto w-100\" style={{height: '130px'}}>\r\n              <div className=\"d-flex pb-0\">\r\n                <div \r\n                  className=\"position-relative profile-position\" \r\n                  style={{ width: '180px', height: '180px', borderRadius: '50%', marginLeft: '30px' }}\r\n                >\r\n                  <img \r\n                    className=\"position-absolute\" \r\n                    style={{ width: '180px', height: '180px', borderRadius: '50%' }}\r\n                    // src=\"https://www.meme-arsenal.com/memes/100773de10bd652a2366e129c5053a0a.jpg\" \r\n                    src={`${process.env.REACT_APP_API_USER_IMAGE_URL}/${userImage}`}\r\n                    alt=\"\"\r\n                  />\r\n                  {userImageUploading && \r\n                    <div className='position-absolute' style={{ top: '60px', left: '40%' }}>\r\n                      <CircularProgress />\r\n                    </div>\r\n                  }\r\n                  <div className=\"profile-upload-btn\" style={{marginTop: '50px'}}>\r\n                    <input \r\n                      type=\"file\" \r\n                      id=\"improf-avatar-imageage\" \r\n                      accept=\"image/png, image/jpeg\"\r\n                      onChange={(e) => handleAvatarChange(e)}\r\n                    />\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\" className=\"camera\">\r\n                      <path fillRule=\"evenodd\" d=\"M4 5a2 2 0 00-2 2v8a2 2 0 002 2h12a2 2 0 002-2V7a2 2 0 00-2-2h-1.586a1 1 0 01-.707-.293l-1.121-1.121A2 2 0 0011.172 3H8.828a2 2 0 00-1.414.586L6.293 4.707A1 1 0 015.586 5H4zm6 9a3 3 0 100-6 3 3 0 000 6z\" clipRule=\"evenodd\"></path>\r\n                    </svg>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='d-flex justify-content-between flex-wrap w-100'>\r\n                <div className=\"d-flex flex-column ms-3 mt-4\">\r\n                  <span className=\"fw-bolder\" style={{ fontSize: '30px' }}>{userName}</span>\r\n                  {/* <span className=\"text-muted\" style={{ fontSize: '20px' }}>{walletAddress}</span> */}\r\n                  <span className=\"text-muted\" style={{ fontSize: '20px' }}>\r\n                    <FormattedMessage id='PROFILE_PAGE.COLLECTED' /> : {getCollectedNumber(tokensMeta)}\r\n                  </span>\r\n                </div>\r\n                {/* <div className=\"d-flex flex-column py-4 px-4\">\r\n                  <span className=\"text-muted\" style={{ fontSize: '20px' }}>COLLECTED</span>\r\n                  <span className=\"text-muted\" style={{ fontSize: '20px' }}>{tokensMeta.length}</span>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n            <hr className=\"mx-auto\" style={{ width: '96%' }} />\r\n\r\n            {responseMessage && responseMessage !== \"\" &&\r\n              <AlertSuccess message={responseMessage} checked={checked} />\r\n            }\r\n\r\n            {responseFailMessage && responseFailMessage !== \"\" ? (\r\n              <AlertDanger message={responseFailMessage} checked={checked} />\r\n            ) : null }\r\n\r\n            <div className=\"d-flex justify-content-center\">\r\n              {tokensMeta && tokensMeta.length == 0 &&\r\n                <div className=\"d-flex justify-content-center\" style={{ height: '500px' }}>\r\n                  <div className=\"py-5 my-auto\">\r\n                    <span className=\"fst-italic\"><FormattedMessage id='PROFILE_PAGE.NO_ITEMS_IN_COLLEC' /></span>\r\n                  </div>\r\n                </div>\r\n              }\r\n              {tokensMeta && tokensMeta.length > 0 &&\r\n                <>\r\n                  <div className='d-flex flex-wrap justify-content-center my-9'>\r\n                    {tokensMeta.map((tokenMeta: any) => (\r\n                      <>\r\n                        {tokenMeta.balance > 0 && \r\n                          <TokenCard \r\n                            imagePath={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${tokenMeta.token_image}`}\r\n                            collectionID={tokenMeta.collection_id}\r\n                            tier={tokenMeta.token_tier}\r\n                            collectionName={tokenMeta.collection_name}\r\n                            totalQuantity={tokenMeta.token_quantity}\r\n                            dropDate={tokenMeta.drop_date}\r\n                            artistName={tokenMeta.artist_name}\r\n                            ownershipOffered={tokenMeta.ownership_offered}\r\n                            totalOwns={tokenMeta.balance}\r\n                            blockchain={tokenMeta.blockchain}\r\n                            setBlockchain={setBlockchain}\r\n                            setCustodialWallet={setCustodialWallet}\r\n                            setTokenIDs={setTokenIDs}\r\n                            setCollectionID={setCollectionID}\r\n                            setTier={setTier}\r\n                            setImageName={setImageName}\r\n                            setQuantity={setQuantity}\r\n                            setShowTokenTransferDialog={setShowTokenTransferDialog}\r\n                            walletType={tokenMeta.wallet_type}\r\n                            tokenIDs={tokenMeta.token_ids}\r\n                            ownedWalletAddress={tokenMeta.wallet_address}\r\n                            collectorImage={userImage}\r\n                            collectorName={userName}\r\n                          />\r\n                        }\r\n                      </>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              }\r\n            </div>\r\n          </div>\r\n          <TokenTransferDialog \r\n            custodialWallet={custodialWallet}\r\n            blockchain={blockchain}\r\n            tokenIDs={tokenIDs}\r\n            collectionID={collectionID}\r\n            tier={tier}\r\n            imagePath={imageName}\r\n            quantity={quantity}\r\n            showTokenTransferDialog={showTokenTransferDialog}\r\n            setShowTokenTransferDialog={setShowTokenTransferDialog}\r\n            setResponseMessage={setResponseMessage}\r\n            setResponseFailMessage={setResponseFailMessage}\r\n            setChecked={setChecked}\r\n          />\r\n        </>\r\n      }\r\n      {loading && \r\n          <div className='d-flex w-100 h-100'>\r\n              <div className='my-auto mx-auto'>\r\n                  <div className='d-flex flex-column justify-content-center'>\r\n                      <span className='text-primary fs-3'>Loading</span> <br />\r\n                      <span className='ms-4'>\r\n                          <CircularProgress />\r\n                      </span>\r\n                  </div>\r\n              </div>\r\n          </div>\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n"],"sourceRoot":""}