{"version":3,"sources":["app/modules/wizards/components/steps/Step1.tsx","app/modules/wizards/components/steps/Step2.tsx","app/modules/wizards/components/steps/Step3.tsx","app/modules/wizards/components/CreateAccountWizardHelper.ts","app/modules/wizards/components/steps/Step4.tsx","app/modules/wizards/components/Horizontal.tsx","app/modules/wizards/WizardsPage.tsx"],"names":["Step1","props","useState","artistData","setArtistData","getArtistName","useDispatch","artistID","find","data","id","artist_name","useEffect","getArtistsData","then","response","_artistData","artist_data","catch","error","localStorage","setItem","className","value","selectedArtist","name","onChange","e","event","target","setSelectedArtist","setArtistName","map","image","src","URL","createObjectURL","type","accept","handleImageChange","dropCoverImage","style","width","handleDropCoverImageChange","legalPDF","toAbsoluteUrl","handlePDFChange","placeholder","dropReleaseDateTime","min","max","preventDefault","setdropReleaseDateTime","handleDropDateTimeChange","as","setSelectedBlockchain","handleBlockhainChange","selectedBlockchain","rows","defaultChecked","selectedGoldTier","setSelectedGoldTier","r","selectedPlatinumTier","setSelectedPlatinumTier","selectedDiamondTier","setSelectedDiamondTier","Step2","intl","useIntl","formatMessage","disabled","image0","handleTokenImage0Change","goldTierBenefitCheckboxData","firstDibsNextDrop","handleCheckBoxChange","setGoldTierStdBenefits","setGoldTierBenefitCheckboxData","artistName","goldTierStdBenefits","exclAccessToUnreleased","accessToRoyalCollectorChannel","exclusiveContent","firstDibAllDrop","goldTierBonus","bonus","index","setGoldTierBonus","s","newArr","slice","handleBonusChange","onClick","console","log","length","splice","removeBonusInput","background","color","borderColor","Step3","image1","handleTokenImage1Change","platinumTierBenefitCheckboxData","setPlatinumTierStdBenefits","setPlatinumTierBenefitCheckboxData","platinumTierStdBenefits","platinumTierBonus","setPlatinumTierBonus","removePlatinumBonusInput","createAccountSchemas","Yup","inits","collectionName","spotifyURL","collectionType","blockchain","collectionDescription","collectionOwner","ownershipOffered0","price0","quantity0","ownershipOffered1","price1","quantity1","ownershipOffered2","price2","quantity2","patentAbstract","patentSummary","fillingInfo","appStatus","patentURL","proHist1","proHist2","proHist3","accountPlan","businessName","businessDescriptor","businessType","businessDescription","businessEmail","nameOnCard","cardNumber","cardExpiryMonth","cardExpiryYear","cardCvv","saveCard","tokenBenefitdefaultChecboxData0","tokenBenefitdefaultChecboxData1","tokenBenefitdefaultChecboxData2","Step4","diamondTierBonus","image2","handleTokenImage2Change","diamondTierBenefitCheckboxData","setDiamondTierStdBenefits","setDiamondTierBenefitCheckboxData","diamondTierStdBenefits","setDiamondTierBonus","defaultStepperOptions","startIndex","animation","animationSpeed","animationNextClass","animationPreviousClass","Horizontal","stepperRef","useRef","stepper","currentSchema","initValues","useSelector","auth","walletAddress","isAdmin","user","loading","setLoading","checked","setChecked","setImage","setDropCoverImage","tokenImage0","setTokenImage0","tokenImage1","setTokenImage1","tokenImage2","setTokenImage2","setLegalPDF","successMessage","setSuccessMessage","errorMessage","setErrorMessage","dispatch","currentIndex","setCurrentIndex","now","Date","utcString","toISOString","substring","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","getSeconds","toString","getCurrentDataTime","selectedAnyTiers","setSelectedAnyTiers","current","loadStepper","step","StepperComponent","currentStepIndex","totatStepsNumber","setTimeout","files","authToken","accessToken","userID","userName","username","shallowEqual","createInsance","prevStep","goPrev","getCombinedObject","stdBenefits","custBenefits","stateSetter","tierBenefitCheckboxDataSetter","text","state","isRemovingElement","property","newData","toggleBenefitCheckboxData","filter","message","ref","validationSchema","initialValues","onSubmit","values","actions","goNext","valData","goldTierPrice","platinumTierPrice","diamondTierPrice","valStatus","msg","parseFloat","parseInt","checkRequiredFields","formData","FormData","append","colDescriptArr","split","JSON","stringify","createCollection","success","goto","window","scrollTo","resetForm","logout","noValidate","path","undefined","element","to","WizardsPage"],"mappings":"2LAUMA,EAAQ,SAACC,GAEb,MAAoCC,mBAAqB,IAAzD,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBMC,GAnBWC,cAmBK,SAACC,GAErB,OADmBJ,EAAWK,MAAK,SAACC,GAAD,OAAUA,EAAKC,IAAMH,KAAUI,cAepE,OAXAC,qBAAU,WACRC,cACGC,MAAK,SAACC,GACH,IAAMC,EAAcD,EAASN,KAAKQ,YAClCb,EAAcY,MACfE,OAAM,SAACC,GACNC,aAAaC,QAAQ,iBAAkB,0BAG5C,IAGD,sBAAKC,UAAU,QAAf,UAEE,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SACE,cAAC,IAAD,CAAkBZ,GAAG,oCAGnB,yBACEa,MAAOtB,EAAMuB,eACbF,UAAU,+CACVG,KAAK,aACLC,SAAU,SAACC,GApCI,IAACC,EAED,KAFCA,EAoCoBD,GAlCrCE,OAAON,QACdtB,EAAM6B,kBAAkBF,EAAMC,OAAON,OACrCtB,EAAM8B,cAAc1B,EAAcuB,EAAMC,OAAON,UA4BzC,UAME,wBAAQA,MAAM,GAAd,2BAECpB,EAAW6B,KAAI,SAACvB,GAAD,OACd,wBAAsBc,MAAOd,EAAKC,GAAlC,SAAuCD,EAAKE,aAA/BF,EAAKC,aAK5B,sBAAKY,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,sCACrB,sBAAMY,UAAU,OAAhB,8CAGe,KAAhBrB,EAAMgC,OACL,8BACE,qBAAKC,IAAKC,IAAIC,gBAAgBnC,EAAMgC,OAAQX,UAAU,mBAI1D,8BACE,uBAAOe,KAAK,OAAO3B,GAAG,SAAS4B,OAAO,wBAAwBZ,SAAU,SAACC,GAAD,OAAO1B,EAAMsC,kBAAkBZ,WAI3G,sBAAKL,UAAU,eAAf,UACI,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,4CACrB,sBAAMY,UAAU,OAAhB,+CAGwB,KAAzBrB,EAAMuC,gBACH,8BACI,qBAAKN,IAAKC,IAAIC,gBAAgBnC,EAAMuC,gBAAiBlB,UAAU,OAAOmB,MAAO,CAAEC,MAAO,WAI9F,8BACI,uBAAOL,KAAK,OAAO3B,GAAG,SAAS4B,OAAO,wBAAwBZ,SAAU,SAACC,GAAD,OAAO1B,EAAM0C,2BAA2BhB,WAIxH,sBAAKL,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACA,cAAC,IAAD,CAAkBZ,GAAG,sCACnB,sBAAMY,UAAU,OAAhB,iDAGkB,KAAnBrB,EAAM2C,UACL,8BACI,qBACEV,IAAKW,YAAc,sBACnBvB,UAAU,mBAKlB,8BACE,uBAAOe,KAAK,OAAO3B,GAAG,SAAS4B,OAAO,OAAOZ,SAAU,SAACC,GAAD,OAAO1B,EAAM6C,gBAAgBnB,WAIxF,sBAAKL,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,2CACrB,sBAAMY,UAAU,OAAhB,uCAGF,cAAC,IAAD,CACEe,KAAK,OACLf,UAAU,kDACVG,KAAK,iBACLsB,YAAY,KAEd,qBAAKzB,UAAU,gDAAf,SACE,cAAC,IAAD,CAAcG,KAAK,wBAIvB,sBAAKH,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,2DACrB,sBAAMY,UAAU,OAAhB,sEAGF,cAAC,IAAD,CACEe,KAAK,OACLf,UAAU,kDACVG,KAAK,kBACLsB,YAAY,KAEd,qBAAKzB,UAAU,gDAAf,SACE,cAAC,IAAD,CAAcG,KAAK,yBAIvB,sBAAKH,UAAU,eAAf,UACE,uBAAOA,UAAU,kBAAjB,SAAmC,cAAC,IAAD,CAAkBZ,GAAG,+CAExD,cAAC,IAAD,CACE2B,KAAK,OACLf,UAAU,kDACVG,KAAK,aACLsB,YAAY,QAIhB,sBAAKzB,UAAU,eAAf,UACE,uBAAOA,UAAU,2BAAjB,SAA4C,cAAC,IAAD,CAAkBZ,GAAG,+CAEjE,uBACE2B,KAAK,iBACLf,UAAU,kDACVC,MAAOtB,EAAM+C,oBACbC,IAAI,mBACJC,IAAI,mBACJxB,SAAU,SAACE,GAAD,OA/Je,SAACA,GAChCA,EAAMuB,iBACNlD,EAAMmD,uBAAuBxB,EAAMC,OAAON,OA6Jf8B,CAAyBzB,MAGhD,qBAAKN,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SAAuC,cAAC,IAAD,CAAkBZ,GAAG,6CAE5D,eAAC,IAAD,CACE4C,GAAG,SACH7B,KAAK,iBACLH,UAAU,+CAHZ,UAKE,wBAAQC,MAAM,GAAd,oCACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,eAAd,8BACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,QAAd,sBAEF,qBAAKD,UAAU,gDAAf,SACE,cAAC,IAAD,CAAcG,KAAK,wBAIvB,sBAAKH,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SAAuC,cAAC,IAAD,CAAkBZ,GAAG,wCAE5D,yBACEY,UAAU,+CACVI,SAAU,SAACE,GAAD,OAnMY,SAACA,GAC7B3B,EAAMsD,sBAAsB3B,EAAMC,OAAON,OAkMdiC,CAAsB5B,IAC3CL,MAAOtB,EAAMwD,mBAHf,UAKE,wBAAQlC,MAAM,GAAd,+BACA,wBAAQA,MAAM,WAAd,8BACA,wBAAQA,MAAM,SAAd,+BAEF,qBAAKD,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SAAuC,cAAC,IAAD,CAAkBZ,GAAG,oDAE5D,cAAC,IAAD,CACE4C,GAAG,WACH7B,KAAK,wBACLH,UAAU,kDACVoC,KAAM,IAGR,qBAAKpC,UAAU,gDAAf,SACE,cAAC,IAAD,CAAcG,KAAK,+BAIvB,sBAAKH,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SAAuC,cAAC,IAAD,CAAkBZ,GAAG,0CAE5D,sBAAKY,UAAU,cAAf,UACE,wBAAOA,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAM2D,iBACtBlC,SAAU,WACRzB,EAAM4D,qBAAoB,SAACC,GAAY,OAAQA,QAKnD,sBAAMxC,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,4CAI7D,wBAAOY,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAM8D,qBACtBrC,SAAU,WACRzB,EAAM+D,yBAAwB,SAACF,GAAY,OAAQA,QAKvD,sBAAMxC,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,gDAI7D,wBAAOY,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMgE,oBACtBvC,SAAU,WACRzB,EAAMiE,wBAAuB,SAACJ,GAAY,OAAQA,QAKtD,sBAAMxC,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,kDAK/D,qBAAKY,UAAU,yD,SChSjB6C,EAAQ,SAAClE,GAEb,IAAMmE,EAAOC,cAiDb,OACE,sBAAK/C,UAAU,QAAf,UAGE,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,2BAAjB,SACE,cAAC,IAAD,CAAkBZ,GAAG,kCAGvB,cAAC,IAAD,CACE2B,KAAK,OACLf,UAAU,kDACVG,KAAK,GACLsB,YAAY,GACZxB,MAAO6C,EAAKE,cAAc,CAAC5D,GAAI,qCAC/B6D,UAAU,IAEZ,qBAAKjD,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,uCACrB,sBAAMY,UAAU,OAAhB,8CAGgB,KAAjBrB,EAAMuE,QACL,8BACE,qBAAKtC,IAAKC,IAAIC,gBAAgBnC,EAAMuE,QAASlD,UAAU,mBAI3D,8BACE,uBAAOe,KAAK,OAAO3B,GAAG,QAAQ4B,OAAO,wBAAwBZ,SAAU,SAACC,GAAD,OAAO1B,EAAMwE,wBAAwB9C,WAIhH,sBAAKL,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,6CACrB,sBAAMY,UAAU,OAAhB,6DAGF,cAAC,IAAD,CACEe,KAAK,OACLf,UAAU,kDACVG,KAAK,oBACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,iCADvB,IAEiC,KAA7BT,EAAMwD,oBAAyD,YAA5BxD,EAAMwD,mBAAmC,yCAA2C,0CAF3H,OAKA,cAAC,IAAD,CACEpB,KAAK,OACLf,UAAU,kDACVG,KAAK,SACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,oCACrB,sBAAMY,UAAU,OAAhB,qDAGF,cAAC,IAAD,CACEe,KAAK,OACLf,UAAU,kDACVG,KAAK,YACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SAAuC,cAAC,IAAD,CAAkBZ,GAAG,mDAE5D,sBAAKY,UAAU,OAAf,UACE,wBAAOA,UAAU,4EAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMyE,4BAA4BC,kBAClDjD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM4E,uBACN5E,EAAM6E,+BAFR,iCAG4B7E,EAAM8E,WAAa9E,EAAM8E,WAAa,GAHlE,SAIE9E,EAAM+E,oBACN/E,EAAMyE,4BAA4BC,kBAClC,wBAKN,sBAAMrD,UAAU,wDAAhB,SACE,uBAAMA,UAAU,oBAAhB,oCAA4DrB,EAAM8E,WAAa9E,EAAM8E,WAAa,GAAlG,gBAIJ,wBAAOzD,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMyE,4BAA4BO,uBAClDvD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM4E,uBACN5E,EAAM6E,+BACN,uCACA7E,EAAM+E,oBACN/E,EAAMyE,4BAA4BO,uBAClC,6BAKN,sBAAM3D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,mDAI7D,wBAAOY,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMyE,4BAA4BQ,8BAClDxD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM4E,uBACN5E,EAAM6E,+BACN,4CACA7E,EAAM+E,oBACN/E,EAAMyE,4BAA4BQ,8BAClC,oCAMN,sBAAM5D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,oDAI7D,wBAAOY,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMyE,4BAA4BS,iBAClDzD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM4E,uBACN5E,EAAM6E,+BACN,oBACA7E,EAAM+E,oBACN/E,EAAMyE,4BAA4BS,iBAClC,uBAMN,sBAAM7D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,oDAI7D,wBAAOY,UAAU,4EAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMyE,4BAA4BU,gBAClD1D,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM4E,uBACN5E,EAAM6E,+BAFR,mCAG8B7E,EAAM8E,WAAa9E,EAAM8E,WAAa,GAHpE,UAIE9E,EAAM+E,oBACN/E,EAAMyE,4BAA4BU,gBAClC,sBAMN,sBAAM9D,UAAU,wDAAhB,SACE,uBAAMA,UAAU,oBAAhB,sCAA8DrB,EAAM8E,WAAa9E,EAAM8E,WAAa,GAApG,oBAKN,qBAAKzD,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SAAuC,cAAC,IAAD,CAAkBZ,GAAG,iDAC3DT,EAAMoF,cAAcrD,KAAI,SAACsD,EAAYC,GAAb,OACvB,qCACA,0BAEE9D,KAAK,GACLf,GAAI6E,EACJjE,UAAU,uDACVoC,KAAM,EACNnC,MAAO+D,EACP5D,SAAU,SAACE,GAAD,OApRM,SAACD,GACzBA,EAAEwB,iBACF,IAAMoC,EAAQ5D,EAAEE,OAAOnB,GAEvBT,EAAMuF,kBAAiB,SAACC,GACtB,IAAMC,EAASD,EAAEE,QAQjB,OANGhE,EAAEE,OAAOJ,KACViE,EAAOH,GAAS5D,EAAEE,OAAON,MAKpBmE,KAuQoBE,CAAkBhE,KANlC0D,EAAM5E,IAYb,wBAAoBmF,QAAS,kBAxPZ,SAACN,GACxBO,QAAQC,IAAIR,GACZtF,EAAMuF,kBAAiB,SAACC,GACtB,GAAGA,EAAEO,OAAS,EAAG,CACf,IAAMN,EAASD,EAAEE,QAEjB,OADAD,EAAOO,OAAOV,EAAO,GACd,YAAIG,GAEX,OAAOD,KAgP8BS,CAAiBX,IAAQlD,KAAK,SAASf,UAAU,sBAApF,SACE,cAAC,IAAD,CAAkBZ,GAAG,mDADV6E,YAQjB,wBAAQM,QAjRU,WACpB5F,EAAMuF,kBAAiB,SAACC,GACtB,GAAGA,EAAEO,OAAS,EAAG,CACAP,EAAEA,EAAEO,OAAS,GAAGtF,GAC/B,MAAM,GAAN,mBACK+E,GADL,CAEE,KAGF,MAAM,GAAN,mBACKA,GADL,CAEE,SAsQ4BpD,KAAK,SAASI,MAAO,CAAE0D,WAAY,UAAWC,MAAO,OAAQC,YAAa,SAAW/E,UAAU,oBAA/H,SACE,cAAC,IAAD,CAAkBZ,GAAG,kDC/RvB4F,EAAQ,SAACrG,GAEb,IAAMmE,EAAOC,cAgDb,OACE,sBAAK/C,UAAU,qBAAf,UAEE,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,2BAAjB,SAA4C,cAAC,IAAD,CAAkBZ,GAAG,kCAEjE,cAAC,IAAD,CACE2B,KAAK,OACLf,UAAU,kDACVG,KAAK,GACLsB,YAAY,GACZxB,MAAO6C,EAAKE,cAAc,CAAC5D,GAAI,yCAC/B6D,UAAU,IAEZ,qBAAKjD,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,uCACrB,sBAAMY,UAAU,OAAhB,8CAGgB,KAAjBrB,EAAMsG,QACL,8BACE,qBAAKrE,IAAKC,IAAIC,gBAAgBnC,EAAMsG,QAASjF,UAAU,mBAI3D,8BACE,uBAAOe,KAAK,OAAO3B,GAAG,QAAQ4B,OAAO,wBAAwBZ,SAAU,SAACC,GAAD,OAAO1B,EAAMuG,wBAAwB7E,WAIhH,sBAAKL,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,6CACrB,sBAAMY,UAAU,OAAhB,iEAGF,cAAC,IAAD,CACEe,KAAK,OACLf,UAAU,kDACVG,KAAK,oBACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,iCADvB,IAEiC,KAA7BT,EAAMwD,oBAAyD,YAA5BxD,EAAMwD,mBAAmC,6CAA+C,8CAF/H,OAKA,cAAC,IAAD,CACEpB,KAAK,OACLf,UAAU,kDACVG,KAAK,SACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,oCACrB,sBAAMY,UAAU,OAAhB,yDAGF,cAAC,IAAD,CACEe,KAAK,OACLf,UAAU,kDACVG,KAAK,YACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SACE,cAAC,IAAD,CAAkBZ,GAAG,mDAGvB,sBAAKY,UAAU,OAAf,UACE,wBAAOA,UAAU,4EAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMwG,gCAAgC9B,kBACtDjD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAMyG,2BACNzG,EAAM0G,mCAFR,iCAG4B1G,EAAM8E,WAAa9E,EAAM8E,WAAa,GAHlE,SAIE9E,EAAM2G,wBACN3G,EAAMwG,gCAAgC9B,kBACtC,wBAKN,sBAAMrD,UAAU,wDAAhB,SACE,uBAAMA,UAAU,oBAAhB,oCAA4DrB,EAAM8E,WAAa9E,EAAM8E,WAAa,GAAlG,gBAIJ,wBAAOzD,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMwG,gCAAgCxB,uBACtDvD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAMyG,2BACNzG,EAAM0G,mCACN,uCACA1G,EAAM2G,wBACN3G,EAAMwG,gCAAgCxB,uBACtC,6BAKN,sBAAM3D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,mDAI7D,wBAAOY,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMwG,gCAAgCvB,8BACtDxD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAMyG,2BACNzG,EAAM0G,mCACN,4CACA1G,EAAM2G,wBACN3G,EAAMwG,gCAAgCvB,8BACtC,oCAMN,sBAAM5D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,oDAI7D,wBAAOY,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMwG,gCAAgCtB,iBACtDzD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAMyG,2BACNzG,EAAM0G,mCACN,oBACA1G,EAAM2G,wBACN3G,EAAMwG,gCAAgCtB,iBACtC,uBAMN,sBAAM7D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SAAoC,cAAC,IAAD,CAAkBZ,GAAG,oDAI7D,wBAAOY,UAAU,4EAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAMwG,gCAAgCrB,gBACtD1D,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAMyG,2BACNzG,EAAM0G,mCAFR,mCAG8B1G,EAAM8E,WAAa9E,EAAM8E,WAAa,GAHpE,UAIE9E,EAAM2G,wBACN3G,EAAMwG,gCAAgCrB,gBACtC,sBAMN,sBAAM9D,UAAU,wDAAhB,SACE,uBAAMA,UAAU,oBAAhB,sCAA8DrB,EAAM8E,WAAa9E,EAAM8E,WAAa,GAApG,oBAKN,qBAAKzD,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SAAuC,cAAC,IAAD,CAAkBZ,GAAG,iDAC3DT,EAAM4G,kBAAkB7E,KAAI,SAACsD,EAAYC,GAAb,OAC3B,qCACA,0BAEE9D,KAAK,GACLf,GAAI6E,EACJjE,UAAU,uDACVoC,KAAM,EACNnC,MAAO+D,EACP5D,SAAU,SAACE,GAAD,OAlRM,SAACD,GACzBA,EAAEwB,iBACF,IAAMoC,EAAQ5D,EAAEE,OAAOnB,GAEvBT,EAAM6G,sBAAqB,SAACrB,GAC1B,IAAMC,EAASD,EAAEE,QAQjB,OANGhE,EAAEE,OAAOJ,KACViE,EAAOH,GAAS5D,EAAEE,OAAON,MAKpBmE,KAqQoBE,CAAkBhE,KANlC0D,EAAM5E,IAYb,wBAAoBmF,QAAS,kBAtPJ,SAACN,GAChCtF,EAAM6G,sBAAqB,SAACrB,GAC1B,GAAGA,EAAEO,OAAS,EAAG,CACf,IAAMN,EAASD,EAAEE,QAEjB,OADAD,EAAOO,OAAOV,EAAO,GACd,YAAIG,GAEX,OAAOD,KA+O8BsB,CAAyBxB,IAAQlD,KAAK,SAASf,UAAU,sBAA5F,SACE,cAAC,IAAD,CAAkBZ,GAAG,mDADV6E,YAQjB,wBAAQM,QA/QkB,WAC5B5F,EAAM6G,sBAAqB,SAACrB,GAC1B,GAAGA,EAAEO,OAAS,EAAG,CACAP,EAAEA,EAAEO,OAAS,GAAGtF,GAC/B,MAAM,GAAN,mBACK+E,GADL,CAEE,KAGF,MAAM,GAAN,mBACKA,GADL,CAEE,SAoQoCpD,KAAK,SAASI,MAAO,CAAE0D,WAAY,UAAWC,MAAO,OAAQC,YAAa,SAAW/E,UAAU,oBAAvI,SACE,cAAC,IAAD,CAAkBZ,GAAG,kD,QC9PvBsG,EAAuB,C,MAC3BC,EAAW,KAoCPC,EAAwB,CAE5BC,eAAgB,GAChBC,WAAY,GACZC,eAAgB,GAChBC,WAAY,GACZC,sBAAuB,GACvBC,gBAAiB,GAIjBC,kBAAmB,GACnBC,OAAQ,GACRC,UAAW,GACXC,kBAAmB,GACnBC,OAAQ,GACRC,UAAW,GACXC,kBAAmB,GACnBC,OAAQ,GACRC,UAAW,GACXC,eAAgB,GAChBC,cAAe,GACfC,YAAa,GACbC,UAAW,GACXC,UAAW,GACXC,SAAU,aACVC,SAAU,aACVC,SAAU,aACVC,YAAa,IACbC,aAAc,kBACdC,mBAAoB,aACpBC,aAAc,IACdC,oBAAqB,GACrBC,cAAe,mBACfC,WAAY,UACZC,WAAY,sBACZC,gBAAiB,IACjBC,eAAgB,IAChBC,QAAS,MACTC,SAAU,KAGNC,EAA6D,CACjE3E,mBAAmB,EACnBS,iBAAiB,EACjBF,+BAA+B,EAC/BC,kBAAkB,EAClBF,wBAAwB,GAGpBsE,EAA6D,CACjE5E,mBAAmB,EACnBS,iBAAiB,EACjBF,+BAA+B,EAC/BC,kBAAkB,EAClBF,wBAAwB,GAGpBuE,EAA6D,CACjE7E,mBAAmB,EACnBS,iBAAiB,EACjBF,+BAA+B,EAC/BC,kBAAkB,EAClBF,wBAAwB,G,yBClJpBwE,EAAQ,SAACxJ,GAEb,IAAMmE,EAAOC,cAqDb,OAFAyB,QAAQC,IAAI9F,EAAMyJ,kBAGhB,sBAAKpI,UAAU,QAAf,UACE,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,2BAAjB,SAA4C,cAAC,IAAD,CAAkBZ,GAAG,kCAEjE,cAAC,IAAD,CACE2B,KAAK,OACLf,UAAU,kDACVG,KAAK,GACLsB,YAAY,GACZxB,MAAO6C,EAAKE,cAAc,CAAC5D,GAAI,wCAC/B6D,UAAU,IAEZ,qBAAKjD,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,kBAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,uCACrB,sBAAMY,UAAU,OAAhB,8CAGgB,KAAjBrB,EAAM0J,QACL,8BACE,qBAAKzH,IAAKC,IAAIC,gBAAgBnC,EAAM0J,QAASrI,UAAU,mBAI3D,8BACE,uBAAOe,KAAK,OAAO3B,GAAG,QAAQ4B,OAAO,wBAAwBZ,SAAU,SAACC,GAAD,OAAO1B,EAAM2J,wBAAwBjI,WAIhH,sBAAKL,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,6CACrB,sBAAMY,UAAU,OAAhB,gEAGF,cAAC,IAAD,CACEe,KAAK,OACLf,UAAU,kDACVG,KAAK,oBACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,iCADvB,IAEiC,KAA7BT,EAAMwD,oBAAyD,YAA5BxD,EAAMwD,mBAAmC,4CAA8C,6CAF9H,OAKA,cAAC,IAAD,CACEpB,KAAK,OACLf,UAAU,kDACVG,KAAK,SACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,wBAAOA,UAAU,2BAAjB,UACE,cAAC,IAAD,CAAkBZ,GAAG,oCACrB,sBAAMY,UAAU,OAAhB,wDAGF,cAAC,IAAD,CACEe,KAAK,OACLf,UAAU,kDACVG,KAAK,YACLsB,YAAY,KAEd,qBAAKzB,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SACE,cAAC,IAAD,CAAkBZ,GAAG,mDAGvB,sBAAKY,UAAU,OAAf,UACE,wBAAOA,UAAU,4EAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAM4J,+BAA+BlF,kBACrDjD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM6J,0BACN7J,EAAM8J,kCAFR,iCAG4B9J,EAAM8E,WAAa9E,EAAM8E,WAAa,GAHlE,SAIE9E,EAAM+J,uBACN/J,EAAM4J,+BAA+BlF,kBACrC,wBAKN,sBAAMrD,UAAU,wDAAhB,SACE,uBAAMA,UAAU,oBAAhB,oCAA4DrB,EAAM8E,WAAa9E,EAAM8E,WAAa,GAAlG,gBAIJ,wBAAOzD,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAM4J,+BAA+B5E,uBACrDvD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM6J,0BACN7J,EAAM8J,kCACN,uCACA9J,EAAM+J,uBACN/J,EAAM4J,+BAA+B5E,uBACrC,6BAKN,sBAAM3D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAkBZ,GAAG,mDAK3B,wBAAOY,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAM4J,+BAA+B3E,8BACrDxD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM6J,0BACN7J,EAAM8J,kCACN,4CACA9J,EAAM+J,uBACN/J,EAAM4J,+BAA+B3E,8BACrC,oCAMN,sBAAM5D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAkBZ,GAAG,oDAK3B,wBAAOY,UAAU,uEAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAM4J,+BAA+B1E,iBACrDzD,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM6J,0BACN7J,EAAM8J,kCACN,oBACA9J,EAAM+J,uBACN/J,EAAM4J,+BAA+B1E,iBACrC,uBAMN,sBAAM7D,UAAU,wDAAhB,SACE,sBAAMA,UAAU,oBAAhB,SACE,cAAC,IAAD,CAAkBZ,GAAG,oDAK3B,wBAAOY,UAAU,4EAAjB,UACE,uBACEA,UAAU,mBACVe,KAAK,WACLZ,KAAK,sBACLkC,eAAgB1D,EAAM4J,+BAA+BzE,gBACrD1D,SAAU,WACRzB,EAAM2E,qBACJ3E,EAAM6J,0BACN7J,EAAM8J,kCAFR,kCAG6B9J,EAAM8E,WAAa9E,EAAM8E,WAAa,GAHnE,UAIE9E,EAAM+J,uBACN/J,EAAM4J,+BAA+BzE,gBACrC,sBAMN,sBAAM9D,UAAU,wDAAhB,SACE,uBAAMA,UAAU,oBAAhB,sCAA8DrB,EAAM8E,WAAa9E,EAAM8E,WAAa,GAApG,oBAKN,qBAAKzD,UAAU,qDAKjB,sBAAKA,UAAU,eAAf,UACE,uBAAOA,UAAU,sBAAjB,SAAuC,cAAC,IAAD,CAAkBZ,GAAG,iDAC3DT,EAAMyJ,iBAAiB1H,KAAI,SAACsD,EAAYC,GAAb,OAC1B,qCACA,0BAEE9D,KAAK,GACLf,GAAI6E,EACJjE,UAAU,uDACVoC,KAAM,EACNnC,MAAO+D,EACP5D,SAAU,SAACE,GAAD,OA5RM,SAACD,GACzBA,EAAEwB,iBACF,IAAMoC,EAAQ5D,EAAEE,OAAOnB,GAEvBT,EAAMgK,qBAAoB,SAACxE,GACzB,IAAMC,EAASD,EAAEE,QAQjB,OANGhE,EAAEE,OAAOJ,KACViE,EAAOH,GAAS5D,EAAEE,OAAON,MAKpBmE,KA+QoBE,CAAkBhE,KANlC0D,EAAM5E,IAYb,wBAAoBmF,QAAS,kBAhQZ,SAACN,GAExBO,QAAQC,IAAIR,GACZtF,EAAMgK,qBAAoB,SAACxE,GACzB,GAAGA,EAAEO,OAAS,EAAG,CACf,IAAMN,EAASD,EAAEE,QAGjB,OAFAD,EAAOO,OAAOV,EAAO,GACrBO,QAAQC,IAAIL,GACLA,EAEP,OAAOD,KAsP8BS,CAAiBX,IAAQlD,KAAK,SAASf,UAAU,sBAApF,SACE,cAAC,IAAD,CAAkBZ,GAAG,mDADV6E,YAMjB,wBAAQM,QAvRU,WACpB5F,EAAMgK,qBAAoB,SAACxE,GACzB,GAAGA,EAAEO,OAAS,EAAG,CACAP,EAAEA,EAAEO,OAAS,GAAGtF,GAC/B,MAAM,GAAN,mBACK+E,GADL,CAEE,KAGF,MAAM,GAAN,mBACKA,GADL,CAEE,SA4Q4BpD,KAAK,SAASI,MAAO,CAAE0D,WAAY,UAAWC,MAAO,OAAQC,YAAa,SAAW/E,UAAU,oBAA/H,SACE,cAAC,IAAD,CAAkBZ,GAAG,kD,QCxRvBwJ,EAAyC,CAC7CC,WAAY,EACZC,WAAW,EACXC,eAAgB,OAChBC,mBAAoB,wDACpBC,uBAAwB,wDAGpBC,EAAiB,WACrB,IAAMC,EAAaC,iBAA8B,MAC3CC,EAAUD,iBAAgC,MAChD,EAA0CxK,mBAAS8G,EAAqB,IAAxE,mBAAO4D,EAAP,KACA,GADA,KACqB1K,mBAAyBgH,IAAvC2D,EAAP,oBACMzG,EAAOC,cAEb,EAAuCyG,aACrC,kBAAEC,EAAF,EAAEA,KAAF,MAAa,CACXC,cAAeD,EAAKC,cACpBC,QAAO,UAAEF,EAAKG,YAAP,aAAE,EAAWD,YAHFA,GAAtB,EAAOD,cAAP,EAAsBC,SA0BtB,EAA8B/K,oBAAkB,GAAhD,mBAAOiL,EAAP,KAAgBC,EAAhB,KACA,EAA8BlL,oBAAkB,GAAhD,mBAAOmL,EAAP,KAAgBC,EAAhB,KACA,EAA0BpL,mBAAc,IAAxC,mBAAO+B,EAAP,KAAcsJ,EAAd,KACA,EAA4CrL,mBAAc,IAA1D,mBAAOsC,EAAP,KAAuBgJ,EAAvB,KACA,EAAsCtL,mBAAc,IAApD,mBAAOuL,EAAP,KAAoBC,EAApB,KACA,GAAsCxL,mBAAc,IAApD,qBAAOyL,GAAP,MAAoBC,GAApB,MACA,GAAsC1L,mBAAc,IAApD,qBAAO2L,GAAP,MAAoBC,GAApB,MACA,GAAgC5L,mBAAc,IAA9C,qBAAO0C,GAAP,MAAiBmJ,GAAjB,MACA,GAA4C7L,mBAAiB,IAA7D,qBAAO8L,GAAP,MAAuBC,GAAvB,MACA,GAAwC/L,mBAAc,IAAtD,qBAAOgM,GAAP,MAAqBC,GAArB,MACMC,GAAW9L,cAEjB,GAAoCJ,mBAAiB,IAArD,qBAAO6E,GAAP,MAAmBhD,GAAnB,MACA,GAA4C7B,mBAAiB,IAA7D,qBAAOsB,GAAP,MAAuBM,GAAvB,MAEA,GAAsE5B,mBAAoCoJ,GAA1G,qBAAO5E,GAAP,MAAoCI,GAApC,MACA,GAA8E5E,mBAAoCqJ,GAAlH,qBAAO9C,GAAP,MAAwCE,GAAxC,MACA,GAA4EzG,mBAAoCsJ,GAAhH,qBAAOK,GAAP,MAAuCE,GAAvC,MAEA,GAAgD7J,oBAAkB,GAAlE,qBAAO0D,GAAP,MAAyBC,GAAzB,MACA,GAAwD3D,oBAAkB,GAA1E,qBAAO6D,GAAP,MAA6BC,GAA7B,MACA,GAAsD9D,oBAAkB,GAAxE,qBAAO+D,GAAP,MAA4BC,GAA5B,MACA,GAAoDhE,mBAAiB,IAArE,qBAAOuD,GAAP,MAA2BF,GAA3B,MAEA,GAAsDrD,mBAAqB,IAA3E,qBAAO8E,GAAP,MAA4BH,GAA5B,MACA,GAA8D3E,mBAAwB,IAAtF,qBAAO0G,GAAP,MAAgCF,GAAhC,MACA,GAA4DxG,mBAAwB,IAApF,qBAAO8J,GAAP,MAA+BF,GAA/B,MAEA,GAA0C5J,mBAAqB,IAA/D,qBAAOmF,GAAP,MAAsBG,GAAtB,MACA,GAAkDtF,mBAAwB,IAA1E,qBAAO2G,GAAP,MAA0BC,GAA1B,MACA,GAAgD5G,mBAAwB,IAAxE,qBAAOwJ,GAAP,MAAyBO,GAAzB,MAEA,GAAwC/J,mBAAc,MAAtD,qBAAOmM,GAAP,MAAqBC,GAArB,MACA,GAAsDpM,mBApD3B,WACzB,IAAIqM,EAAM,IAAIC,KACVC,EAAYF,EAAIG,cAAcC,UAAU,EAAE,IAC1CC,EAAOL,EAAIM,cACXC,EAAQP,EAAIQ,WAAa,EACzBC,EAAMT,EAAIU,UACVC,EAAOX,EAAIY,WACXC,EAASb,EAAIc,aACJd,EAAIe,aAQjB,OAPoBV,EAAO,KACRE,EAAQ,GAAK,IAAMA,EAAMS,WAAaT,GAAS,KAC/CE,EAAM,GAAK,IAAMA,EAAIO,WAAaP,GAAO,KACzCE,EAAO,GAAK,IAAMA,EAAKK,WAAaL,GAAQ,KAC5CE,EAAS,GAAK,IAAMA,EAAOG,WAAaH,GACzCX,EAAUE,UAAU,GAAG,IAsCoBa,IAA/D,qBAAOxK,GAAP,MAA4BI,GAA5B,MACA,GAAgDlD,mBAAkB0D,IAAoBG,IAAwBE,IAA9G,qBAAOwJ,GAAP,MAAyBC,GAAzB,MAEA9M,qBAAU,WACH6J,EAAWkD,SAIhBC,OACC,CAACnD,IAEJ7J,qBAAU,WACR,GAAK6J,EAAWkD,QAAhB,CAIA,IAAIE,EAAO,IAAIC,IAAiBrD,EAAWkD,QAA2BzD,GACtES,EAAQgD,QAAUE,EAElBH,GAAoB9J,IAAoBG,IAAwBE,OAC/D,CAACL,GAAkBG,GAAsBE,KAE5CrD,qBAAU,WAAO,IAAD,EAC4D,EAAvE,UAAA+J,EAAQgD,eAAR,SAAiBI,kBAAoBpD,EAAQgD,QAAQK,kBACtD1B,GAAe,UAAC3B,EAAQgD,eAAT,aAAC,EAAiBI,oBAElC,CAACpD,EAAQgD,UAEU,KAAnB3B,IACDiC,YAAW,WACT3C,GAAW,GACX2C,YAAW,WACThC,GAAkB,MACjB,OACF,KAGe,KAAjBC,IACD+B,YAAW,WACT3C,GAAW,GACX2C,YAAW,WACT9B,GAAgB,MACf,OACF,KAGL,IAAM5J,GAAoB,SAACZ,GACzB4J,EAAS5J,EAAEE,OAAOqM,MAAM,KAGpBvL,GAA6B,SAAChB,GAClC6J,EAAkB7J,EAAEE,OAAOqM,MAAM,KAG7BzJ,GAA0B,SAAC9C,GAC/B+J,EAAe/J,EAAEE,OAAOqM,MAAM,KAG1B1H,GAA0B,SAAC7E,GAC/BiK,GAAejK,EAAEE,OAAOqM,MAAM,KAG1BtE,GAA0B,SAACjI,GAC/BmK,GAAenK,EAAEE,OAAOqM,MAAM,KAG1BpL,GAAkB,SAACnB,GACvBoK,GAAYpK,EAAEE,OAAOqM,MAAM,KAG7B,GAA2CpD,aACzC,oBAAEC,EAAF,EAAEA,KAAF,MAAa,CACXoD,UAAWpD,EAAKqD,YAChBC,OAAM,UAAEtD,EAAKG,YAAP,aAAE,EAAWmD,OACnBC,SAAQ,UAAEvD,EAAKG,YAAP,aAAE,EAAWqD,YACnBC,KALCL,GAAP,GAAOA,UAQDP,IARN,GAAkBS,OAAlB,GAA0BC,SAQN,WAClB3D,EAAQgD,QAAUG,IAAiBW,cAAchE,EAAWkD,SAC5D7H,QAAQC,IAAI4E,EAAQgD,SACpB7H,QAAQC,IAAI,oBAGR2I,GAAW,WACV/D,EAAQgD,UAIbhD,EAAQgD,QAAQgB,SAChBrC,IAAgB,SAAC/G,GAAgB,OAAOA,EAAQ,OAyH5CqJ,GAAoB,SAACC,EAAyBC,GAClD,MAAO,CACL,YAAgBD,EAChB,aAAgBC,IAIdlK,GAAuB,SAC3BmK,EACAC,EACAC,EACAC,EACAC,EACAC,IAjIgC,SAACJ,EAAoCI,GACrE,OAAQA,GACN,IAAK,oBACHJ,GAA8B,SAACvO,GAC7B,IAAI4O,EAAU5O,EAEd,OADA4O,EAAQ1K,mBAAqBlE,EAAKkE,kBAC3B0K,KAET,MACF,IAAK,kBACHL,GAA8B,SAACvO,GAC7B,IAAI4O,EAAU5O,EAEd,OADA4O,EAAQjK,iBAAmB3E,EAAK2E,gBACzBiK,KAET,MACF,IAAK,gCACHL,GAA8B,SAACvO,GAC7B,IAAI4O,EAAU5O,EAEd,OADA4O,EAAQnK,+BAAiCzE,EAAKyE,8BACvCmK,KAET,MACF,IAAK,mBACHL,GAA8B,SAACvO,GAC7B,IAAI4O,EAAU5O,EAEd,OADA4O,EAAQlK,kBAAoB1E,EAAK0E,iBAC1BkK,KAET,MACF,IAAK,yBACHL,GAA8B,SAACvO,GAC7B,IAAI4O,EAAU5O,EAEd,OADA4O,EAAQpK,wBAA0BxE,EAAKwE,uBAChCoK,MAkGbC,CAA0BN,EAA+BI,GAErDD,GAMAJ,EADeG,EAAMK,QAAO,SAAC9O,GAAD,OAAUA,IAASwO,MAJjDF,GAAY,SAACG,GACX,MAAM,GAAN,mBAAWA,GAAX,CAAkBD,QAqLxB,OACE,qCACoB,KAAnBjD,GACK,cAAC,IAAD,CAAcwD,QAASxD,GAAgBX,QAASA,IAClD,KAEc,KAAjBa,GACC,cAAC,IAAD,CAAasD,QAAStD,GAAcb,QAASA,IACzC,KAEM,KAAXJ,GACC,mCACE,qBAAK3J,UAAU,OAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBACEmO,IAAKhF,EACLnJ,UAAU,iDACVZ,GAAG,4BAHL,UAKE,sBAAKY,UAAU,mBAAf,UACE,qBAAKA,UAAU,uBAAuB,0BAAwB,MAA9D,SACE,oBAAIA,UAAU,gBAAd,SAA8B,cAAC,IAAD,CAAkBZ,GAAG,+CAGpDkD,IACC,qBAAKtC,UAAU,eAAe,0BAAwB,MAAtD,SACE,oBAAIA,UAAU,gBAAd,SAA8B,cAAC,IAAD,CAAkBZ,GAAG,8CAItDqD,IACC,qBAAKzC,UAAU,eAAe,0BAAwB,MAAtD,SACE,oBAAIA,UAAU,gBAAd,SAA8B,cAAC,IAAD,CAAkBZ,GAAG,kDAItDuD,IACC,qBAAK3C,UAAU,eAAe,0BAAwB,MAAtD,SACE,oBAAIA,UAAU,gBAAd,SAA8B,cAAC,IAAD,CAAkBZ,GAAG,oDASzD,cAAC,IAAD,CAAQgP,iBAAkB9E,EAAe+E,cAAe9E,EAAY+E,SArM7D,SAACC,EAAwBC,GAC1C,GAAKnF,EAAQgD,UAGb7H,QAAQC,IAAI,gBAIPnC,IAAoBG,IAAwBE,IAIjD,GAAI0G,EAAQgD,QAAQI,mBAAqBpD,EAAQgD,QAAQK,iBAmCvDrD,EAAQgD,QAAQoC,SAChBzD,IAAgB,SAAC/G,GAAgB,OAAOA,EAAQ,SAC3C,CACL6F,GAAW,GACX,IAAM4E,EAlLkB,SAC1B7I,EACAK,EACAH,EACAD,EACAG,EACA0I,EACAC,EACAC,EACA1I,EACAG,EACAG,EACAJ,EACAG,EACAG,GAEA,GAAkB,KAAflD,GACD,MAAO,CAACqL,WAAW,EAAOC,IAAK,6BAEjC,GAAa,KAAVpO,EACD,MAAO,CAACmO,WAAW,EAAOC,IAAK,yBAEjC,GAAsB,KAAnB7N,EACD,MAAO,CAAC4N,WAAW,EAAOC,IAAK,+BAEjC,GAAgB,KAAbzN,GACD,MAAO,CAACwN,WAAW,EAAOC,IAAK,6BAEjC,GAAsB,KAAnBlJ,EACD,MAAO,CAACiJ,WAAW,EAAOC,IAAK,gCAEjC,GAAuB,KAApB7I,EACD,MAAO,CAAC4I,WAAW,EAAOC,IAAK,iCAEjC,GAAsB,KAAnBhJ,EACD,MAAO,CAAC+I,WAAW,EAAOC,IAAK,iCAEjC,GAA0B,KAAvB5M,GACD,MAAO,CAAC2M,WAAW,EAAOC,IAAK,4BAEjC,GAA6B,KAA1B9I,EACD,MAAO,CAAC6I,WAAW,EAAOC,IAAK,uCAEjC,GAAGzM,GAAkB,CACnB,GAAmB,KAAhB6H,EACD,MAAO,CAAC2E,WAAW,EAAOC,IAAK,oCAEjC,IAAqB,KAAlBJ,GAA8C,KAAtBxI,GAA0C,KAAdE,KAClD2I,WAAWL,GAAiB,GAAKK,WAAW7I,GAAqB,GAAK8I,SAAS5I,GAAa,GAC7F,MAAO,CAACyI,WAAW,EAAOC,IAAK,kCAIrC,GAAGtM,GAAsB,CACvB,GAAmB,KAAhB4H,GACD,MAAO,CAACyE,WAAW,EAAOC,IAAK,wCAEjC,IAAyB,KAAtBH,GAAkD,KAAtBtI,GAA0C,KAAdE,KACtDwI,WAAWJ,GAAqB,GAAKI,WAAW1I,GAAqB,GAAK2I,SAASzI,GAAa,GACjG,MAAO,CAACsI,WAAW,EAAOC,IAAK,sCAIrC,GAAGpM,GAAqB,CACtB,GAAmB,KAAhB4H,GACD,MAAO,CAACuE,WAAW,EAAOC,IAAK,uCAEjC,IAAwB,KAArBF,GAAiD,KAAtBpI,GAA0C,KAAdE,KACrDqI,WAAWH,GAAoB,GAAKG,WAAWvI,GAAqB,GAAKwI,SAAStI,GAAa,GAChG,MAAO,CAACmI,WAAW,EAAOC,IAAK,sCAIrC,MAAO,CAACD,WAAW,EAAMC,IAAK,MAyGZG,CACdX,EAAO1I,eACP0I,EAAOrI,gBACPqI,EAAOxI,eACPwI,EAAOzI,WACPyI,EAAOtI,sBACPsI,EAAOnI,OACPmI,EAAOhI,OACPgI,EAAO7H,OACP6H,EAAOpI,kBACPoI,EAAOjI,kBACPiI,EAAO9H,kBACP8H,EAAOlI,UACPkI,EAAO/H,UACP+H,EAAO5H,WAET,GAAG+H,EAAQI,UAAW,CACpB,IAAMK,EAAW,IAAIC,SACrBD,EAASE,OAAO,YAAaxC,IAC7BsC,EAASE,OAAO,QAAS1O,GACzBwO,EAASE,OAAO,iBAAkBnO,GAClCiO,EAASE,OAAO,WAAY/N,IAC5B6N,EAASE,OAAO,WAAYnP,IAC5BiP,EAASE,OAAO,iBAAkBd,EAAO1I,gBACzCsJ,EAASE,OAAO,kBAAmBd,EAAOrI,iBAC1CiJ,EAASE,OAAO,aAAcd,EAAOzI,YACrCqJ,EAASE,OAAO,sBAAuB3N,IACvCyN,EAASE,OAAO,iBAAkBd,EAAOxI,gBACzCoJ,EAASE,OAAO,aAAclN,IAE9B,IAAImN,EAAiBf,EAAOtI,sBAAsBsJ,MAAM,MACxDJ,EAASE,OAAO,wBAAyBG,KAAKC,UAAUH,IACxDH,EAASE,OAAO,cAAe/M,GAAiB2J,YAChDkD,EAASE,OAAO,kBAAmB5M,GAAqBwJ,YACxDkD,EAASE,OAAO,iBAAkB1M,GAAoBsJ,YACnD3J,KACD6M,EAASE,OAAO,gBAAiBlF,GACjCgF,EAASE,OAAO,8BAA+Bd,EAAOpI,mBACtDgJ,EAASE,OAAO,gBAAiBd,EAAOnI,QACxC+I,EAASE,OAAO,mBAAoBd,EAAOlI,WAC3C8I,EAASE,OAAO,mBAAoBG,KAAKC,UAAUnC,GAAkB5J,GAAqBK,OAEzFtB,KACD0M,EAASE,OAAO,oBAAqBhF,IACrC8E,EAASE,OAAO,kCAAmCd,EAAOjI,mBAC1D6I,EAASE,OAAO,oBAAqBd,EAAOhI,QAC5C4I,EAASE,OAAO,uBAAwBd,EAAO/H,WAC/C2I,EAASE,OAAO,uBAAwBG,KAAKC,UAAUnC,GAAkBhI,GAAyBC,OAEjG5C,KACDwM,EAASE,OAAO,mBAAoB9E,IACpC4E,EAASE,OAAO,iCAAkCd,EAAO9H,mBACzD0I,EAASE,OAAO,mBAAoBd,EAAO7H,QAC3CyI,EAASE,OAAO,sBAAuBd,EAAO5H,WAC9CwI,EAASE,OAAO,sBAAuBG,KAAKC,UAAUnC,GAAkB5E,GAAwBN,OAGlGsH,YACEP,GACA3P,MACA,SAACC,GAC4B,IAAD,EAWnB,EAXJA,EAASN,KAAKwQ,SACfhF,GAAkBlL,EAASN,KAAK+O,SAChClE,GAAW,GACXF,GAAW,GACX,UAAAT,EAAQgD,eAAR,SAAiBuD,KAAK,GACtBC,OAAOC,SAAS,EAAE,GAClB9E,GAAgB,GAChBf,EAAS,IAETuE,EAAQuB,YA/IlB9F,EAAS,IACTC,EAAkB,IAClBO,GAAY,IACZL,EAAe,IACfE,GAAe,IACfE,GAAe,IACf/J,GAAc,IACd+C,GAA+BwE,GAC/B3C,GAAmC4C,GACnCQ,GAAkCP,GAClC3F,IAAoB,GACpBG,IAAwB,GACxBE,IAAuB,GACvBX,GAAsB,IACtBsB,GAAuB,IACvB6B,GAA2B,IAC3BoD,GAA0B,IAC1BtE,GAAiB,IACjBsB,GAAqB,IACrBmD,GAAoB,MA+HPlJ,EAASN,KAAK+O,QACfrD,GAAgBpL,EAASN,KAAK+O,SAE9BrD,GAAgB/H,EAAKE,cAAc,CAAE5D,GAAI,uDAG3C4K,GAAW,GACXF,GAAW,GACX,UAAAT,EAAQgD,eAAR,SAAiBuD,KAAK,GACtBC,OAAOC,SAAS,EAAE,GAClB9E,GAAgB,OAGpBpL,OAAM,SAACC,GACPC,aAAaC,QAAQ,iBAAkB,qBACvC+K,GAASrB,IAAauG,kBAGxBH,OAAOC,SAAS,EAAE,GAClBjF,GAAgB6D,EAAQK,KACxB/E,GAAW,GACXF,GAAW,KAoDL,SACG,0BACC,eAAC,IAAD,CACE9J,UAAU,qCACViQ,YAAU,EACV7Q,GAAG,yBAHL,UAKE,qBAAKY,UAAU,UAAU,0BAAwB,UAAjD,SACE,cAAC,EAAD,CACEiB,kBAAmBA,GACnBN,MAAOA,EACPU,2BAA4BA,GAC5BG,gBAAiBA,GACjBF,SAAUA,GACVJ,eAAgBA,EAChBhB,eAAgBA,GAChBM,kBAAmBA,GACnBiD,WAAYA,GACZhD,cAAeA,GACf6B,iBAAkBA,GAClBG,qBAAsBA,GACtBE,oBAAqBA,GACrBJ,oBAAqBA,GACrBG,wBAAyBA,GACzBE,uBAAwBA,GACxBT,mBAAoBA,GACpBF,sBAAuBA,GACvBP,oBAAqBA,GACrBI,uBAAwBA,OAI3BQ,IACC,qBAAK,0BAAwB,UAA7B,SACE,cAAC,EAAD,CACEY,OAAQiH,EACRhH,wBAAyBA,GACzBM,WAAYA,GACZtB,mBAAoBA,GACpB4B,cAAeA,GACfG,iBAAkBA,GAClBV,+BAAgCA,GAChCJ,4BAA6BA,GAC7BG,uBAAwBA,GACxBG,oBAAqBA,GACrBJ,qBAAsBA,OAK3Bb,IACC,qBAAK,0BAAwB,UAA7B,SACE,cAAC,EAAD,CACEwC,OAAQoF,GACRnF,wBAAyBA,GACzBzB,WAAYA,GACZtB,mBAAoBA,GACpBoD,kBAAmBA,GACnBC,qBAAsBA,GACtBH,mCAAoCA,GACpCF,gCAAiCA,GACjCC,2BAA4BA,GAC5BE,wBAAyBA,GACzBhC,qBAAsBA,OAK3BX,IACC,qBAAK,0BAAwB,UAA7B,SACE,cAAC,EAAD,CACE0F,OAAQkC,GACR9G,WAAYA,GACZ6E,wBAAyBA,GACzBnG,mBAAoBA,GACpBiG,iBAAkBA,GAClBO,oBAAqBA,GACrBF,kCAAmCA,GACnCF,+BAAgCA,GAChCC,0BAA2BA,GAC3BE,uBAAwBA,GACxBpF,qBAAsBA,OAK5B,sBAAKtD,UAAU,0BAAf,UACE,qBAAKA,UAAU,OAAf,SACE,yBACEuE,QAAS6I,GACTrM,KAAK,SACLf,UAAU,oCACV,yBAAuB,WAJzB,UAME,cAAC,IAAD,CACEkQ,KAAK,6CACLlQ,UAAU,oBAEZ,cAAC,IAAD,CAAkBZ,GAAG,qCAIzB,gCACGyK,GACK,yBACE1I,MAAO,CAAE0D,WAAY,UAAWC,MAAO,OAAQC,YAAa,SAC5DhE,KAAK,SACLf,UAAU,yBAHZ,UAKE,cAAC,IAAD,CAAkBZ,GAAG,sCALvB,KAME,sBAAMY,UAAU,2DAKtB6J,GACE,wBACE9I,KAAK,SACLI,MAAO,CAAE0D,WAAY,UAAWC,MAAO,OAAQC,YAAa,SAC5D/E,UAAU,yBACViD,UAAWkJ,GAJb,SAMA,uBAAMnM,UAAU,kBAAhB,eACoBmQ,IAAjBpF,IACCA,MAAY,UACZ1B,EAAQgD,eADI,aACZ,EAAiBK,mBAAqB,cAAC,IAAD,CAAkBtN,GAAG,yCAE1C+Q,IAAjBpF,IAA8B,cAAC,IAAD,CAAkB3L,GAAG,yCAEnC+Q,IAAjBpF,IACCA,KAAY,UACZ1B,EAAQgD,eADI,aACZ,EAAiBK,mBAAqB,cAAC,IAAD,CAAkBtN,GAAG,kCAC7D,cAAC,IAAD,CACE8Q,KAAK,8CACLlQ,UAAU,mDAgB1B,KAAX2J,GACC,cAAC,IAAD,UACI,cAAC,IAAD,CAAO1F,OAAK,EAACmM,QAAS,cAAC,IAAD,CAAUC,GAAI,uBCjqB/BC,UAlBe,WAE5B,IAAQ3G,EAAiBH,aACvB,wBAAe,CACXG,QAAO,UADX,EAAGF,KACeG,YAAP,aAAE,EAAWD,WAExBuD,KAJMvD,QAOR,OACI,mCACc,KAAXA,GACC,cAAC,EAAD","file":"static/js/18.cefcf6e1.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC, useState, useEffect} from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {Field, ErrorMessage} from 'formik'\r\nimport { getArtistsData } from 'app/modules/artistWizard/api'\r\nimport * as auth from '../../../auth/redux/AuthRedux'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { toAbsoluteUrl } from '_metronic/helpers'\r\n \r\n\r\nconst Step1 = (props: any) => {\r\n\r\n  const [artistData, setArtistData] = useState<Array<any>>([])\r\n  const dispatch = useDispatch()\r\n  \r\n  const handleBlockhainChange = (event: any) => {\r\n    props.setSelectedBlockchain(event.target.value)\r\n  }\r\n\r\n  const handleDropDateTimeChange = (event: any) => {\r\n    event.preventDefault()\r\n    props.setdropReleaseDateTime(event.target.value)\r\n  }\r\n\r\n  const handleArtistChange = (event: any) => {\r\n\r\n    if(event.target.value != '') {\r\n      props.setSelectedArtist(event.target.value)\r\n      props.setArtistName(getArtistName(event.target.value))\r\n    }\r\n  }\r\n\r\n  const getArtistName = (artistID: string) => {\r\n    const artistName = artistData.find((data) => data.id == artistID).artist_name\r\n    return artistName\r\n  }\r\n\r\n  useEffect(() => {\r\n    getArtistsData()\r\n      .then((response) => {\r\n          const _artistData = response.data.artist_data\r\n          setArtistData(_artistData)\r\n      }).catch((error) => {\r\n          localStorage.setItem('sessionTimeOut', 'Session timed out')\r\n          // dispatch(auth.actions.logout())\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <div className='w-100'>\r\n\r\n      <div className='fv-row mb-10'>\r\n        <label className='form-label required'>\r\n          <FormattedMessage id=\"CREATE_EDIT_COLLECTION.ARTIST\" />\r\n        </label>\r\n\r\n            <select\r\n              value={props.selectedArtist}\r\n              className='form-select form-select-lg form-select-solid'\r\n              name='artistName'\r\n              onChange={(e) => handleArtistChange(e)}\r\n            >\r\n              <option value=''>Select Artist</option>\r\n\r\n              {artistData.map((data: any) => (\r\n                <option key={data.id} value={data.id}>{data.artist_name}</option>\r\n              ))}\r\n            </select>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required mb-3'>\r\n          <FormattedMessage id=\"CREATE_EDIT_COLLECTION.DROP_IMAGE\" />\r\n          <span className='ms-1'>(Recommended size: 900 x 900)</span>\r\n        </label>\r\n\r\n        {props.image !== \"\" &&\r\n          <div>\r\n            <img src={URL.createObjectURL(props.image)} className='w-300px mb-3' />\r\n          </div>\r\n        }\r\n\r\n        <div>\r\n          <input type=\"file\" id=\"image1\" accept=\"image/png, image/jpeg\" onChange={(e) => props.handleImageChange(e)} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n          <label className='form-label required mb-3'>\r\n            <FormattedMessage id=\"CREATE_EDIT_COLLECTION.DROP_COVER_IMAGE\" />\r\n            <span className='ms-1'>(Recommended size: 1500 x 500)</span>\r\n          </label>\r\n\r\n          {props.dropCoverImage !== \"\" &&\r\n              <div>\r\n                  <img src={URL.createObjectURL(props.dropCoverImage)} className='mb-3' style={{ width: '80%' }}/>\r\n              </div>\r\n          }\r\n\r\n          <div>\r\n              <input type=\"file\" id=\"image2\" accept=\"image/png, image/jpeg\" onChange={(e) => props.handleDropCoverImageChange(e)} />\r\n          </div>\r\n      </div> \r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required mb-3'>\r\n        <FormattedMessage id=\"CREATE_EDIT_COLLECTION.LEGAL_DOCS\" />\r\n          <span className='ms-1'>(Recommended size: Below 500 KB)</span>\r\n        </label>\r\n\r\n        {props.legalPDF !== \"\" &&\r\n          <div>\r\n              <img \r\n                src={toAbsoluteUrl('/musician/pdf.jpeg')} \r\n                className='w-200px mb-3' \r\n              />\r\n          </div>\r\n        }\r\n\r\n        <div>\r\n          <input type=\"file\" id=\"image1\" accept=\".pdf\" onChange={(e) => props.handlePDFChange(e)} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id=\"CREATE_EDIT_COLLECTION.COLLECTION_NAME\" />\r\n          <span className='ms-1'>(Name your collection)</span>\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='collectionName'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          <ErrorMessage name='collectionName' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id=\"CREATE_EDIT_COLLECTION.COLLECTION_OWNER_WALLET_ADDRESS\" />\r\n          <span className='ms-1'>(Admin wallet which will receive primary sale amount)</span>\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='collectionOwner'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          <ErrorMessage name='collectionOwner' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.SPOTIFY_TRACK_URL\" /></label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='spotifyURL'\r\n          placeholder=''\r\n        />\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.DROP_RELEASE_TIME\" /></label>\r\n\r\n        <input \r\n          type=\"datetime-local\" \r\n          className='form-control form-control-lg form-control-solid'\r\n          value={props.dropReleaseDateTime}\r\n          min=\"2022-06-07T00:00\" \r\n          max=\"2040-06-14T00:00\"\r\n          onChange={(event) => handleDropDateTimeChange(event)}\r\n        />\r\n\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='spotifyURL' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fv-row mb-10'>\r\n        <label className='form-label required'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.COLLECTION_TYPE\" /></label>\r\n\r\n        <Field\r\n          as='select'\r\n          name='collectionType'\r\n          className='form-select form-select-lg form-select-solid'\r\n        >\r\n          <option value=\"\">Select collection type</option>\r\n          <option value=\"single\">Single</option>\r\n          <option value=\"single-remix\">Single & Remixes</option>\r\n          <option value=\"ep\">EP</option>\r\n          <option value=\"album\">Album</option>\r\n        </Field>\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          <ErrorMessage name='collectionType' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='fv-row mb-10'>\r\n        <label className='form-label required'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.BLOCKCHAIN\" /></label>\r\n\r\n        <select\r\n          className='form-select form-select-lg form-select-solid'\r\n          onChange={(event) => handleBlockhainChange(event)}\r\n          value={props.selectedBlockchain}\r\n        >\r\n          <option value=\"\">Select Blockchain</option>\r\n          <option value=\"ethereum\">Ethereum Mainnet</option>\r\n          <option value=\"klaytn\">Klaytn Mainnet</option>\r\n        </select>\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='blockchain' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.COLLECTION_DESCRIPTION\" /></label>\r\n\r\n        <Field\r\n          as='textarea'\r\n          name='collectionDescription'\r\n          className='form-control form-control-lg form-control-solid'\r\n          rows={5}\r\n        ></Field>\r\n\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          <ErrorMessage name='collectionDescription' />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.SELECT_TIERS\" /></label>\r\n\r\n        <div className='d-flex mt-3'>\r\n          <label className='form-check form-check-custom form-check-solid align-items-start me-3'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.selectedGoldTier}\r\n              onChange={() =>{\r\n                props.setSelectedGoldTier((r: any) => {return !r})\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.TIER.GOLD\" /></span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start me-3'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.selectedPlatinumTier}\r\n              onChange={() => {\r\n                props.setSelectedPlatinumTier((r: any) => {return !r})\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.TIER.PLATINUM\" /></span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start me-3'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.selectedDiamondTier}\r\n              onChange={() => {\r\n                props.setSelectedDiamondTier((r: any) => {return !r})\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.TIER.DIAMOND\" /></span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentAbstract' /> */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Step1}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport {Field, ErrorMessage} from 'formik'\r\nimport { FormattedMessage, useIntl } from 'react-intl';\r\n\r\n\r\nconst Step2 = (props: any) => {\r\n\r\n  const intl = useIntl()\r\n\r\n  const handleBonusChange = (e: any) => {\r\n    e.preventDefault();\r\n    const index = e.target.id;\r\n\r\n    props.setGoldTierBonus((s: any) => {\r\n      const newArr = s.slice();\r\n    \r\n      if(e.target.name === 'content') {\r\n        newArr[index] = e.target.value;\r\n      } else {\r\n        newArr[index] = e.target.value;\r\n      }\r\n\r\n      return newArr;\r\n    });\r\n  }\r\n\r\n  const addBonusInput = () => {\r\n    props.setGoldTierBonus((s: any) => {\r\n      if(s.length > 0) {\r\n        const lastId = s[s.length - 1].id;\r\n        return [\r\n          ...s,\r\n          \"\"\r\n        ];\r\n      } else {\r\n        return [\r\n          ...s,\r\n          \"\"\r\n        ];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeBonusInput = (index: any) => {\r\n    console.log(index)\r\n    props.setGoldTierBonus((s: any) => {\r\n      if(s.length > 0) {\r\n        const newArr = s.slice();\r\n        newArr.splice(index, 1);\r\n        return [...newArr]\r\n      } else {\r\n        return s\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='w-100'>\r\n\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' />\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name=''\r\n          placeholder=''\r\n          value={intl.formatMessage({id: \"CREATE_EDIT_COLLECTION.TIER.GOLD\"})}\r\n          disabled={true}\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.TOKEN_IMAGE' />\r\n          <span className='ms-1'>(Recommended size: 500 x 500)</span>\r\n        </label>\r\n\r\n        {props.image0 !== \"\" &&\r\n          <div>\r\n            <img src={URL.createObjectURL(props.image0)} className='w-300px mb-3' />\r\n          </div>\r\n        }\r\n\r\n        <div>\r\n          <input type=\"file\" id=\"image\" accept=\"image/png, image/jpeg\" onChange={(e) => props.handleTokenImage0Change(e)} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.OWNERSHIP_OFFERED' /> \r\n          <span className='ms-1'>(Ownership of a single Gold tier token in %)</span>\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='ownershipOffered0'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.PRICE' /> \r\n          ({props.selectedBlockchain !== '' && props.selectedBlockchain == 'ethereum' ? 'Price of single gold tier token in ETH' : 'Price of single gold tier token in KLAY'})\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='price0'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.QUANTITY' />\r\n          <span className='ms-1'>(Total quantity of gold tier tokens)</span>\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='quantity0'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required'><FormattedMessage id='CREATE_EDIT_COLLECTION.SELECT_TOKEN_BENEFITS' /></label>\r\n\r\n        <div className='mt-3'>\r\n          <label className='form-check form-check-custom form-check-solid align-items-start mt-2 my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.goldTierBenefitCheckboxData.firstDibsNextDrop}\r\n              onChange={() =>{\r\n                props.handleCheckBoxChange(\r\n                  props.setGoldTierStdBenefits, \r\n                  props.setGoldTierBenefitCheckboxData,\r\n                  `First dibs on the next ${props.artistName ? props.artistName : ''} drop`,\r\n                  props.goldTierStdBenefits,\r\n                  props.goldTierBenefitCheckboxData.firstDibsNextDrop,\r\n                  'firstDibsNextDrop'\r\n                )\r\n              }}\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>First dibs on the next {props.artistName ? props.artistName : ''} drop</span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.goldTierBenefitCheckboxData.exclAccessToUnreleased}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setGoldTierStdBenefits, \r\n                  props.setGoldTierBenefitCheckboxData,\r\n                  'Exclusive access to unreleased music',\r\n                  props.goldTierStdBenefits,\r\n                  props.goldTierBenefitCheckboxData.exclAccessToUnreleased,\r\n                  'exclAccessToUnreleased'\r\n                )\r\n              }}\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id='CREATE_EDIT_COLLECTION.EXCLUSIVE_ACCESS' /></span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.goldTierBenefitCheckboxData.accessToRoyalCollectorChannel}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setGoldTierStdBenefits, \r\n                  props.setGoldTierBenefitCheckboxData,\r\n                  'Access to Royal collector Discord channel',\r\n                  props.goldTierStdBenefits,\r\n                  props.goldTierBenefitCheckboxData.accessToRoyalCollectorChannel,\r\n                  'accessToRoyalCollectorChannel'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id='CREATE_EDIT_COLLECTION.ACCESS_TO_DISCORD' /></span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.goldTierBenefitCheckboxData.exclusiveContent}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setGoldTierStdBenefits, \r\n                  props.setGoldTierBenefitCheckboxData,\r\n                  'Exclusive Content',\r\n                  props.goldTierStdBenefits,\r\n                  props.goldTierBenefitCheckboxData.exclusiveContent,\r\n                  'exclusiveContent'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id='CREATE_EDIT_COLLECTION.EXCLUSIVE_CONTENT' /></span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2 mb-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.goldTierBenefitCheckboxData.firstDibAllDrop}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setGoldTierStdBenefits, \r\n                  props.setGoldTierBenefitCheckboxData,\r\n                  `First dibs on all future ${props.artistName ? props.artistName : ''} drops`,\r\n                  props.goldTierStdBenefits,\r\n                  props.goldTierBenefitCheckboxData.firstDibAllDrop,\r\n                  'firstDibAllDrop'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>First dibs on all future {props.artistName ? props.artistName : ''} drops</span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentAbstract' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required'><FormattedMessage id='CREATE_EDIT_COLLECTION.ADD_CUSTOM_BENEFITS' /></label>\r\n        {props.goldTierBonus.map((bonus: any, index: any) => (\r\n          <>\r\n          <textarea\r\n            key={bonus.id}\r\n            name=''\r\n            id={index}\r\n            className='form-control form-control-lg form-control-solid mt-4'\r\n            rows={5}\r\n            value={bonus}\r\n            onChange={(event) => handleBonusChange(event)}\r\n          ></textarea>\r\n\r\n          {/* <div className='fv-plugins-message-container invalid-feedback'>\r\n            <ErrorMessage name='collectionDescription' />\r\n          </div> */}\r\n          <button key={index} onClick={() => removeBonusInput(index)} type='button' className='btn btn-danger mt-4'>\r\n            <FormattedMessage id='CREATE_EDIT_COLLECTION.REMOVE_CUSTOM_BENEFITS' />\r\n          </button>\r\n          </>\r\n        ))}\r\n      </div>\r\n  \r\n\r\n      <button onClick={addBonusInput} type='button' style={{ background: '#ffd600', color: '#000', borderColor: '#0000' }} className='py-2 px-4 rounded'>\r\n        <FormattedMessage id='CREATE_EDIT_COLLECTION.ADD_NEW_BENEFITS' />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Step2}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC} from 'react'\r\nimport {useSelector, shallowEqual} from 'react-redux'\r\nimport {RootState} from '../../../../../setup'\r\nimport {Field, ErrorMessage} from 'formik'\r\nimport { FormattedMessage, useIntl } from 'react-intl'\r\n\r\ninterface IEvents {\r\n  id: string\r\n  event: string\r\n}\r\n\r\n\r\nconst Step3 = (props: any) => {\r\n\r\n  const intl = useIntl()\r\n \r\n  const handleBonusChange = (e: any) => {\r\n    e.preventDefault();\r\n    const index = e.target.id;\r\n\r\n    props.setPlatinumTierBonus((s: any) => {\r\n      const newArr = s.slice();\r\n    \r\n      if(e.target.name === 'content') {\r\n        newArr[index] = e.target.value;\r\n      } else {\r\n        newArr[index] = e.target.value;\r\n      }\r\n\r\n      return newArr;\r\n    });\r\n  }\r\n\r\n  const addPlatinumBonusInput = () => {\r\n    props.setPlatinumTierBonus((s: any) => {\r\n      if(s.length > 0) {\r\n        const lastId = s[s.length - 1].id;\r\n        return [\r\n          ...s,\r\n          \"\"\r\n        ];\r\n      } else {\r\n        return [\r\n          ...s,\r\n          \"\"\r\n        ];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removePlatinumBonusInput = (index: any) => {\r\n    props.setPlatinumTierBonus((s: any) => {\r\n      if(s.length > 0) {\r\n        const newArr = s.slice();\r\n        newArr.splice(index, 1);\r\n        return [...newArr]\r\n      } else {\r\n        return s\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className='w-100 step-3-large'>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'><FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /></label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name=''\r\n          placeholder=''\r\n          value={intl.formatMessage({id: \"CREATE_EDIT_COLLECTION.TIER.PLATINUM\"})}\r\n          disabled={true}\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.TOKEN_IMAGE' />\r\n          <span className='ms-1'>(Recommended size: 500 x 500)</span>\r\n        </label>\r\n\r\n        {props.image1 !== \"\" &&\r\n          <div>\r\n            <img src={URL.createObjectURL(props.image1)} className='w-300px mb-3' />\r\n          </div>\r\n        }\r\n\r\n        <div>\r\n          <input type=\"file\" id=\"image\" accept=\"image/png, image/jpeg\" onChange={(e) => props.handleTokenImage1Change(e)} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.OWNERSHIP_OFFERED' /> \r\n          <span className='ms-1'>(Ownership of a single Platinum tier token in %)</span>\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='ownershipOffered1'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.PRICE' /> \r\n          ({props.selectedBlockchain !== '' && props.selectedBlockchain == 'ethereum' ? 'Price of single platinum tier token in ETH' : 'Price of single platinum tier token in KLAY'})\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='price1'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.QUANTITY' />\r\n          <span className='ms-1'>(Total quantity of platinum tier tokens)</span>\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='quantity1'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.SELECT_TOKEN_BENEFITS' />\r\n        </label>\r\n\r\n        <div className='mt-3'>\r\n          <label className='form-check form-check-custom form-check-solid align-items-start mt-2 my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.platinumTierBenefitCheckboxData.firstDibsNextDrop}\r\n              onChange={() =>{\r\n                props.handleCheckBoxChange(\r\n                  props.setPlatinumTierStdBenefits, \r\n                  props.setPlatinumTierBenefitCheckboxData,\r\n                  `First dibs on the next ${props.artistName ? props.artistName : ''} drop`,\r\n                  props.platinumTierStdBenefits,\r\n                  props.platinumTierBenefitCheckboxData.firstDibsNextDrop,\r\n                  'firstDibsNextDrop'\r\n                )\r\n              }}\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>First dibs on the next {props.artistName ? props.artistName : ''} drop</span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.platinumTierBenefitCheckboxData.exclAccessToUnreleased}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setPlatinumTierStdBenefits, \r\n                  props.setPlatinumTierBenefitCheckboxData,\r\n                  'Exclusive access to unreleased music',\r\n                  props.platinumTierStdBenefits,\r\n                  props.platinumTierBenefitCheckboxData.exclAccessToUnreleased,\r\n                  'exclAccessToUnreleased'\r\n                )\r\n              }}\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id='CREATE_EDIT_COLLECTION.EXCLUSIVE_ACCESS' /></span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.platinumTierBenefitCheckboxData.accessToRoyalCollectorChannel}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setPlatinumTierStdBenefits, \r\n                  props.setPlatinumTierBenefitCheckboxData,\r\n                  'Access to Royal collector Discord channel',\r\n                  props.platinumTierStdBenefits,\r\n                  props.platinumTierBenefitCheckboxData.accessToRoyalCollectorChannel,\r\n                  'accessToRoyalCollectorChannel'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id='CREATE_EDIT_COLLECTION.ACCESS_TO_DISCORD' /></span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.platinumTierBenefitCheckboxData.exclusiveContent}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setPlatinumTierStdBenefits, \r\n                  props.setPlatinumTierBenefitCheckboxData,\r\n                  'Exclusive Content',\r\n                  props.platinumTierStdBenefits,\r\n                  props.platinumTierBenefitCheckboxData.exclusiveContent,\r\n                  'exclusiveContent'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'><FormattedMessage id='CREATE_EDIT_COLLECTION.EXCLUSIVE_CONTENT' /></span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2 mb-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.platinumTierBenefitCheckboxData.firstDibAllDrop}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setPlatinumTierStdBenefits, \r\n                  props.setPlatinumTierBenefitCheckboxData,\r\n                  `First dibs on all future ${props.artistName ? props.artistName : ''} drops`,\r\n                  props.platinumTierStdBenefits,\r\n                  props.platinumTierBenefitCheckboxData.firstDibAllDrop,\r\n                  'firstDibAllDrop'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>First dibs on all future {props.artistName ? props.artistName : ''} drops</span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentAbstract' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required'><FormattedMessage id='CREATE_EDIT_COLLECTION.ADD_CUSTOM_BENEFITS' /></label>\r\n        {props.platinumTierBonus.map((bonus: any, index: any) => (\r\n          <>\r\n          <textarea\r\n            key={bonus.id}\r\n            name=''\r\n            id={index}\r\n            className='form-control form-control-lg form-control-solid mt-4'\r\n            rows={5}\r\n            value={bonus}\r\n            onChange={(event) => handleBonusChange(event)}\r\n          ></textarea>\r\n\r\n          {/* <div className='fv-plugins-message-container invalid-feedback'>\r\n            <ErrorMessage name='collectionDescription' />\r\n          </div> */}\r\n          <button key={index} onClick={() => removePlatinumBonusInput(index)} type='button' className='btn btn-danger mt-4'>\r\n            <FormattedMessage id='CREATE_EDIT_COLLECTION.REMOVE_CUSTOM_BENEFITS' />\r\n          </button>\r\n          </>\r\n        ))}\r\n      </div>\r\n  \r\n\r\n      <button onClick={addPlatinumBonusInput} type='button' style={{ background: '#ffd600', color: '#000', borderColor: '#0000' }} className='py-2 px-4 rounded'>\r\n        <FormattedMessage id='CREATE_EDIT_COLLECTION.ADD_NEW_BENEFITS' />\r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Step3}\r\n","import * as Yup from 'yup'\r\n\r\nexport interface ICreateAccount {\r\n  // artistName: string\r\n  collectionName: string\r\n  spotifyURL: string\r\n  collectionType: string\r\n  blockchain: string\r\n  collectionDescription: string\r\n  collectionOwner: string\r\n  // patentStatus: string\r\n  // startPrice: string\r\n  // buyoutPrice: string\r\n  ownershipOffered0: string\r\n  price0: string\r\n  quantity0: string \r\n  ownershipOffered1: string\r\n  price1: string\r\n  quantity1: string \r\n  ownershipOffered2: string\r\n  price2: string\r\n  quantity2: string \r\n  patentAbstract: string\r\n  patentSummary: string\r\n  fillingInfo: string\r\n  appStatus: string\r\n  patentURL: string\r\n  proHist1: string\r\n  proHist2: string\r\n  proHist3: string\r\n  accountPlan: string\r\n  businessName: string\r\n  businessDescriptor: string\r\n  businessType: string\r\n  businessDescription: string\r\n  businessEmail: string\r\n  nameOnCard: string\r\n  cardNumber: string\r\n  cardExpiryMonth: string\r\n  cardExpiryYear: string\r\n  cardCvv: string\r\n  saveCard: string\r\n}\r\n\r\nexport interface ITokenBenefitCheckboxData {\r\n  firstDibsNextDrop: boolean\r\n  firstDibAllDrop: boolean\r\n  accessToRoyalCollectorChannel: boolean\r\n  exclusiveContent: boolean\r\n  exclAccessToUnreleased: boolean\r\n}\r\n\r\nconst createAccountSchemas = [\r\n  Yup.object({\r\n    // artistName: Yup.string().required().label('Artist Name'),\r\n    // collectionName: Yup.string().required().label('Collection Name'),\r\n    // collectionType: Yup.string().required().label('Collection type'),\r\n    // collectionDescription: Yup.string().required().label('Collection Description'),\r\n    // collectionOwner: Yup.string().required().label('Collection Owner')\r\n    // patentStatus: Yup.string().required().label('Patent Status'),\r\n    // startPrice: Yup.string().required().label('Current Price'),\r\n    // buyoutPrice: Yup.string().required().label('Buyout Price'),\r\n  }),\r\n  // Yup.object({\r\n  //   patentAbstract: Yup.string().required().label('Patent Abstract'),\r\n  //   patentSummary: Yup.string().required().label('Patent summary'),\r\n  //   fillingInfo: Yup.string().required().label('Filling information'),\r\n  //   appStatus: Yup.string().required().label('Application status'),\r\n  // }),\r\n  // Yup.object({\r\n  //   proHist1: Yup.date().required().label('Date'),\r\n  //   proHist2: Yup.date().required().label('Date'),\r\n  //   proHist3: Yup.date().required().label('Date'),\r\n  // }),\r\n  // Yup.object({\r\n  //   businessName: Yup.string().required().label('Business Name'),\r\n  //   businessDescriptor: Yup.string().required().label('Shortened Descriptor'),\r\n  //   businessType: Yup.string().required().label('Corporation Type'),\r\n  //   businessEmail: Yup.string().required().label('Contact Email'),\r\n  // }),\r\n  // Yup.object({\r\n  //   nameOnCard: Yup.string().required().label('Name On Card'),\r\n  //   cardNumber: Yup.string().required().label('Card Number'),\r\n  //   cardExpiryMonth: Yup.string().required().label('Expiration Month'),\r\n  //   cardExpiryYear: Yup.string().required().label('Expiration Year'),\r\n  //   cardCvv: Yup.string().required().label('CVV'),\r\n  // }),\r\n]\r\n\r\nconst inits: ICreateAccount = {\r\n  // artistName: '',\r\n  collectionName: '',\r\n  spotifyURL: '',\r\n  collectionType: '',\r\n  blockchain: '',\r\n  collectionDescription: '',\r\n  collectionOwner: '',\r\n  // patentStatus: '',\r\n  // startPrice: '',\r\n  // buyoutPrice: '',\r\n  ownershipOffered0: \"\",\r\n  price0: \"\",\r\n  quantity0: \"\" ,\r\n  ownershipOffered1: \"\",\r\n  price1: \"\",\r\n  quantity1: \"\" ,\r\n  ownershipOffered2: \"\",\r\n  price2: \"\",\r\n  quantity2: \"\" ,\r\n  patentAbstract: '',\r\n  patentSummary: '',\r\n  fillingInfo: '',\r\n  appStatus: '',\r\n  patentURL: '',\r\n  proHist1: '2020-08-20',\r\n  proHist2: '2020-08-20',\r\n  proHist3: '2020-08-20',\r\n  accountPlan: '1',\r\n  businessName: 'Keenthemes Inc.',\r\n  businessDescriptor: 'KEENTHEMES',\r\n  businessType: '1',\r\n  businessDescription: '',\r\n  businessEmail: 'corp@support.com',\r\n  nameOnCard: 'Max Doe',\r\n  cardNumber: '4111 1111 1111 1111',\r\n  cardExpiryMonth: '1',\r\n  cardExpiryYear: '2',\r\n  cardCvv: '123',\r\n  saveCard: '1',\r\n}\r\n\r\nconst tokenBenefitdefaultChecboxData0: ITokenBenefitCheckboxData = {\r\n  firstDibsNextDrop: false,\r\n  firstDibAllDrop: false,\r\n  accessToRoyalCollectorChannel: false,\r\n  exclusiveContent: false,\r\n  exclAccessToUnreleased: false\r\n}\r\n\r\nconst tokenBenefitdefaultChecboxData1: ITokenBenefitCheckboxData = {\r\n  firstDibsNextDrop: false,\r\n  firstDibAllDrop: false,\r\n  accessToRoyalCollectorChannel: false,\r\n  exclusiveContent: false,\r\n  exclAccessToUnreleased: false\r\n}\r\n\r\nconst tokenBenefitdefaultChecboxData2: ITokenBenefitCheckboxData = {\r\n  firstDibsNextDrop: false,\r\n  firstDibAllDrop: false,\r\n  accessToRoyalCollectorChannel: false,\r\n  exclusiveContent: false,\r\n  exclAccessToUnreleased: false\r\n}\r\n\r\n\r\nexport {\r\n  createAccountSchemas, \r\n  inits, \r\n  tokenBenefitdefaultChecboxData0,\r\n  tokenBenefitdefaultChecboxData1,\r\n  tokenBenefitdefaultChecboxData2\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {FC} from 'react'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport {Field, ErrorMessage} from 'formik'\r\nimport { FormattedMessage, useIntl } from 'react-intl'\r\n\r\nconst Step4 = (props: any) => {\r\n\r\n  const intl = useIntl()\r\n\r\n  const handleBonusChange = (e: any) => {\r\n    e.preventDefault();\r\n    const index = e.target.id;\r\n\r\n    props.setDiamondTierBonus((s: any) => {\r\n      const newArr = s.slice();\r\n    \r\n      if(e.target.name === 'content') {\r\n        newArr[index] = e.target.value;\r\n      } else {\r\n        newArr[index] = e.target.value;\r\n      }\r\n\r\n      return newArr;\r\n    });\r\n  }\r\n\r\n  const addBonusInput = () => {\r\n    props.setDiamondTierBonus((s: any) => {\r\n      if(s.length > 0) {\r\n        const lastId = s[s.length - 1].id;\r\n        return [\r\n          ...s,\r\n          \"\"\r\n        ];\r\n      } else {\r\n        return [\r\n          ...s,\r\n          \"\"\r\n        ];\r\n      }\r\n    });\r\n  };\r\n\r\n  const removeBonusInput = (index: any) => {\r\n\r\n    console.log(index)\r\n    props.setDiamondTierBonus((s: any) => {\r\n      if(s.length > 0) {\r\n        const newArr = s.slice();\r\n        newArr.splice(index, 1);\r\n        console.log(newArr)\r\n        return newArr\r\n      } else {\r\n        return s\r\n      }\r\n    });\r\n  };\r\n\r\n  console.log(props.diamondTierBonus)\r\n\r\n  return (\r\n    <div className='w-100'>\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'><FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /></label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name=''\r\n          placeholder=''\r\n          value={intl.formatMessage({id: \"CREATE_EDIT_COLLECTION.TIER.DIAMOND\"})}\r\n          disabled={true}\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.TOKEN_IMAGE' />\r\n          <span className='ms-1'>(Recommended size: 500 x 500)</span>\r\n        </label>\r\n\r\n        {props.image2 !== \"\" &&\r\n          <div>\r\n            <img src={URL.createObjectURL(props.image2)} className='w-300px mb-3' />\r\n          </div>\r\n        }\r\n\r\n        <div>\r\n          <input type=\"file\" id=\"image\" accept=\"image/png, image/jpeg\" onChange={(e) => props.handleTokenImage2Change(e)} />\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.OWNERSHIP_OFFERED' /> \r\n          <span className='ms-1'>(Ownership of a single Diamond tier token in %)</span>\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='ownershipOffered2'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.PRICE' /> \r\n          ({props.selectedBlockchain !== '' && props.selectedBlockchain == 'ethereum' ? 'Price of single diamond tier token in ETH' : 'Price of single diamond tier token in KLAY'})\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='price2'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label mb-3 required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.QUANTITY' />\r\n          <span className='ms-1'>(Total quantity of diamond tier tokens)</span>\r\n        </label>\r\n\r\n        <Field\r\n          type='text'\r\n          className='form-control form-control-lg form-control-solid'\r\n          name='quantity2'\r\n          placeholder=''\r\n        />\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentName' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required'>\r\n          <FormattedMessage id='CREATE_EDIT_COLLECTION.SELECT_TOKEN_BENEFITS' />\r\n        </label>\r\n\r\n        <div className='mt-3'>\r\n          <label className='form-check form-check-custom form-check-solid align-items-start mt-2 my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.diamondTierBenefitCheckboxData.firstDibsNextDrop}\r\n              onChange={() =>{\r\n                props.handleCheckBoxChange(\r\n                  props.setDiamondTierStdBenefits, \r\n                  props.setDiamondTierBenefitCheckboxData,\r\n                  `First dibs on the next ${props.artistName ? props.artistName : ''} drop`,\r\n                  props.diamondTierStdBenefits,\r\n                  props.diamondTierBenefitCheckboxData.firstDibsNextDrop,\r\n                  'firstDibsNextDrop'\r\n                )\r\n              }}\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>First dibs on the next {props.artistName ? props.artistName : ''} drop</span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.diamondTierBenefitCheckboxData.exclAccessToUnreleased}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setDiamondTierStdBenefits, \r\n                  props.setDiamondTierBenefitCheckboxData,\r\n                  'Exclusive access to unreleased music',\r\n                  props.diamondTierStdBenefits,\r\n                  props.diamondTierBenefitCheckboxData.exclAccessToUnreleased,\r\n                  'exclAccessToUnreleased'\r\n                )\r\n              }}\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>\r\n                <FormattedMessage id='CREATE_EDIT_COLLECTION.EXCLUSIVE_ACCESS' />\r\n              </span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.diamondTierBenefitCheckboxData.accessToRoyalCollectorChannel}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setDiamondTierStdBenefits, \r\n                  props.setDiamondTierBenefitCheckboxData,\r\n                  'Access to Royal collector Discord channel',\r\n                  props.diamondTierStdBenefits,\r\n                  props.diamondTierBenefitCheckboxData.accessToRoyalCollectorChannel,\r\n                  'accessToRoyalCollectorChannel'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>\r\n                <FormattedMessage id='CREATE_EDIT_COLLECTION.ACCESS_TO_DISCORD' />\r\n              </span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.diamondTierBenefitCheckboxData.exclusiveContent}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setDiamondTierStdBenefits, \r\n                  props.setDiamondTierBenefitCheckboxData,\r\n                  'Exclusive Content',\r\n                  props.diamondTierStdBenefits,\r\n                  props.diamondTierBenefitCheckboxData.exclusiveContent,\r\n                  'exclusiveContent'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>\r\n                <FormattedMessage id='CREATE_EDIT_COLLECTION.EXCLUSIVE_CONTENT' />\r\n              </span>\r\n            </span>\r\n          </label>\r\n\r\n          <label className='form-check form-check-custom form-check-solid align-items-start my-2 mb-2'>\r\n            <input\r\n              className='form-check-input'\r\n              type='checkbox'\r\n              name='email-preferences[]'\r\n              defaultChecked={props.diamondTierBenefitCheckboxData.firstDibAllDrop}\r\n              onChange={() => {\r\n                props.handleCheckBoxChange(\r\n                  props.setDiamondTierStdBenefits, \r\n                  props.setDiamondTierBenefitCheckboxData,\r\n                  `First dibs on all future${props.artistName ? props.artistName : ''} drops`,\r\n                  props.diamondTierStdBenefits,\r\n                  props.diamondTierBenefitCheckboxData.firstDibAllDrop,\r\n                  'firstDibAllDrop'\r\n                )\r\n              }\r\n              }\r\n            />\r\n\r\n            <span className='form-check-label d-flex flex-column align-items-start'>\r\n              <span className='fw-bold fs-5 mb-0'>First dibs on all future {props.artistName ? props.artistName : ''} drops</span>\r\n            </span>\r\n          </label>\r\n        </div>\r\n\r\n        <div className='fv-plugins-message-container invalid-feedback'>\r\n          {/* <ErrorMessage name='patentAbstract' /> */}\r\n        </div>\r\n      </div>\r\n\r\n      <div className='mb-10 fv-row'>\r\n        <label className='form-label required'><FormattedMessage id='CREATE_EDIT_COLLECTION.ADD_CUSTOM_BENEFITS' /></label>\r\n        {props.diamondTierBonus.map((bonus: any, index: any) => (\r\n          <>\r\n          <textarea\r\n            key={bonus.id}\r\n            name=''\r\n            id={index}\r\n            className='form-control form-control-lg form-control-solid mt-4'\r\n            rows={5}\r\n            value={bonus}\r\n            onChange={(event) => handleBonusChange(event)}\r\n          ></textarea>\r\n\r\n          {/* <div className='fv-plugins-message-container invalid-feedback'>\r\n            <ErrorMessage name='collectionDescription' />\r\n          </div> */}\r\n          <button key={index} onClick={() => removeBonusInput(index)} type='button' className='btn btn-danger mt-4'>\r\n            <FormattedMessage id='CREATE_EDIT_COLLECTION.REMOVE_CUSTOM_BENEFITS' />\r\n          </button>\r\n          </>\r\n        ))}\r\n      </div>\r\n      <button onClick={addBonusInput} type='button' style={{ background: '#ffd600', color: '#000', borderColor: '#0000' }} className='py-2 px-4 rounded'>\r\n        <FormattedMessage id='CREATE_EDIT_COLLECTION.ADD_NEW_BENEFITS' />\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {Step4}\r\n","import React, {FC, useEffect, useRef, useState} from 'react'\r\nimport {useSelector, shallowEqual, useDispatch} from 'react-redux'\r\nimport {Step1} from './steps/Step1'\r\nimport {Step2} from './steps/Step2'\r\nimport {Step3} from './steps/Step3'\r\nimport {KTSVG} from '../../../../_metronic/helpers'\r\nimport {StepperComponent, IStepperOptions} from '../../../../_metronic/assets/ts/components'\r\nimport {Formik, Form, FormikValues} from 'formik'\r\nimport {\r\n  createAccountSchemas, \r\n  ICreateAccount, \r\n  inits, \r\n  tokenBenefitdefaultChecboxData0,\r\n  tokenBenefitdefaultChecboxData1,\r\n  tokenBenefitdefaultChecboxData2,\r\n  ITokenBenefitCheckboxData\r\n} from './CreateAccountWizardHelper'\r\nimport {createCollection} from '../../explore/redux/ecomCrud'\r\nimport {RootState} from '../../../../setup'\r\nimport {AlertDanger, AlertSuccess} from '../../alerts/Alerts'\r\nimport * as auth from '../../auth/redux/AuthRedux'\r\nimport {actions} from '../../explore/redux/ecomRedux'\r\nimport { Step4 } from './steps/Step4'\r\nimport { FormattedMessage, useIntl } from 'react-intl'\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\n\r\nconst defaultStepperOptions: IStepperOptions = {\r\n  startIndex: 1,\r\n  animation: false,\r\n  animationSpeed: '0.3s',\r\n  animationNextClass: 'animate__animated animate__slideInRight animate__fast',\r\n  animationPreviousClass: 'animate__animated animate__slideInLeft animate__fast',\r\n}\r\n\r\nconst Horizontal: FC = () => {\r\n  const stepperRef = useRef<HTMLDivElement | null>(null)\r\n  const stepper = useRef<StepperComponent | null>(null)\r\n  const [currentSchema, setCurrentSchema] = useState(createAccountSchemas[0])\r\n  const [initValues] = useState<ICreateAccount>(inits)\r\n  const intl = useIntl()\r\n\r\n  const {walletAddress, isAdmin} : any = useSelector<RootState>(\r\n    ({auth}) => ({\r\n      walletAddress: auth.walletAddress,\r\n      isAdmin: auth.user?.isAdmin,\r\n    })\r\n  )\r\n\r\n  const getCurrentDataTime = () => {\r\n    let now = new Date();\r\n    let utcString = now.toISOString().substring(0,19);\r\n    let year = now.getFullYear();\r\n    let month = now.getMonth() + 1;\r\n    let day = now.getDate();\r\n    let hour = now.getHours();\r\n    let minute = now.getMinutes();\r\n    let second = now.getSeconds();\r\n    var localDatetime = year + \"-\" +\r\n                      (month < 10 ? \"0\" + month.toString() : month) + \"-\" +\r\n                      (day < 10 ? \"0\" + day.toString() : day) + \"T\" +\r\n                      (hour < 10 ? \"0\" + hour.toString() : hour) + \":\" +\r\n                      (minute < 10 ? \"0\" + minute.toString() : minute) +\r\n                      utcString.substring(16,19);\r\n\r\n    return localDatetime\r\n  }\r\n\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n  const [checked, setChecked] = useState<boolean>(false)\r\n  const [image, setImage] = useState<any>(\"\")\r\n  const [dropCoverImage, setDropCoverImage] = useState<any>(\"\")\r\n  const [tokenImage0, setTokenImage0] = useState<any>(\"\")\r\n  const [tokenImage1, setTokenImage1] = useState<any>(\"\")\r\n  const [tokenImage2, setTokenImage2] = useState<any>(\"\")\r\n  const [legalPDF, setLegalPDF] = useState<any>(\"\")\r\n  const [successMessage, setSuccessMessage] = useState<string>(\"\")\r\n  const [errorMessage, setErrorMessage] = useState<any>(\"\")\r\n  const dispatch = useDispatch()\r\n\r\n  const [artistName, setArtistName] = useState<string>('')\r\n  const [selectedArtist, setSelectedArtist] = useState<string>('')\r\n\r\n  const [goldTierBenefitCheckboxData, setGoldTierBenefitCheckboxData] = useState<ITokenBenefitCheckboxData>(tokenBenefitdefaultChecboxData0)\r\n  const [platinumTierBenefitCheckboxData, setPlatinumTierBenefitCheckboxData] = useState<ITokenBenefitCheckboxData>(tokenBenefitdefaultChecboxData1)\r\n  const [diamondTierBenefitCheckboxData, setDiamondTierBenefitCheckboxData] = useState<ITokenBenefitCheckboxData>(tokenBenefitdefaultChecboxData2)\r\n\r\n  const [selectedGoldTier, setSelectedGoldTier] = useState<boolean>(false)\r\n  const [selectedPlatinumTier, setSelectedPlatinumTier] = useState<boolean>(false)\r\n  const [selectedDiamondTier, setSelectedDiamondTier] = useState<boolean>(false)\r\n  const [selectedBlockchain, setSelectedBlockchain] = useState<string>('')\r\n\r\n  const [goldTierStdBenefits, setGoldTierStdBenefits] = useState<Array<any>>([])\r\n  const [platinumTierStdBenefits, setPlatinumTierStdBenefits] = useState<Array<string>>([])\r\n  const [diamondTierStdBenefits, setDiamondTierStdBenefits] = useState<Array<string>>([])\r\n\r\n  const [goldTierBonus, setGoldTierBonus] = useState<Array<any>>([])\r\n  const [platinumTierBonus, setPlatinumTierBonus] = useState<Array<string>>([])\r\n  const [diamondTierBonus, setDiamondTierBonus] = useState<Array<string>>([])\r\n\r\n  const [currentIndex, setCurrentIndex] = useState<any>(null)\r\n  const [dropReleaseDateTime, setdropReleaseDateTime] = useState(getCurrentDataTime())\r\n  const [selectedAnyTiers, setSelectedAnyTiers] = useState<boolean>(selectedGoldTier || selectedPlatinumTier || selectedDiamondTier)\r\n\r\n  useEffect(() => {\r\n    if (!stepperRef.current) {\r\n      return\r\n    }\r\n\r\n    loadStepper()\r\n  }, [stepperRef])\r\n\r\n  useEffect(() => {\r\n    if (!stepperRef.current) {\r\n      return\r\n    }\r\n\r\n    let step = new StepperComponent(stepperRef.current as HTMLDivElement, defaultStepperOptions)\r\n    stepper.current = step\r\n\r\n    setSelectedAnyTiers(selectedGoldTier || selectedPlatinumTier || selectedDiamondTier)\r\n  }, [selectedGoldTier, selectedPlatinumTier, selectedDiamondTier])\r\n\r\n  useEffect(() => {\r\n    if(stepper.current?.currentStepIndex && stepper.current.totatStepsNumber) {\r\n      setCurrentIndex(stepper.current?.currentStepIndex)\r\n    }\r\n  }, [stepper.current])\r\n  \r\n  if(successMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setSuccessMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  if(errorMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setErrorMessage(\"\");\r\n      }, 200);\r\n    }, 5000);\r\n  }\r\n\r\n  const handleImageChange = (e: any) => {\r\n    setImage(e.target.files[0])\r\n  };\r\n\r\n  const handleDropCoverImageChange = (e: any) => {\r\n    setDropCoverImage(e.target.files[0])\r\n  };\r\n\r\n  const handleTokenImage0Change = (e: any) => {\r\n    setTokenImage0(e.target.files[0])\r\n  };\r\n\r\n  const handleTokenImage1Change = (e: any) => {\r\n    setTokenImage1(e.target.files[0])\r\n  };\r\n\r\n  const handleTokenImage2Change = (e: any) => {\r\n    setTokenImage2(e.target.files[0])\r\n  };\r\n\r\n  const handlePDFChange = (e: any) => {\r\n    setLegalPDF(e.target.files[0])\r\n  }\r\n\r\n  const {authToken, userID, userName}: any = useSelector<RootState>(\r\n    ({auth}) => ({\r\n      authToken: auth.accessToken,\r\n      userID: auth.user?.userID,\r\n      userName: auth.user?.username\r\n    }), shallowEqual\r\n  )\r\n\r\n  const loadStepper = () => {\r\n    stepper.current = StepperComponent.createInsance(stepperRef.current as HTMLDivElement)\r\n    console.log(stepper.current)\r\n    console.log(\"stepper loaded\")\r\n  }\r\n\r\n  const prevStep = () => {\r\n    if (!stepper.current) {\r\n      return\r\n    }\r\n\r\n    stepper.current.goPrev()\r\n    setCurrentIndex((index: any) => {return index - 1})\r\n\r\n    // setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex - 1])\r\n  }\r\n\r\n  const toggleBenefitCheckboxData = (tierBenefitCheckboxDataSetter: any ,property: any) => {\r\n    switch (property) {\r\n      case 'firstDibsNextDrop':\r\n        tierBenefitCheckboxDataSetter((data: any) => {\r\n          let newData = data\r\n          newData.firstDibsNextDrop = !data.firstDibsNextDrop\r\n          return newData\r\n        })\r\n        break;\r\n      case 'firstDibAllDrop':\r\n        tierBenefitCheckboxDataSetter((data: any) => {\r\n          let newData = data\r\n          newData.firstDibAllDrop = !data.firstDibAllDrop\r\n          return newData\r\n        })\r\n        break;\r\n      case 'accessToRoyalCollectorChannel':\r\n        tierBenefitCheckboxDataSetter((data: any) => {\r\n          let newData = data\r\n          newData.accessToRoyalCollectorChannel = !data.accessToRoyalCollectorChannel\r\n          return newData\r\n        })\r\n        break;\r\n      case 'exclusiveContent':\r\n        tierBenefitCheckboxDataSetter((data: any) => {\r\n          let newData = data\r\n          newData.exclusiveContent = !data.exclusiveContent\r\n          return newData\r\n        })\r\n        break;\r\n      case 'exclAccessToUnreleased':\r\n        tierBenefitCheckboxDataSetter((data: any) => {\r\n          let newData = data\r\n          newData.exclAccessToUnreleased = !data.exclAccessToUnreleased\r\n          return newData\r\n        })\r\n        break;\r\n    }\r\n  }\r\n\r\n  const checkRequiredFields = (\r\n    collectionName: string, \r\n    collectionOwner: string,\r\n    collectionType: string, \r\n    spotifyURL: string, \r\n    collectionDescription: string,\r\n    goldTierPrice: any,\r\n    platinumTierPrice: any,\r\n    diamondTierPrice: any,\r\n    ownershipOffered0: any,\r\n    ownershipOffered1: any,\r\n    ownershipOffered2: any,\r\n    quantity0: any,\r\n    quantity1: any,\r\n    quantity2: any,\r\n  ) => {\r\n    if(artistName === '') {\r\n      return {valStatus: false, msg: 'Please select artist name'}\r\n    }\r\n    if(image === \"\") {\r\n      return {valStatus: false, msg: 'Drop image is missing'}\r\n    }\r\n    if(dropCoverImage === \"\") {\r\n      return {valStatus: false, msg: 'Drop cover image is missing'}\r\n    }\r\n    if(legalPDF === \"\") {\r\n      return {valStatus: false, msg: 'Legal Document is missing'}\r\n    }\r\n    if(collectionName === '') {\r\n      return {valStatus: false, msg: 'Please enter collection name'}\r\n    }\r\n    if(collectionOwner === '') {\r\n      return {valStatus: false, msg: 'Please enter collection owner'}\r\n    }\r\n    if(collectionType === '') {\r\n      return {valStatus: false, msg: 'Please select collection type'}\r\n    }\r\n    if(selectedBlockchain === '') {\r\n      return {valStatus: false, msg: 'Please select Blockchain'}\r\n    }\r\n    if(collectionDescription === '') {\r\n      return {valStatus: false, msg: 'Please enter collection description'}\r\n    }\r\n    if(selectedGoldTier) {\r\n      if(tokenImage0 === '') {\r\n        return {valStatus: false, msg: 'Gold tier token image is missing'}\r\n      } \r\n      if(goldTierPrice === '' || ownershipOffered0 === '' || quantity0 === '') {\r\n        if(parseFloat(goldTierPrice) < 0 || parseFloat(ownershipOffered0) < 0 || parseInt(quantity0) < 0) {\r\n          return {valStatus: false, msg: 'Entered invalid gold tier data'}\r\n        }\r\n      }\r\n    }\r\n    if(selectedPlatinumTier) {\r\n      if(tokenImage1 === '') {\r\n        return {valStatus: false, msg: 'Platinum tier token image is missing'}\r\n      } \r\n      if(platinumTierPrice === '' || ownershipOffered1 === '' || quantity1 === '') {\r\n        if(parseFloat(platinumTierPrice) < 0 || parseFloat(ownershipOffered1) < 0 || parseInt(quantity1) < 0) {\r\n          return {valStatus: false, msg: 'Entered invalid platinum tier data'}\r\n        }\r\n      }\r\n    }\r\n    if(selectedDiamondTier) {\r\n      if(tokenImage2 === '') {\r\n        return {valStatus: false, msg: 'Diamond tier token image is missing'}\r\n      } \r\n      if(diamondTierPrice === '' || ownershipOffered2 === '' || quantity2 === '') {\r\n        if(parseFloat(diamondTierPrice) < 0 || parseFloat(ownershipOffered2) < 0 || parseInt(quantity2) < 0) {\r\n          return {valStatus: false, msg: 'Entered invalid platinum tier data'}\r\n        }\r\n      }\r\n    }\r\n    return {valStatus: true, msg: null}\r\n  }\r\n\r\n  const getCombinedObject = (stdBenefits: Array<any>, custBenefits: Array<any>) => {\r\n    return {\r\n      \"stdBenefits\" : stdBenefits,\r\n      \"custBenefits\": custBenefits\r\n    }\r\n  }\r\n\r\n  const handleCheckBoxChange = (\r\n    stateSetter: any, \r\n    tierBenefitCheckboxDataSetter: any,\r\n    text: any, \r\n    state: Array<any>, \r\n    isRemovingElement: boolean, \r\n    property: any\r\n  ) => {\r\n\r\n    toggleBenefitCheckboxData(tierBenefitCheckboxDataSetter, property)\r\n\r\n    if(!isRemovingElement) {\r\n      stateSetter((state: any) => {\r\n        return [...state, text]\r\n      })\r\n    } else {\r\n        let newState = state.filter((data) => data !== text)\r\n        stateSetter(newState);\r\n    }\r\n  }\r\n\r\n  const resetForm = () => {\r\n    setImage(\"\")\r\n    setDropCoverImage(\"\")\r\n    setLegalPDF(\"\")\r\n    setTokenImage0(\"\")\r\n    setTokenImage1(\"\")\r\n    setTokenImage2(\"\")\r\n    setArtistName(\"\")\r\n    setGoldTierBenefitCheckboxData(tokenBenefitdefaultChecboxData0)\r\n    setPlatinumTierBenefitCheckboxData(tokenBenefitdefaultChecboxData1)\r\n    setDiamondTierBenefitCheckboxData(tokenBenefitdefaultChecboxData2)\r\n    setSelectedGoldTier(false)\r\n    setSelectedPlatinumTier(false)\r\n    setSelectedDiamondTier(false)\r\n    setSelectedBlockchain(\"\")\r\n    setGoldTierStdBenefits([])\r\n    setPlatinumTierStdBenefits([])\r\n    setDiamondTierStdBenefits([])\r\n    setGoldTierBonus([])\r\n    setPlatinumTierBonus([])\r\n    setDiamondTierBonus([])\r\n  }\r\n\r\n  const submitStep = (values: ICreateAccount, actions: FormikValues) => {\r\n    if (!stepper.current) {\r\n      return\r\n    }\r\n    console.log(\"step changed\")\r\n\r\n    // setCurrentSchema(createAccountSchemas[stepper.current.currentStepIndex])\r\n\r\n    if(!(selectedGoldTier || selectedPlatinumTier || selectedDiamondTier)) {\r\n      return\r\n    }\r\n\r\n    if (stepper.current.currentStepIndex !== stepper.current.totatStepsNumber) {\r\n      // if(stepper.current.currentStepIndex == 1 ) {\r\n      //   if(\r\n      //     values.collectionName === '') {\r\n      //     window.scrollTo(0,0)\r\n      //     setErrorMessage(\"Please enter a collection name\")\r\n      //     setChecked(true)\r\n      //     setLoading(false)\r\n      //     return\r\n      //   }\r\n\r\n      //   if(values.collectionType === '') {\r\n      //     window.scrollTo(0,0)\r\n      //     setErrorMessage(\"Please select a collection type\")\r\n      //     setChecked(true)\r\n      //     setLoading(false)\r\n      //     return\r\n      //   }\r\n\r\n      //   if(values.collectionDescription === '') {\r\n      //     window.scrollTo(0,0)\r\n      //     setErrorMessage(\"Please enter a collection description\")\r\n      //     setChecked(true)\r\n      //     setLoading(false)\r\n      //     return\r\n      //   }\r\n\r\n      //   if(values.collectionOwner === '') {\r\n      //     window.scrollTo(0,0)\r\n      //     setErrorMessage(\"Please enter a collection owner\")\r\n      //     setChecked(true)\r\n      //     setLoading(false)\r\n      //     return\r\n      //   }\r\n      // }\r\n      stepper.current.goNext()\r\n      setCurrentIndex((index: any) => {return index + 1})\r\n    } else {\r\n      setLoading(true)\r\n      const valData = checkRequiredFields(\r\n        values.collectionName,\r\n        values.collectionOwner,\r\n        values.collectionType,\r\n        values.spotifyURL,\r\n        values.collectionDescription,\r\n        values.price0,\r\n        values.price1,\r\n        values.price2,\r\n        values.ownershipOffered0,\r\n        values.ownershipOffered1,\r\n        values.ownershipOffered2,\r\n        values.quantity0,\r\n        values.quantity1,\r\n        values.quantity2\r\n      )\r\n      if(valData.valStatus) {      \r\n        const formData = new FormData()\r\n        formData.append('authToken', authToken)\r\n        formData.append('image', image)\r\n        formData.append('dropCoverImage', dropCoverImage)\r\n        formData.append('legalPDF', legalPDF)\r\n        formData.append('artistID', selectedArtist)\r\n        formData.append('collectionName', values.collectionName)\r\n        formData.append('collectionOwner', values.collectionOwner)\r\n        formData.append('spotifyURL', values.spotifyURL)\r\n        formData.append('dropReleaseDateTime', dropReleaseDateTime)\r\n        formData.append('collectionType', values.collectionType)\r\n        formData.append('blockchain', selectedBlockchain)\r\n\r\n        let colDescriptArr = values.collectionDescription.split('\\n')\r\n        formData.append('collectionDescription', JSON.stringify(colDescriptArr))\r\n        formData.append('hasGoldTier', selectedGoldTier.toString())\r\n        formData.append('hasPlatinumTier', selectedPlatinumTier.toString())\r\n        formData.append('hasDiamondTier', selectedDiamondTier.toString())\r\n        if(selectedGoldTier) {\r\n          formData.append('goldTierImage', tokenImage0)\r\n          formData.append('ownershipOfferedForGoldTier', values.ownershipOffered0)\r\n          formData.append('goldTierPrice', values.price0)\r\n          formData.append('goldTierQuantity', values.quantity0)\r\n          formData.append('goldTierBenefits', JSON.stringify(getCombinedObject(goldTierStdBenefits, goldTierBonus)))\r\n        }\r\n        if(selectedPlatinumTier) {\r\n          formData.append('platinumTierImage', tokenImage1)\r\n          formData.append('ownershipOfferedForPlatinumTier', values.ownershipOffered1)\r\n          formData.append('platinumTierPrice', values.price1)\r\n          formData.append('platinumTierQuantity', values.quantity1)\r\n          formData.append('platinumTierBenefits', JSON.stringify(getCombinedObject(platinumTierStdBenefits, platinumTierBonus)))\r\n        }\r\n        if(selectedDiamondTier) {\r\n          formData.append('diamondTierImage', tokenImage2)\r\n          formData.append('ownershipOfferedForDiamondTier', values.ownershipOffered2)\r\n          formData.append('diamondTierPrice', values.price2)\r\n          formData.append('diamondTierQuantity', values.quantity2)\r\n          formData.append('diamondTierBenefits', JSON.stringify(getCombinedObject(diamondTierStdBenefits, diamondTierBonus)))\r\n        }\r\n\r\n        createCollection(\r\n          formData\r\n        ).then(\r\n          (response) => {\r\n            if(response.data.success) {\r\n              setSuccessMessage(response.data.message)\r\n              setChecked(true)\r\n              setLoading(false)\r\n              stepper.current?.goto(1)\r\n              window.scrollTo(0,0)\r\n              setCurrentIndex(1)\r\n              setImage(\"\")\r\n              // setEvents(eventArray)\r\n              actions.resetForm()\r\n              resetForm()\r\n            } else {\r\n              if(response.data.message) {\r\n                setErrorMessage(response.data.message)\r\n              } else {\r\n                setErrorMessage(intl.formatMessage({ id: 'CREATE_EDIT_COLLECTION.COLLECTION_CREATION_FAILED' }))\r\n              }\r\n\r\n              setChecked(true)\r\n              setLoading(false)\r\n              stepper.current?.goto(1)\r\n              window.scrollTo(0,0)\r\n              setCurrentIndex(1)\r\n            }\r\n          }\r\n        ).catch((error) => {\r\n          localStorage.setItem('sessionTimeOut', 'Session timed out')\r\n          dispatch(auth.actions.logout())\r\n        })\r\n      } else {\r\n        window.scrollTo(0,0)\r\n        setErrorMessage(valData.msg)\r\n        setChecked(true)\r\n        setLoading(false)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {successMessage !== \"\" ? (\r\n          <AlertSuccess message={successMessage} checked={checked} />\r\n    ) : null }\r\n\r\n    {errorMessage !== \"\" ? (\r\n      <AlertDanger message={errorMessage} checked={checked} />\r\n      ) : null }\r\n\r\n    {isAdmin == '1' && \r\n      <>\r\n        <div className='card'>\r\n          <div className='card-body'>\r\n            <div\r\n              ref={stepperRef}\r\n              className='stepper stepper-links d-flex flex-column pt-15'\r\n              id='kt_create_account_stepper'\r\n            >\r\n              <div className='stepper-nav mb-5'>\r\n                <div className='stepper-item current' data-kt-stepper-element='nav'>\r\n                  <h3 className='stepper-title'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.COLLECTION_INFO\" /></h3>\r\n                </div>\r\n\r\n                {selectedGoldTier && \r\n                  <div className='stepper-item' data-kt-stepper-element='nav'>\r\n                    <h3 className='stepper-title'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.GOLD_TIER_INFO\" /></h3>\r\n                  </div>\r\n                }\r\n\r\n                {selectedPlatinumTier && \r\n                  <div className='stepper-item' data-kt-stepper-element='nav'>\r\n                    <h3 className='stepper-title'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.PLATINUM_TIER_INFO\" /></h3>\r\n                  </div>\r\n                }\r\n\r\n                {selectedDiamondTier && \r\n                  <div className='stepper-item' data-kt-stepper-element='nav'>\r\n                    <h3 className='stepper-title'><FormattedMessage id=\"CREATE_EDIT_COLLECTION.DIAMOND_TIER_INFO\" /></h3>\r\n                  </div>\r\n                }\r\n\r\n                {/* <div className='stepper-item' data-kt-stepper-element='nav'>\r\n                  <h3 className='stepper-title'>Prosecution History</h3>\r\n                </div> */}\r\n              </div>\r\n\r\n              <Formik validationSchema={currentSchema} initialValues={initValues} onSubmit={submitStep}>\r\n                {() => (\r\n                  <Form\r\n                    className='mx-auto mw-600px w-100 pt-15 pb-10'\r\n                    noValidate\r\n                    id='kt_create_account_form'\r\n                  >\r\n                    <div className='current' data-kt-stepper-element='content'>\r\n                      <Step1 \r\n                        handleImageChange={handleImageChange} \r\n                        image={image}\r\n                        handleDropCoverImageChange={handleDropCoverImageChange}\r\n                        handlePDFChange={handlePDFChange}\r\n                        legalPDF={legalPDF}\r\n                        dropCoverImage={dropCoverImage}\r\n                        selectedArtist={selectedArtist}\r\n                        setSelectedArtist={setSelectedArtist}\r\n                        artistName={artistName}\r\n                        setArtistName={setArtistName}\r\n                        selectedGoldTier={selectedGoldTier}\r\n                        selectedPlatinumTier={selectedPlatinumTier}\r\n                        selectedDiamondTier={selectedDiamondTier}\r\n                        setSelectedGoldTier={setSelectedGoldTier}\r\n                        setSelectedPlatinumTier={setSelectedPlatinumTier}\r\n                        setSelectedDiamondTier={setSelectedDiamondTier}\r\n                        selectedBlockchain={selectedBlockchain}\r\n                        setSelectedBlockchain={setSelectedBlockchain}\r\n                        dropReleaseDateTime={dropReleaseDateTime}\r\n                        setdropReleaseDateTime={setdropReleaseDateTime}\r\n                      />\r\n                    </div>\r\n\r\n                    {selectedGoldTier &&\r\n                      <div data-kt-stepper-element='content'>\r\n                        <Step2 \r\n                          image0={tokenImage0}\r\n                          handleTokenImage0Change={handleTokenImage0Change}\r\n                          artistName={artistName}\r\n                          selectedBlockchain={selectedBlockchain}\r\n                          goldTierBonus={goldTierBonus}\r\n                          setGoldTierBonus={setGoldTierBonus}\r\n                          setGoldTierBenefitCheckboxData={setGoldTierBenefitCheckboxData}\r\n                          goldTierBenefitCheckboxData={goldTierBenefitCheckboxData}\r\n                          setGoldTierStdBenefits={setGoldTierStdBenefits}\r\n                          goldTierStdBenefits={goldTierStdBenefits}\r\n                          handleCheckBoxChange={handleCheckBoxChange}\r\n                        />\r\n                      </div>\r\n                    }\r\n\r\n                    {selectedPlatinumTier &&\r\n                      <div data-kt-stepper-element='content'>\r\n                        <Step3 \r\n                          image1={tokenImage1}\r\n                          handleTokenImage1Change={handleTokenImage1Change}\r\n                          artistName={artistName}\r\n                          selectedBlockchain={selectedBlockchain}\r\n                          platinumTierBonus={platinumTierBonus}\r\n                          setPlatinumTierBonus={setPlatinumTierBonus}\r\n                          setPlatinumTierBenefitCheckboxData={setPlatinumTierBenefitCheckboxData}\r\n                          platinumTierBenefitCheckboxData={platinumTierBenefitCheckboxData}\r\n                          setPlatinumTierStdBenefits={setPlatinumTierStdBenefits}\r\n                          platinumTierStdBenefits={platinumTierStdBenefits}\r\n                          handleCheckBoxChange={handleCheckBoxChange}\r\n                        />\r\n                      </div>\r\n                    }\r\n\r\n                    {selectedDiamondTier &&\r\n                      <div data-kt-stepper-element='content'>\r\n                        <Step4 \r\n                          image2={tokenImage2}\r\n                          artistName={artistName}\r\n                          handleTokenImage2Change={handleTokenImage2Change}\r\n                          selectedBlockchain={selectedBlockchain}\r\n                          diamondTierBonus={diamondTierBonus}\r\n                          setDiamondTierBonus={setDiamondTierBonus}\r\n                          setDiamondTierBenefitCheckboxData={setDiamondTierBenefitCheckboxData}\r\n                          diamondTierBenefitCheckboxData={diamondTierBenefitCheckboxData}\r\n                          setDiamondTierStdBenefits={setDiamondTierStdBenefits}\r\n                          diamondTierStdBenefits={diamondTierStdBenefits}\r\n                          handleCheckBoxChange={handleCheckBoxChange}\r\n                        />\r\n                      </div>\r\n                    }\r\n\r\n                    <div className='d-flex flex-stack pt-15'>\r\n                      <div className='mr-2'>\r\n                        <button\r\n                          onClick={prevStep}\r\n                          type='button'\r\n                          className='btn btn-lg btn-light-primary me-3'\r\n                          data-kt-stepper-action='previous'\r\n                        >\r\n                          <KTSVG\r\n                            path='/media/icons/duotone/Navigation/Left-2.svg'\r\n                            className='svg-icon-4 me-1'\r\n                          />\r\n                          <FormattedMessage id=\"CREATE_EDIT_COLLECTION.BACK\" />\r\n                        </button>\r\n                      </div>\r\n\r\n                      <div>\r\n                        {loading && (\r\n                              <button \r\n                                style={{ background: '#ffd600', color: '#000', borderColor: '#0000' }} \r\n                                type='submit' \r\n                                className='py-2 px-4 me-3 rounded'\r\n                              >\r\n                                <FormattedMessage id=\"CREATE_EDIT_COLLECTION.SUBMITTING\" />..\r\n                                <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                              </button>\r\n                          )\r\n                        }\r\n\r\n                        {!loading && (\r\n                            <button \r\n                              type='submit' \r\n                              style={{ background: '#ffd600', color: '#000', borderColor: '#0000' }} \r\n                              className='py-2 px-4 me-3 rounded' \r\n                              disabled={!selectedAnyTiers}\r\n                            >\r\n                            <span className='indicator-label'>\r\n                              {currentIndex !== undefined &&\r\n                                currentIndex !==\r\n                                stepper.current?.totatStepsNumber! && <FormattedMessage id=\"CREATE_EDIT_COLLECTION.CONTINUE\" />}\r\n                              {\r\n                                currentIndex === undefined && <FormattedMessage id=\"CREATE_EDIT_COLLECTION.CONTINUE\" />}\r\n                                \r\n                              {currentIndex !== undefined &&\r\n                                currentIndex ==\r\n                                stepper.current?.totatStepsNumber! && <FormattedMessage id=\"CREATE_EDIT_COLLECTION.SUBMIT\" />}\r\n                              <KTSVG\r\n                                path='/media/icons/duotone/Navigation/Right-2.svg'\r\n                                className='svg-icon-3 ms-2 me-0'\r\n                              />\r\n                            </span>\r\n                          </button>\r\n                          )}\r\n                      </div>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    }\r\n\r\n    {isAdmin == '0' && \r\n      <Routes>\r\n          <Route index element={<Navigate to={'/error/404'} /> }/>\r\n      </Routes>\r\n    }\r\n    </>\r\n  )\r\n}\r\n\r\nexport {Horizontal}\r\n","import React from 'react'\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\r\nimport {Horizontal} from './components/Horizontal'\r\n\r\nconst wizardsBreadCrumbs: Array<PageLink> = [\r\n  {\r\n    title: 'Wizards',\r\n    path: '/crafted/pages/wizards/horizontal',\r\n    isSeparator: false,\r\n    isActive: false,\r\n  },\r\n  {\r\n    title: '',\r\n    path: '',\r\n    isSeparator: true,\r\n    isActive: false,\r\n  },\r\n]\r\n\r\nconst WizardsPage: React.FC = () => {\r\n\r\n  const { isAdmin }: any = useSelector<RootState>(\r\n    ({ auth }) => ({\r\n        isAdmin: auth.user?.isAdmin\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  return (\r\n      <>\r\n        {isAdmin == '1' && \r\n          <Horizontal />\r\n        }\r\n      </>\r\n  )\r\n}\r\n\r\nexport default WizardsPage\r\n"],"sourceRoot":""}