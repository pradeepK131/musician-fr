{"version":3,"sources":["app/modules/order-management/orderDetailView/components/PasswordConfirmDialog.tsx","app/modules/order-management/orderDetailView/components/Options.tsx","app/modules/order-management/orderDetailView/components/OwnerDetail.tsx","app/modules/order-management/orderDetailView/components/OrderDetailCard.tsx","app/modules/order-management/orderDetailView/components/RefundDetailModal.tsx","app/modules/order-management/common/index.ts","app/modules/order-management/orderDetailView/OrderDetail.tsx"],"names":["PasswordConfirmDialog","props","useState","checked","setChecked","message","setMessage","handleSubmit","a","setShowPassConfirmDialog","password","length","optionType","createNewRefund","cancelExistingRefund","Dialog","open","showPassConfirmDialog","onClose","DialogTitle","className","id","DialogContent","type","autoComplete","value","onChange","event","preventDefault","setPassword","target","handlePasswordChange","onClick","Options","walletName","useSelector","auth","navigate","useNavigate","href","refundData","setShowRefundDetailDialog","submitOptions","disabled","status","orderDetail","currency_type","isRefundProcessing","isRefundCancellationProcessing","blockchain","collectionID","collection_id","tier","orderCode","order_code","buyer","state","handleEthereumLogic","handleKlaytnLogic","minted","reminting","setIsRefundProcessing","setIsRefundCancellationProcessing","OwnerDetail","wType","walletAddress","src","process","buyer_image","alt","buyer_name","buyer_email","slice","wallet_type","tokenType","mintStatus","OrderDetailCard","collection_name","artist_name","tokenID","amount_paid","quantity_available","total_quantity","getExplorerURL","tx_hash","RefundDetailModal","refundID","charge","created","showRefundDetailDialog","Date","parseInt","toUTCString","getTokenID","rawData","web3","Web3","tokenIDHex","start","utils","hexToNumberString","klaytn","window","caver","Caver","ViewOrderDetail","useLocation","loading","setLoading","setOrderDetail","setRefunData","setRefunCancelData","setOptionType","setReminting","resSuccessMessage","setResSuccessMessage","resFailureMessage","setResFailureMessage","userID","user","isAdmin","setTimeout","useEffect","getOrderDetail","then","response","tempOrderDetail","data","order_detail","getRefundDetail","payment_intent","refund_data","refund_cancel_data","catch","err","console","log","checkEthereumTransaction","transactionHash","eth","getTransactionReceipt","receipt","logs","updateOrderAfterReplacement","success","scrollTo","checkTransactionOnKlaytn","rpc","klay","nftContract","Contract","contractAbi","ethereum","request","method","accounts","params","methods","sellTokenforCardPurchase","encodeABI","txHash","error","myContract","klaytnABI","enable","account","selectedAddress","send","from","gas","createRefund","cancelRefund","refund_id","_optionType","role","CircularProgress","index","element","to"],"mappings":"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","file":"static/js/14.1b038063.chunk.js","sourcesContent":["import {useState} from \"react\";\r\nimport { Button } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogActions } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { DialogTitle } from '@mui/material';\r\nimport { toAbsoluteUrl } from \"_metronic/helpers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"setup\";\r\nimport { AlertDanger } from \"app/modules/alerts/Alerts\";\r\n\r\n\r\nexport const PasswordConfirmDialog = (props: any) => {\r\n\r\n    const [loading, setLoading] = useState<boolean>(false)\r\n    const [checked, setChecked] = useState<boolean>(false)\r\n    \r\n    const [message, setMessage] = useState<any>('')\r\n\r\n    const handlePasswordChange = (event: any) => {\r\n        event.preventDefault()\r\n\r\n        props.setPassword(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = async () => {\r\n        props.setShowPassConfirmDialog(false)\r\n        \r\n        if(props.password.length > 0) {\r\n            if(props.optionType == 'refund') {\r\n                props.createNewRefund()\r\n            } else if(props.optionType == 'refund_cancel') {\r\n                props.cancelExistingRefund()\r\n            }\r\n        } else {\r\n            setMessage('Please enter your password.')\r\n            setChecked(true)\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog open={props.showPassConfirmDialog} onClose={() => props.setShowPassConfirmDialog(false)} aria-labelledby=\"form-dialog-title\">\r\n                {message && message != '' && \r\n                    <AlertDanger message={message} checked={checked} />\r\n                }\r\n                <DialogTitle className='px-5 text-center fw-bolder text-muted' id=\"form-dialog-title\">Confirmation</DialogTitle>\r\n                <div className='separator'></div>\r\n                <DialogContent>\r\n                    <div \r\n                        className='d-flex px-5 justify-content-center mb-5'\r\n                    >\r\n                        <span \r\n                            className='px-2 pb-4 ms-4 fs-5 cursor-pointer'\r\n                        >\r\n                            Please Confirm Your Password\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className='row mb-6'>\r\n                        <label className='col-lg-4 col-form-label required fw-bold fs-6 text-muted'>\r\n                            Password\r\n                        </label>\r\n                        <div className='col-lg-8 fv-row'>\r\n                            <input\r\n                                type='password'\r\n                                autoComplete='off'\r\n                                className={'form-control form-control-lg form-control-solid'}\r\n                                value={props.password}\r\n                                onChange={(event) => handlePasswordChange(event)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </DialogContent>\r\n\r\n                <div className='separator mb-5'></div>\r\n\r\n                <div className=\"me-5 mt-5 mb-5 text-center\">\r\n                    <span \r\n                        onClick={() => handleSubmit()}\r\n                        className=\"btn btn-primary\"\r\n                    >\r\n                        Confirm\r\n                    </span>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}","import { useSelector, shallowEqual } from \"react-redux\"\r\nimport { RootState } from \"../../../../../setup\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { PasswordConfirmDialog } from \"./PasswordConfirmDialog\"\r\n\r\nexport const Options = (props: any) => {\r\n\r\n    const { walletName }: any = useSelector<RootState>(\r\n        ({ auth }) => ({\r\n            walletName: auth.walletName\r\n        })\r\n    )\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const getRefundBtnDisableStatus = () => {\r\n        if(props.refundData && props.refundData.status == 'succeeded') {\r\n            return true\r\n        }\r\n\r\n        if(props.orderDetail.currency_type != 'USD') {\r\n            return true\r\n        }\r\n\r\n        return false\r\n    }\r\n\r\n    const getRemintBtnDisableStatus = () => {\r\n        if(props.orderDetail.currency_type != 'USD') return true\r\n        if(props.orderDetail.status == 'paid' && props.orderDetail.minted == '1') return true\r\n\r\n        if(props.orderDetail.status != 'paid') return true\r\n\r\n        return false\r\n    }\r\n\r\n    const mintReplacement = () => {\r\n        \r\n        const blockchain = props.orderDetail.blockchain\r\n        const collectionID = props.orderDetail.collection_id\r\n        const tier = props.orderDetail.tier\r\n        const orderCode = props.orderDetail.order_code\r\n        const buyer = props.orderDetail.buyer\r\n\r\n        if(!walletName) {\r\n            navigate('/my-wallet', { state: { message: 'Please connect your wallet.' } })\r\n        }\r\n\r\n        if(blockchain == 'ethereum' && walletName != 'metamask') {\r\n            navigate('/my-wallet', { state: { message: 'Please connect the metamask wallet to continue the purchase.' } })\r\n            return\r\n        }\r\n\r\n        if(blockchain == 'klaytn' && walletName != 'kaikas') {\r\n            navigate('/my-wallet', { state: { message: 'Please connect the kaikas wallet to continue the purchase.' } })\r\n            return\r\n        }\r\n\r\n        if(blockchain == 'ethereum') {\r\n            props.handleEthereumLogic(collectionID, tier, orderCode, buyer)\r\n        } else if(blockchain == 'klaytn') {\r\n            props.handleKlaytnLogic(collectionID, tier, orderCode, buyer)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"card mb-5 mb-xl-8\">\r\n                <div className=\"card-header border-0\">\r\n                    <div className=\"card-title\">\r\n                        <h3 className=\"fw-bolder m-0\">Options</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-body pt-2\">\r\n                    <div className=\"py-2\">\r\n                        <div className=\"d-flex flex-stack\">\r\n                            <div className=\"d-flex\">\r\n                                {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Refund Option</a>\r\n                                    <div className=\"fs-6 fw-bold text-muted\">Refund the charged amount</div>\r\n                                    {props.refundData && \r\n                                        <a \r\n                                            className=\"fs-6 fw-bold text-muted text-hover-primary cursor-pointer\" \r\n                                            onClick={() => props.setShowRefundDetailDialog(true)}\r\n                                        >\r\n                                            View Issued Refunds\r\n                                        </a>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <button \r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={() => props.submitOptions('refund')}\r\n                                    disabled={getRefundBtnDisableStatus()}\r\n                                >\r\n                                    Refund\r\n                                    {props.isRefundProcessing && \r\n                                        <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                            {props.refundData && props.refundData.status == 'requires_action' && \r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <button \r\n                                        className=\"btn btn-danger\"\r\n                                        onClick={props.cancelExistingRefund}\r\n                                    >\r\n                                        Cancel\r\n                                        \r\n                                        {props.isRefundCancellationProcessing && \r\n                                            <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                                        }\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                        <div className=\"separator separator-dashed my-5\"></div>\r\n                        <div className=\"d-flex flex-stack\">\r\n                            <div className=\"d-flex\">\r\n                                {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n                                <div className=\"d-flex flex-column\">\r\n                                    <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Replace Option</a>\r\n                                    <div className=\"fs-6 fw-bold text-muted text-hover-primary cursor-pointer\">Mint new token</div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <button \r\n                                    className=\"btn btn-primary\"\r\n                                    onClick={mintReplacement}\r\n                                    disabled={getRemintBtnDisableStatus()}\r\n                                >\r\n                                    Remint\r\n                                    {props.reminting && \r\n                                        <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                                    }\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <PasswordConfirmDialog \r\n                showPassConfirmDialog={props.showPassConfirmDialog}\r\n                setShowPassConfirmDialog={props.setShowPassConfirmDialog}\r\n                password={props.password}\r\n                setPassword={props.setPassword}\r\n                setIsRefundProcessing={props.setIsRefundProcessing}\r\n                setIsRefundCancellationProcessing={props.setIsRefundCancellationProcessing}\r\n                optionType={props.optionType}\r\n                createNewRefund={props.createNewRefund}\r\n                cancelExistingRefund={props.cancelExistingRefund}\r\n            />\r\n        </>\r\n    )\r\n}","import { FC } from 'react'\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport { RootState } from '../../../../../setup'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { Navigate, Route } from 'react-router'\r\n\r\ntype Props = {\r\n    orderDetail: any\r\n}\r\n\r\nexport const OwnerDetail: FC<Props> = ({ orderDetail }) => {\r\n\r\n    const getWalletType = (wType: string) => {\r\n        if(wType == 'custodial_wallet_eth' || wType == 'custodial_wallet_klay') return 'Custodial Wallet'\r\n        if(wType == 'kaikas_wallet' || wType == 'metamask_wallet') return 'Owned Wallet'\r\n\r\n        return 'Others'\r\n    }\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    return (\r\n        <>\r\n           {orderDetail && \r\n            <div className=\"card mb-5 mb-xl-8\">\r\n                <div className=\"card-body pt-0 pt-lg-1\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body d-flex flex-center flex-column pt-12 p-9 px-0\">\r\n                            <div className=\"symbol symbol-100px symbol-circle mb-7\">\r\n                                <img src={`${process.env.REACT_APP_API_USER_IMAGE_URL}/${orderDetail.buyer_image}`} alt=\"image\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"d-flex flex-stack fs-4 py-3\">\r\n                        <div \r\n                            className=\"fw-bolder rotate collapsible\" \r\n                        >\r\n                            Buyer's Detail\r\n                        </div>\r\n                        {/* <span data-bs-toggle=\"tooltip\" data-bs-trigger=\"hover\" title=\"Edit customer details\">\r\n                            <div className=\"btn btn-sm btn-light-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#kt_modal_update_details\"><FormattedMessage id=\"ADMIN.VIEW_USER.USER_SUMMARY.EDIT\" /></div>\r\n                        </span> */}\r\n                    </div>\r\n                    <div className=\"separator\"></div>\r\n                    <div id=\"kt_user_view_details\" className=\"show\">\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">Buyer's Name</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{orderDetail.buyer_name}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">Buyer's Email</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{orderDetail.buyer_email}</a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">Buyer's Wallet Address</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <a href=\"#\" className=\"text-gray-600 text-hover-primary\">\r\n                                    {orderDetail.buyer ? shrinkWalletAddress(orderDetail.buyer) : ''}\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"pb-5 fs-6\">\r\n                            <div className=\"fw-bolder mt-5\">Wallet Type</div>\r\n                            <div className=\"text-gray-600\">\r\n                                <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{getWalletType(orderDetail.wallet_type)}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           }\r\n        </>\r\n    )\r\n}","import { FC } from 'react'\r\nimport { useSelector, shallowEqual } from 'react-redux'\r\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport { RootState } from '../../../../../setup'\r\nimport {FormattedMessage} from 'react-intl'\r\n\r\ntype Props = {\r\n    orderDetail: any\r\n}\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\nconst mintStatus: any = {\r\n    '1' : 'Minted',\r\n    '0' : 'Minting Failed'\r\n}\r\n\r\nexport const OrderDetailCard: FC<Props> =  ({ orderDetail }) => {\r\n\r\n    const getExplorerURL = (blockchain: string) => {\r\n        if(!blockchain) return\r\n\r\n        if(blockchain == 'ethereum') return 'https://goerli.etherscan.io/tx/'\r\n\r\n        if(blockchain == 'klaytn') return 'https://baobab.scope.klaytn.com/tx/'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {orderDetail && \r\n                <>\r\n                    <div className=\"card pt-4 mb-6 mb-xl-9\">\r\n                        <div className=\"card-header border-0\">\r\n                            <div className=\"card-title\">\r\n                                <h2>Order Details</h2>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"card-body pt-0 pb-5\">\r\n                            <div className='d-flex justify-content-center'>\r\n                                <div className='d-flex flex-column w-100'>\r\n                                    <div className='text-center'>\r\n                                        <img \r\n                                            className='w-300px'\r\n                                            src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/370.png`} \r\n                                            alt=\"\" \r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className='d-flex justify-content-evenly flex-wrap'>\r\n                                        <div className='d-flex flex-column'>\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Collection Name</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{orderDetail.collection_name}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Tier</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{tokenType[orderDetail.tier]}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Artist Name</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{orderDetail.artist_name}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Order Code</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{orderDetail.order_code}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"d-flex flex-column\">\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Token ID</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{orderDetail.tokenID}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Amount Paid</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">\r\n                                                        {orderDetail.amount_paid} <span className='ms-2'>{orderDetail.currency_type}</span>\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Payment Status</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{orderDetail.status}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"d-flex flex-column\">\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Mint Status</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{mintStatus[orderDetail.minted]}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Blockchain</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">{orderDetail.blockchain}</a>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"pb-5 fs-6\">\r\n                                                <div className=\"fw-bolder mt-5\">Availabilty</div>\r\n                                                <div className=\"text-gray-600\">\r\n                                                    <a href=\"#\" className=\"text-gray-600 text-hover-primary\">\r\n                                                        {orderDetail.quantity_available} / {orderDetail.total_quantity}\r\n                                                    </a>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"text-center pb-5 fs-6\">\r\n                                        <div className=\"text-gray-600\">\r\n                                            <a href={`${getExplorerURL(orderDetail.blockchain)}${orderDetail.tx_hash}`} className=\"text-gray-600 text-hover-primary\">\r\n                                                View Transaction\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            }\r\n        </>\r\n    )\r\n}","import { FC } from 'react'\r\nimport { Button } from '@mui/material';\r\nimport { Dialog } from '@mui/material';\r\nimport { DialogActions } from '@mui/material';\r\nimport { DialogContent } from '@mui/material';\r\nimport { DialogTitle } from '@mui/material';\r\nimport { toAbsoluteUrl } from \"_metronic/helpers\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"setup\";\r\nimport { AlertDanger } from \"app/modules/alerts/Alerts\";\r\n\r\ntype Props = {\r\n    refundID: string\r\n    charge: string\r\n    status: string\r\n    created: string\r\n    showRefundDetailDialog: any\r\n    setShowRefundDetailDialog: any\r\n}\r\n\r\n// export const RefundDetailModal: FC<Props> = ({ refundID, charge, status, created }) => {\r\n//     return (\r\n//         <div className=\"modal fade\" id=\"kt_modal_show_refund_details\" tabIndex={-1} aria-hidden=\"true\">\r\n//             <div className=\"modal-dialog modal-dialog-centered mw-650px\">\r\n//                 <div className=\"modal-content\">\r\n//                     <div className=\"modal-header\">\r\n//                         <h2 className=\"fw-bolder\">Refund Detail</h2>\r\n//                         <div className=\"btn btn-icon btn-sm btn-active-icon-primary\" data-kt-users-modal-action=\"close\">\r\n//                             <span className=\"svg-icon svg-icon-1\">\r\n//                                 <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" width=\"24px\" height=\"24px\" viewBox=\"0 0 24 24\" version=\"1.1\">\r\n//                                     <g transform=\"translate(12.000000, 12.000000) rotate(-45.000000) translate(-12.000000, -12.000000) translate(4.000000, 4.000000)\" fill=\"#000000\">\r\n//                                         <rect fill=\"#000000\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n//                                         <rect fill=\"#000000\" opacity=\"0.5\" transform=\"translate(8.000000, 8.000000) rotate(-270.000000) translate(-8.000000, -8.000000)\" x=\"0\" y=\"7\" width=\"16\" height=\"2\" rx=\"1\" />\r\n//                                     </g>\r\n//                                 </svg>\r\n//                             </span>\r\n//                         </div>\r\n//                     </div>\r\n//                     <div className=\"modal-body scroll-y mx-5 mx-xl-15 my-7\">\r\n//                         <div className=\"d-flex flex-stack\">\r\n//                             <div className=\"d-flex\">\r\n//                                 {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n//                                 <div className=\"d-flex flex-column\">\r\n//                                     <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Refund ID</a>\r\n//                                     <div className=\"fs-6 fw-bold text-muted\">{refundID}</div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"separator separator-dashed my-5\"></div>\r\n//                         <div className=\"d-flex flex-stack\">\r\n//                             <div className=\"d-flex\">\r\n//                                 {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n//                                 <div className=\"d-flex flex-column\">\r\n//                                     <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Charge ID</a>\r\n//                                     <div className=\"fs-6 fw-bold text-muted\">{charge}</div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"separator separator-dashed my-5\"></div>\r\n//                         <div className=\"d-flex flex-stack\">\r\n//                             <div className=\"d-flex\">\r\n//                                 {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n//                                 <div className=\"d-flex flex-column\">\r\n//                                     <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Status</a>\r\n//                                     <div className=\"fs-6 fw-bold text-muted\">{status}</div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"separator separator-dashed my-5\"></div>\r\n//                         <div className=\"d-flex flex-stack\">\r\n//                             <div className=\"d-flex\">\r\n//                                 {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n//                                 <div className=\"d-flex flex-column\">\r\n//                                     <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Created</a>\r\n//                                     <div className=\"fs-6 fw-bold text-muted\">{new Date(created).toUTCString()}</div>\r\n//                                 </div>\r\n//                             </div>\r\n//                         </div>\r\n//                         <div className=\"separator separator-dashed my-5\"></div>\r\n//                     </div>\r\n//                 </div>\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }\r\n\r\nexport const RefundDetailModal: FC<Props> = ({ refundID, charge, status, created, showRefundDetailDialog, setShowRefundDetailDialog }) => {\r\n    return (\r\n        <Dialog open={showRefundDetailDialog} onClose={() => setShowRefundDetailDialog(false)} aria-labelledby=\"form-dialog-title\">\r\n            <DialogTitle className='px-5 text-center fw-bolder text-muted' id=\"form-dialog-title\">Refund Detail</DialogTitle>\r\n            <div className='separator'></div>\r\n            <DialogContent>\r\n                <div className='w-400px'>\r\n                    <div className=\"d-flex flex-stack\">\r\n                        <div className=\"d-flex\">\r\n                            {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n                            <div className=\"d-flex flex-column\">\r\n                                <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Refund ID</a>\r\n                                <div className=\"fs-6 fw-bold text-muted\">{refundID}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"separator separator-dashed my-5\"></div>\r\n                    <div className=\"d-flex flex-stack\">\r\n                        <div className=\"d-flex\">\r\n                            {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n                            <div className=\"d-flex flex-column\">\r\n                                <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Charge ID</a>\r\n                                <div className=\"fs-6 fw-bold text-muted\">{charge}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"separator separator-dashed my-5\"></div>\r\n                    <div className=\"d-flex flex-stack\">\r\n                        <div className=\"d-flex\">\r\n                            {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n                            <div className=\"d-flex flex-column\">\r\n                                <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Status</a>\r\n                                <div className=\"fs-6 fw-bold text-muted\">{status}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"separator separator-dashed my-5\"></div>\r\n                    <div className=\"d-flex flex-stack\">\r\n                        <div className=\"d-flex\">\r\n                            {/* <img src=\"assets/media/svg/brand-logos/github.svg\" className=\"w-30px me-6\" alt=\"\" /> */}\r\n                            <div className=\"d-flex flex-column\">\r\n                                <a href=\"#\" className=\"fs-5 text-dark text-hover-primary fw-bolder\">Created</a>\r\n                                <div className=\"fs-6 fw-bold text-muted\">{new Date(parseInt(created)).toUTCString()}</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"separator separator-dashed my-5\"></div>\r\n                </div>\r\n            </DialogContent>\r\n\r\n            <div className='separator mb-5'></div>\r\n\r\n            <div className=\"me-5 mt-5 mb-5 text-center\">\r\n                <span \r\n                    onClick={() => setShowRefundDetailDialog(false)}\r\n                    className=\"btn btn-primary\"\r\n                >\r\n                    Cancel\r\n                </span>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\n","import Web3 from \"web3\"\r\n\r\nexport const getTokenID = (rawData: any) => {\r\n    const web3 = new Web3();\r\n  \r\n    const start = (64 * 3) + 2;\r\n    const end = start + 64;\r\n    const tokenIDHex = '0x' + rawData.slice(start, end);\r\n  \r\n    const tokenID = web3.utils.hexToNumberString(tokenIDHex)\r\n  \r\n    return tokenID;\r\n}","import { useState, useEffect } from 'react'\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport {Options} from './components/Options'\r\nimport {OwnerDetail} from './components/OwnerDetail'\r\nimport {OrderDetailCard} from './components/OrderDetailCard'\r\nimport {AlertDanger, AlertSuccess} from '../../alerts/Alerts'\r\nimport { shallowEqual, useSelector } from 'react-redux'\r\nimport { RootState } from '../../../../setup'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getOrderDetail, createRefund, getRefundDetail, cancelRefund } from '../api'\r\nimport { CircularProgress } from '@mui/material'\r\nimport { RefundDetailModal } from './components/RefundDetailModal'\r\nimport Caver from 'caver-js'\r\nimport Web3 from \"web3\"\r\nimport { getTokenID } from '../common'\r\nimport { updateOrderAfterReplacement } from '../api'\r\nimport { contractAbi, klaytnABI } from '../../contract/abi'\r\nimport { Navigate, Route, Routes } from \"react-router-dom\";\r\n\r\n\r\ndeclare var window: any\r\n\r\nlet klaytn: any = window.klaytn\r\n\r\nconst caver = new Caver(klaytn);\r\n\r\nconst web3 = new Web3(`${process.env.REACT_APP_INFURA_URL}`);\r\n\r\nconst ViewOrderDetail = (props: any) => {\r\n\r\n    const {state}: any = useLocation();\r\n    const orderCode: string = state;\r\n    const [checked, setChecked] = useState(false);\r\n\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const [showPassConfirmDialog, setShowPassConfirmDialog] = useState<boolean>(false)\r\n    const [isRefundProcessing, setIsRefundProcessing] = useState<boolean>(false)\r\n    const [isRefundCancellationProcessing, setIsRefundCancellationProcessing] = useState<boolean>(false)\r\n    const [isReplacementProcessing, setIsReplacementProcessing] = useState<boolean>(false)\r\n    const [orderDetail, setOrderDetail] = useState<any>({})\r\n    const [refundData, setRefunData] = useState<any>(null)\r\n    const [refundCancelData, setRefunCancelData] = useState<any>(null)\r\n    const [password, setPassword] = useState<string>('')\r\n    const [optionType, setOptionType] = useState<string>('')\r\n    const navigate = useNavigate()\r\n    const [reminting, setReminting] = useState<boolean>(false)\r\n\r\n    const [showRefundDetailDialog, setShowRefundDetailDialog] = useState<boolean>(false)\r\n\r\n    // const successMsg = localStorage.getItem('resSuccess')\r\n    const [resSuccessMessage, setResSuccessMessage] = useState<string | null>('')\r\n\r\n    // const failureMsg = localStorage.getItem('resFailure')\r\n    const [resFailureMessage, setResFailureMessage] = useState<string | null>('')\r\n\r\n    const { userID,  walletAddress, walletName, isAdmin }: any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            userID: auth.user?.userID,\r\n            walletAddress: auth.walletAddress,\r\n            walletName: auth.walletName,\r\n            isAdmin: auth.user?.isAdmin\r\n        })\r\n    )\r\n\r\n    if(resSuccessMessage && resSuccessMessage !== '') {\r\n        setTimeout(() => {\r\n          setChecked(false);\r\n        //   localStorage.removeItem('resSuccess')\r\n          setTimeout(() => {\r\n            setResSuccessMessage('');\r\n          }, 300);\r\n        }, 5000);\r\n    }\r\n    \r\n    if(resFailureMessage && resFailureMessage !== '') {\r\n        setTimeout(() => {\r\n            setChecked(false);\r\n            // localStorage.removeItem('resFailure')\r\n            setTimeout(() => {\r\n                setResFailureMessage('');\r\n            }, 300);\r\n        }, 5000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderDetail(orderCode)\r\n        .then((response) => {\r\n            let tempOrderDetail = response.data.order_detail\r\n            setOrderDetail(response.data.order_detail)\r\n\r\n            getRefundDetail(tempOrderDetail.payment_intent)\r\n            .then((response) => {\r\n                setRefunData(response.data.refund_data)\r\n                setRefunCancelData(response.data.refund_cancel_data)\r\n                setLoading(false)\r\n            })\r\n        })\r\n        .catch((err) => {console.log(err)} )\r\n    }, [])\r\n\r\n    const createNewRefund = () => {\r\n        setIsRefundProcessing(true)\r\n        createRefund(userID, password, orderDetail.payment_intent)\r\n        .then((response) => {\r\n\r\n           if(response.data.success) {\r\n                setIsRefundProcessing(false)\r\n                window.scrollTo(0,0)\r\n                setChecked(true)\r\n                setResSuccessMessage(response.data.message)\r\n                \r\n                getOrderDetail(orderCode)\r\n                .then((response) => {\r\n                    if(response.data.success) {\r\n                        let tempOrderDetail = response.data.order_detail\r\n                        setOrderDetail(response.data.order_detail)\r\n\r\n                        getRefundDetail(tempOrderDetail.payment_intent)\r\n                        .then((response) => {\r\n                            setRefunData(response.data.refund_data)\r\n                            setRefunCancelData(response.data.refund_cancel_data)\r\n                        })\r\n                    }\r\n                })\r\n                .catch((err) => {console.log(err)} )\r\n                console.log(response)\r\n           } else {\r\n                setIsRefundProcessing(false)\r\n                window.scrollTo(0,0)\r\n                setChecked(true)\r\n                setResFailureMessage(response.data.message)\r\n           }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const cancelExistingRefund = () => {\r\n        setIsRefundCancellationProcessing(true)\r\n        cancelRefund(userID, password, refundData.refund_id)\r\n        .then((response) => {\r\n            if(response.data.success) {\r\n            \r\n                getOrderDetail(orderCode)\r\n                .then((response) => {\r\n                    setIsRefundCancellationProcessing(false)\r\n\r\n                    let tempOrderDetail = response.data.order_detail\r\n                    setOrderDetail(response.data.order_detail)\r\n                    setResSuccessMessage(response.data.message)\r\n\r\n                    getRefundDetail(tempOrderDetail.data.order_detail.payment_intent)\r\n                    .then((response) => {\r\n                        setRefunData(response.data.refund_data)\r\n                        setRefunCancelData(response.data.refund_cancel_data)\r\n                    })\r\n                })\r\n                .catch((err) => {console.log(err)} )\r\n            } else {\r\n                setIsRefundCancellationProcessing(false)\r\n                setResFailureMessage(response.data.message)\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n    }\r\n\r\n    const submitOptions = (_optionType: string) => {\r\n        setOptionType(_optionType)\r\n        setShowPassConfirmDialog(true)\r\n    }\r\n\r\n    const checkEthereumTransaction = async (transactionHash: string, buyer: string, orderCode: string) => {\r\n        const web3 = new Web3(`${process.env.REACT_APP_INFURA_URL}`);\r\n        const receipt: any = await web3.eth.getTransactionReceipt(transactionHash);\r\n\r\n        if(!receipt) {\r\n            checkEthereumTransaction(transactionHash, buyer, orderCode)\r\n        } else {\r\n            if(receipt.status) {\r\n                const tokenID = getTokenID(receipt.logs[1].data)\r\n\r\n                // setChecked(true)\r\n                // setResSuccessMessage(`Token ID ${tokenID} minted successfully, please wait while we update data on database..`)\r\n\r\n                updateOrderAfterReplacement(orderCode, tokenID, buyer, transactionHash)\r\n                .then((response) => {\r\n\r\n                    if(response.data.success) {\r\n                        setChecked(true)\r\n                        setResSuccessMessage(response.data.message)\r\n                        window.scrollTo(0,0)\r\n                        setReminting(false)\r\n\r\n                        getOrderDetail(orderCode)\r\n                        .then((response) => {\r\n        \r\n                            let tempOrderDetail = response.data.order_detail\r\n                            setOrderDetail(response.data.order_detail)\r\n                            // setResSuccessMessage(response.data.message)\r\n                        })\r\n                        .catch((err) => {console.log(err)} )\r\n                    } else {\r\n                        if(response.data.message) {\r\n                            setChecked(true)\r\n                            setResFailureMessage(response.data.message)\r\n                            window.scrollTo(0,0)\r\n                            setReminting(false)\r\n                        } else {\r\n                            setChecked(true)\r\n                            setResFailureMessage('Failed to update order data')\r\n                            window.scrollTo(0,0)\r\n                            setReminting(false)\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => console.log(err))\r\n            } else {\r\n                setChecked(true)\r\n                setResFailureMessage('Failed to create replacement order. Please try again later')\r\n                window.scrollTo(0,0)\r\n                setReminting(false)\r\n            }\r\n        }\r\n    }\r\n\r\n    async function checkTransactionOnKlaytn(transactionHash: any, buyer: string, orderCode: string) {\r\n\r\n        const receipt: any = await caver.rpc.klay.getTransactionReceipt(transactionHash)\r\n\r\n        if(!receipt) {\r\n            checkTransactionOnKlaytn(transactionHash, buyer, orderCode);\r\n        } else {\r\n            switch (receipt.status) {\r\n                case '0x1':\r\n                    const tokenID = getTokenID(receipt.logs[2].data)\r\n\r\n                    console.log(receipt)\r\n                    console.log(tokenID)\r\n\r\n                    // setChecked(true)\r\n                    // setResSuccessMessage(`Token ID ${tokenID} minted successfully, please wait while we update data on database..`)\r\n\r\n                    updateOrderAfterReplacement(orderCode, tokenID, buyer, transactionHash)\r\n                    .then((response) => {\r\n\r\n                        if(response.data.success) {\r\n                            setChecked(true)\r\n                            setResSuccessMessage(response.data.message)\r\n\r\n                            getOrderDetail(orderCode)\r\n                            .then((response) => {\r\n            \r\n                                let tempOrderDetail = response.data.order_detail\r\n                                setOrderDetail(response.data.order_detail)\r\n                                // setResSuccessMessage(response.data.message)\r\n                            })\r\n                            .catch((err) => {console.log(err)} )\r\n                        } else {\r\n                            if(response.data.message) {\r\n                                setChecked(true)\r\n                                setResFailureMessage(response.data.message)\r\n                            } else {\r\n                                setChecked(true)\r\n                                setResFailureMessage('Failed to update order data')\r\n                            }\r\n                        }\r\n                        setReminting(false)\r\n                    })\r\n                    .catch((err) => console.log(err))\r\n                    break;\r\n                \r\n                case '0x0':\r\n                    setChecked(true)\r\n                    setResFailureMessage('Failed to create replacement order. Please try again later')\r\n                    setReminting(false)\r\n                    break\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleEthereumLogic = async (collectionID: string, tier: string, orderCode: string, buyer: string) => {\r\n\r\n        setReminting(true)\r\n\r\n        const web3 = new Web3(`${process.env.REACT_APP_INFURA_URL}`);\r\n        // const contractAddress = process.env.REACT_APP_NFT_CONTRACT_ADDRESS;\r\n        const nftContract = new web3.eth.Contract(contractAbi, process.env.REACT_APP_NFT_CONTRACT_ADDRESS_ETHEREUM);\r\n\r\n        let ethereum: any = window.ethereum\r\n        const accounts = await ethereum.request({ method: 'eth_requestAccounts' });\r\n\r\n        if(accounts[0] === walletAddress && walletName == 'metamask') {\r\n\r\n            ethereum\r\n            .request({\r\n                method: 'eth_sendTransaction',\r\n                params: [\r\n                    {\r\n                    'from': accounts[0],\r\n                    'to' : process.env.REACT_APP_NFT_CONTRACT_ADDRESS_ETHEREUM,\r\n                    'data' : nftContract.methods.sellTokenforCardPurchase(\r\n                                  buyer,\r\n                                  collectionID,\r\n                                  tier,\r\n                                  '1'  \r\n                                ).encodeABI()\r\n                    },\r\n                ],\r\n            })\r\n            .then((txHash: any) => {\r\n                checkEthereumTransaction(txHash, buyer, orderCode);\r\n            })\r\n            .catch((error: any) => {\r\n                console.log(error)\r\n                \r\n            });\r\n        } else {\r\n            navigate('/my-wallet')\r\n        }\r\n    }\r\n\r\n    const handleKlaytnLogic = async (collectionID: string, tier: string, orderCode: string, buyer: string) => {\r\n        setReminting(true)\r\n        const myContract = new caver.klay.Contract(klaytnABI, process.env.REACT_APP_NFT_CONTRACT_ADDRESS_KLAYTN)\r\n\r\n        if(walletName == 'kaikas') {\r\n            await klaytn.enable()\r\n\r\n            const account = klaytn.selectedAddress\r\n\r\n            if(account === walletAddress) {\r\n\r\n                myContract.methods.sellTokenforCardPurchase(\r\n                    buyer,\r\n                    collectionID,\r\n                    tier,\r\n                    '1'  \r\n                ).send({from: account, gas: 185000},\r\n                function(error: any, transactionHash: any) {\r\n                    if(transactionHash) {\r\n                        checkTransactionOnKlaytn(transactionHash, buyer, orderCode)\r\n                    }\r\n                    if(error) {\r\n                        console.log(error)\r\n                    }\r\n                });\r\n            } else {\r\n                navigate('/my-wallet')\r\n            }\r\n        } else {\r\n            navigate('/my-wallet')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>  \r\n            {isAdmin == '1' && \r\n                <>\r\n                    {!loading && \r\n                        <div className=\"post d-flex flex-column-fluid\" id=\"kt_post\">\r\n                            <div id=\"kt_content_container\" className=\"container\">\r\n                                <div className=\"d-flex flex-column flex-xl-row\">\r\n                                    <div className=\"flex-column flex-lg-row-auto w-100 w-xl-400px mb-10\">\r\n                                        <OwnerDetail \r\n                                            orderDetail={orderDetail}\r\n                                        />\r\n                                        <Options \r\n                                            refundData={refundData}\r\n                                            createNewRefund={createNewRefund}\r\n                                            cancelExistingRefund={cancelExistingRefund}\r\n                                            isRefundProcessing={isRefundProcessing}\r\n                                            setIsRefundProcessing={setIsRefundProcessing}\r\n                                            isRefundCancellationProcessing={isRefundCancellationProcessing}\r\n                                            setIsRefundCancellationProcessing={setIsRefundCancellationProcessing}\r\n                                            showPassConfirmDialog={showPassConfirmDialog}\r\n                                            setShowPassConfirmDialog={setShowPassConfirmDialog}\r\n                                            password={password}\r\n                                            setPassword={setPassword}\r\n                                            optionType={optionType}\r\n                                            submitOptions={submitOptions}\r\n                                            setShowRefundDetailDialog={setShowRefundDetailDialog}\r\n                                            orderDetail={orderDetail}\r\n                                            setResSuccessMessage={setResSuccessMessage}\r\n                                            setResFailureMessage={setResFailureMessage}\r\n                                            handleEthereumLogic={handleEthereumLogic}\r\n                                            handleKlaytnLogic={handleKlaytnLogic}\r\n                                            reminting={reminting}\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"flex-lg-row-fluid ms-lg-15\">\r\n                                        {resSuccessMessage && resSuccessMessage !== \"\"  ? (\r\n                                            <AlertSuccess \r\n                                                // className={'mb-2 post'} \r\n                                                message={resSuccessMessage} \r\n                                                checked={checked} \r\n                                            />\r\n                                        ) : null}\r\n\r\n                                        {resFailureMessage && resFailureMessage !== \"\"  ? (\r\n                                            <AlertDanger \r\n                                                // className={'mb-2 post'} \r\n                                                message={resFailureMessage} \r\n                                                checked={checked} \r\n                                            />\r\n                                        ) : null}\r\n                                        {/* <ViewUserHeader /> */}\r\n                                        <div className=\"tab-content\" id=\"myTabContent\">\r\n                                            <div className=\"tab-pane show active\" id=\"kt_user_view_overview_security\" role=\"tabpanel\">\r\n                                                <OrderDetailCard \r\n                                                    orderDetail={orderDetail}\r\n                                                />\r\n                                            </div>\r\n                                        </div>\r\n                                        <RefundDetailModal \r\n                                            refundID={refundData ? refundData.refund_id : ''}\r\n                                            charge={refundData ? refundData.charge : ''}\r\n                                            status={refundData ? refundData.status : ''}\r\n                                            created={refundData? refundData.created : ''}\r\n                                            showRefundDetailDialog={showRefundDetailDialog}\r\n                                            setShowRefundDetailDialog={setShowRefundDetailDialog}\r\n\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {loading && \r\n                        <div className='d-flex w-100 h-100'>\r\n                            <div className='my-auto mx-auto'>\r\n                                <div className='d-flex flex-column justify-content-center'>\r\n                                    <span className='text-primary fs-3'>Loading</span> <br />\r\n                                    <span className='ms-4'>\r\n                                        <CircularProgress />\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </>\r\n            }\r\n\r\n            {isAdmin == '0' && \r\n                <Routes>\r\n                    <Route index element={<Navigate to={'/error/404'} /> }/>\r\n                </Routes>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewOrderDetail"],"sourceRoot":""}