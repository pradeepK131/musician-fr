{"version":3,"sources":["app/modules/wallets/api/index.ts","app/modules/wallets/WalletLoginNew.tsx","app/modules/accounts/components/settings/cards/ProfileDetails.tsx","app/modules/accounts/components/settings/Settings.tsx","app/modules/accounts/AccountHeader.tsx","app/modules/accounts/components/settings/royaltyClaimHistory/components/EthereumRoyaltyClaimHistory.tsx","app/modules/accounts/components/settings/royaltyClaimHistory/components/KlaytnRoyaltyClaimHistory.tsx","app/modules/accounts/components/settings/royaltyClaimHistory/RoyaltyClaimHistory.tsx","app/modules/accounts/components/settings/Support.tsx","app/modules/accounts/components/settings/cardHistory/api/index.ts","app/modules/accounts/components/settings/cardHistory/CardHistory.tsx","app/modules/accounts/components/settings/transferHistory/api/index.ts","app/modules/accounts/components/settings/transferHistory/TransferHistory.tsx","app/modules/accounts/AccountPage.tsx"],"names":["UPDATE_WALLET_URL","process","updateWallet","userID","walletAddress","walletName","axios","method","url","headers","data","ethChainIdMap","klayNetworkMap","WalletLoginNew","state","useLocation","useState","message","setMessage","length","getCheckStatus","checked","setChecked","metamaskConnecting","setMetamaskConnecting","kaikasConnecting","setKaikasConnecting","useNavigate","useSelector","auth","user","chainID","custWalletEth","userWalletList","ethCustodialWallet","custWalletKlay","klayCustodialWallet","shallowEqual","dispatch","useDispatch","setMetaMaskAccountInfo","accounts","a","console","log","ethereum","window","request","chainId","then","response","success","metamaskWallet","metamask_wallet","kaikasWallet","kaikas_wallet","actions","setUserWalletList","setTimeout","handleKaikasLogin2","klaytn","enable","setKaikasAccountInfo","location","href","undefined","account","selectedAddress","networkVersion","className","style","marginBottom","width","height","src","toAbsoluteUrl","background","border","onClick","signOutWallet","catch","err","code","error","profileDetailsSchema","Yup","shape","email","min","max","required","handle","ProfileDetails","loading","setLoading","resSuccessMessage","setResSuccessMessage","resFailureMessage","setResFailureMessage","authToken","accessToken","fullname","username","description","initialValues","name","formik","useFormik","validationSchema","onSubmit","values","formData","FormData","append","updateProfile","updatedUser","id","userImage","avatar","full_name","isVerified","is_verified","setUser","localStorage","setItem","logout","role","handleSubmit","noValidate","type","placeholder","getFieldProps","disabled","touched","errors","rows","color","borderColor","display","Settings","AccountHeader","URLSearchParams","search","get","tabUrl","setTabUrl","useEffect","overflowX","to","tokenType","EthereumRoyaltyClaimHistory","claimData","map","token_image","alt","collection_name","tier","depositNumber","claimer","slice","parseFloat","claimedAmount","txHash","KlaytnRoyaltyClaimHistory","token_tier","deposit_number","claimed_amount","tx_hash","RoyaltyClaimHistory","props","setClaimData","getKlaytnRoyaltyClaimTransactionHistory","getETHRoyaltyClaimTransactionHistoryData","submitRequestFormSchema","subject","SubmitRequest","submitRequest","GET_ORDER_HISTORY_URL","CardHistory","orderHistory","setOrderHistory","navigate","shrinkWalletAddress","getOrderHistory","order_history","order_code","buyer","amount_paid","currency_type","status","xmlns","fill","viewBox","d","minted","orderCode","GET_TRANSFER_HISTORY_URL","TransferHistory","transferHistory","setTransferHistory","getTransferHistory","transfer_history","JSON","parse","tokenID","from_addr","to_addr","transfer_status","blockchain","AccountPage","useSearchParams"],"mappings":"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","file":"static/js/5.1d5e01a2.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst UPDATE_WALLET_URL = `${process.env.REACT_APP_API_URL}/update-connected-wallet-for-user.php`;\r\n\r\n\r\nexport function updateWallet(userID: string, walletAddress: string, walletName: string) {\r\n    return axios({\r\n      method: 'post',\r\n      url: UPDATE_WALLET_URL,\r\n      headers: {\r\n        'content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n      data: {\r\n        userID,\r\n        walletAddress,\r\n        walletName\r\n      }\r\n    })\r\n}","import { useState } from \"react\";\r\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\"\r\nimport { RootState } from \"setup\";\r\nimport { WalletOptionDialogBox } from \"./components/WalletOtionsDialog\"\r\nimport {actions} from '../auth/redux/AuthRedux'\r\nimport { toAbsoluteUrl } from \"_metronic/helpers\";\r\nimport { updateWallet } from './api'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { AlertDanger } from \"../alerts/Alerts\";\r\n\r\ndeclare var window: any\r\n\r\nconst ethChainIdMap: any = {\r\n    '0x1': 'Ethereum Main Network (Mainnet)',\r\n    '0x3': 'Ropsten Test Network',\r\n    '0x4': 'Rinkeby Test Network',\r\n    '0x5': 'Goerli Test Network',\r\n    '0x2a': 'Kovan Test Network'\r\n}\r\n\r\nconst klayNetworkMap: any = {\r\n    '8217' : 'Cypress Mainnet',\r\n    '1001' : 'Baobab Testnet'\r\n}\r\n\r\nconst getCheckStatus = (state: any) => {\r\n    if(state && state.message && state.message.length > 0) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\n\r\nconst WalletLoginNew = () => {\r\n\r\n    const { state }: any = useLocation()\r\n\r\n    const [message, setMessage] = useState<string>(state && state.message ? state.message : '')\r\n    const [checked, setChecked] = useState<boolean>(getCheckStatus(state))\r\n\r\n    const [open, setOpen] = useState<boolean>(false);\r\n    const [metamaskConnecting, setMetamaskConnecting] = useState<boolean>(false)\r\n    const [kaikasConnecting, setKaikasConnecting] = useState<boolean>(false)\r\n    const navigate = useNavigate()\r\n    const {walletAddress, walletName, userID, chainID, custWalletEth, custWalletKlay,}: any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            walletAddress: auth.walletAddress,\r\n            walletName: auth.walletName,\r\n            userID: auth.user?.userID,\r\n            chainID: auth.chainID,\r\n            custWalletEth: auth.userWalletList.ethCustodialWallet,\r\n            custWalletKlay: auth.userWalletList.klayCustodialWallet,\r\n        }), shallowEqual\r\n    )\r\n    const dispatch = useDispatch()\r\n\r\n    if(message !== \"\") {\r\n        setTimeout(() => {\r\n          setChecked(false);\r\n          setTimeout(() => {\r\n            setMessage(\"\");\r\n          }, 200);\r\n        }, 5000);\r\n    }\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    function signOutWallet() {\r\n        dispatch(actions.signOutWallet())\r\n    }\r\n\r\n    async function setMetaMaskAccountInfo(accounts: any) {\r\n        if (accounts.length === 0) {\r\n            // MetaMask is locked or the user has not connected any accounts\r\n            console.log('Please connect to MetaMask.');\r\n        } else if (accounts[0] !== walletAddress) {\r\n            let ethereum: any = window.ethereum\r\n            const chainId = await ethereum.request({ method: 'eth_chainId' });\r\n            updateWallet(userID, accounts[0], 'metamask')\r\n            .then((response) => {\r\n                if(response.data.success) {\r\n                    setMetamaskConnecting(false)\r\n                    // dispatch(actions.setWalletAddress(accounts[0], 'metamask', chainId))\r\n                    const userWalletList = {\r\n                        ethCustodialWallet: response.data.custWalletEth,\r\n                        klayCustodialWallet: response.data.custWalletKlay,\r\n                        metamaskWallet: response.data.metamask_wallet,\r\n                        kaikasWallet: response.data.kaikas_wallet\r\n                    }\r\n                    dispatch(actions.setUserWalletList(userWalletList, accounts[0], 'metamask', chainId))\r\n                } else {\r\n                    if(response.data.message) {\r\n                        setChecked(true)\r\n                        setMessage(response.data.message)\r\n                    } else {\r\n                        setChecked(true)\r\n                        setMessage('Cannot connect with a wallet, please try with another wallet')\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    function handleMetaMaskLogin() {\r\n        setMetamaskConnecting(true)\r\n        if(window.ethereum != undefined) {\r\n            let ethereum: any = window.ethereum\r\n            ethereum\r\n            .request({ method: 'eth_requestAccounts' })\r\n            .then(setMetaMaskAccountInfo)\r\n            .catch((err: any) => {\r\n                if (err.code === 4001) {\r\n                    console.log(err)\r\n                } else {\r\n                    console.error(err);\r\n                }\r\n            });\r\n        } else {\r\n            window.location.href = \"https://metamask.io/download/\"\r\n        }\r\n    }\r\n\r\n    async function handleKaikasLogin() {\r\n        setKaikasConnecting(true)\r\n        const { klaytn } = window\r\n\r\n        if (klaytn) {\r\n            try {\r\n                // if(klaytn.selectedAddress) {\r\n\r\n                //     const account = klaytn.selectedAddress\r\n                //     const networkVersion = klaytn.networkVersion\r\n                //     console.log(account)\r\n                    \r\n                //     updateWallet(userID, account, 'kaikas')\r\n                //     .then((response) => {\r\n                //         if(response.data.success) {\r\n\r\n                //             const userWalletList = {\r\n                //                 ethCustodialWallet: response.data.custWalletEth,\r\n                //                 klayCustodialWallet: response.data.custWalletKlay,\r\n                //                 metamaskWallet: response.data.metamask_wallet,\r\n                //                 kaikasWallet: response.data.kaikas_wallet\r\n                //             }\r\n\r\n                //             // dispatch(actions.setWalletAddress(account, 'kaikas'))\r\n                //             dispatch(actions.setUserWalletList(userWalletList, account, 'kaikas', networkVersion))\r\n                //         } else {\r\n                //             if(response.data.message) {\r\n                //                 setChecked(true)\r\n                //                 setMessage(response.data.message)\r\n                //             } else {\r\n                //                 setChecked(true)\r\n                //                 setMessage('Cannot connect with a wallet, please try with another wallet')\r\n                //             }\r\n                //         }\r\n                //     })\r\n                // } else {\r\n                //     await klaytn.enable()\r\n                // }\r\n                await klaytn.enable()\r\n                // setKaikasAccountInfo()\r\n                const account = await klaytn.selectedAddress\r\n                console.log(account)\r\n        \r\n                if(account) {\r\n                    const networkVersion = await klaytn.networkVersion\r\n\r\n                    updateWallet(userID, account, 'kaikas')\r\n                    .then((response) => {\r\n                        if(response.data.success) {\r\n\r\n                            const userWalletList = {\r\n                                ethCustodialWallet: response.data.custWalletEth,\r\n                                klayCustodialWallet: response.data.custWalletKlay,\r\n                                metamaskWallet: response.data.metamask_wallet,\r\n                                kaikasWallet: response.data.kaikas_wallet\r\n                            }\r\n\r\n                            dispatch(actions.setUserWalletList(userWalletList, account, 'kaikas', networkVersion))\r\n                            setKaikasConnecting(false)\r\n                        } else {\r\n                            if(response.data.message) {\r\n                                setChecked(true)\r\n                                setMessage(response.data.message)\r\n                            } else {\r\n                                setChecked(true)\r\n                                setMessage('Cannot connect with a wallet, please try with another wallet')\r\n                            }\r\n                            setKaikasConnecting(false)\r\n                        }\r\n                    })\r\n                } else {\r\n                    handleKaikasLogin()\r\n                }\r\n            } catch (error) {\r\n                console.log('User denied account access')\r\n            }\r\n        } else {\r\n            window.location.href = \"https://chrome.google.com/webstore/detail/kaikas/jblndlipeogpafnldhgmapagcccfchpi\"\r\n        }\r\n    }\r\n\r\n    const handleKaikasLogin2 = async () => {\r\n        setKaikasConnecting(true)\r\n        const { klaytn } = window\r\n\r\n        if(klaytn) {\r\n            try {\r\n                await klaytn.enable()\r\n                setKaikasAccountInfo()\r\n            } catch (error) {\r\n                console.log('User denied account access')\r\n            }\r\n        } else {\r\n            window.location.href = \"https://chrome.google.com/webstore/detail/kaikas/jblndlipeogpafnldhgmapagcccfchpi\"\r\n        }\r\n    }\r\n\r\n    const setKaikasAccountInfo = () => {\r\n        const { klaytn } = window\r\n        if (klaytn === undefined) return\r\n\r\n        const account = klaytn.selectedAddress\r\n        const networkVersion = klaytn.networkVersion\r\n\r\n        updateWallet(userID, account, 'kaikas')\r\n        .then((response) => {\r\n            if(response.data.success) {\r\n\r\n                const userWalletList = {\r\n                    ethCustodialWallet: response.data.custWalletEth,\r\n                    klayCustodialWallet: response.data.custWalletKlay,\r\n                    metamaskWallet: response.data.metamask_wallet,\r\n                    kaikasWallet: response.data.kaikas_wallet\r\n                }\r\n\r\n                dispatch(actions.setUserWalletList(userWalletList, account, 'kaikas', networkVersion))\r\n                setKaikasConnecting(false)\r\n            } else {\r\n                if(response.data.message) {\r\n                    setChecked(true)\r\n                    setMessage(response.data.message)\r\n                } else {\r\n                    setChecked(true)\r\n                    setMessage('Cannot connect with a wallet, please try with another wallet')\r\n                }\r\n                setKaikasConnecting(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {message && message != '' && \r\n                <AlertDanger message={message} checked={checked} />\r\n            }\r\n\r\n            <div className='card mb-5 mb-xl-10'>\r\n                <>\r\n                    <div className=\"d-flex w-100 justify-content-center pt-5\">\r\n                        <div className='mb-10 fv-row w-50'>\r\n                            <div style={{ marginBottom: '50px' }}>\r\n                                <h4>Wallets</h4>\r\n                                <hr className=\"w-25 mb-10\" />\r\n\r\n                                <span className=\"mb-10\">\r\n                                    In order to use crypto to purchase tokens on Musician Beta, you need to have a wallet connected.\r\n                                    If you purchase a tokens using cards and if your are not connected with any wallets, you will \r\n                                    receive your tokens in the custodial wallet which is a temporary wallets created by us to hold \r\n                                    your tokens.\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div style={{ marginBottom: '50px' }}>\r\n                                <h4>Custodial Wallets</h4>\r\n                                <hr className=\"w-25 mb-10\" />\r\n\r\n                                {custWalletEth && \r\n                                    <div className=\"d-flex\">\r\n                                        <div>\r\n                                            <img \r\n                                                style={{ width: '35px', height: '35px' }}\r\n                                                src={toAbsoluteUrl(\"/musician/logo.png\")} \r\n                                                className=\"rounded\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column ms-6\">\r\n                                            <span>\r\n                                                Ethereum\r\n                                            </span>\r\n                                            <span>\r\n                                                {custWalletEth}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n                                {custWalletKlay && \r\n                                    <div className=\"d-flex mt-5\">\r\n                                        <div>\r\n                                            <img \r\n                                                style={{ width: '35px', height: '35px' }}\r\n                                                src={toAbsoluteUrl(\"/musician/logo.png\")} \r\n                                                className=\"rounded\"\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column ms-6\">\r\n                                            <span>\r\n                                                Klaytn\r\n                                            </span>\r\n                                            <span>\r\n                                                {custWalletKlay}\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n                                {!custWalletEth && !custWalletKlay && \r\n                                    <span>No custodial wallets created by you.</span>\r\n                                }\r\n                            </div>\r\n\r\n                            <div style={{ marginBottom: '50px' }}>\r\n                                <h4>Connected Wallets</h4>\r\n                                <hr className=\"w-25 mb-10\" />\r\n\r\n                                {walletAddress && \r\n                                    <div className=\"d-flex\">\r\n                                        <div>\r\n                                            {walletName == 'metamask' ? (\r\n                                                <img \r\n                                                    style={{ width: '100px', height: '100px' }}\r\n                                                    src={toAbsoluteUrl(\"/media/wallet-icons/metamask.png\")} \r\n                                                    className=\"rounded\"\r\n                                                />\r\n                                            ) : (\r\n                                                <img \r\n                                                    style={{ width: '50px', height: '50px' }}\r\n                                                    src={toAbsoluteUrl(\"/media/wallet-icons/klaytn.png\")} \r\n                                                    className=\"rounded\"\r\n                                                />\r\n                                            )}\r\n                                            \r\n                                        </div>\r\n                                        <div className=\"d-flex flex-column ms-3\">\r\n                                            <span>\r\n                                                {walletName && walletName == 'metamask' ? 'Ethereum' : 'Klaytn' }\r\n                                            </span>\r\n                                            <span>\r\n                                                {walletName == 'metamask' ? ethChainIdMap[chainID] : klayNetworkMap[chainID]}\r\n                                            </span>\r\n                                            <span>\r\n                                                {walletAddress}\r\n                                            </span>\r\n\r\n                                            <button\r\n                                                className=\"py-1 w-50 mt-2\"\r\n                                                style={{\r\n                                                    background: '#ffd600',\r\n                                                    border: '#0000',\r\n                                                }}\r\n                                                onClick={signOutWallet}\r\n                                            >\r\n                                                Remove Wallet\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                }\r\n\r\n                                {!walletAddress && \r\n                                    <>\r\n                                        <div className=\"d-flex mb-5\">\r\n                                            <div>\r\n                                                <img \r\n                                                    style={{ width: '70px', height: '70px' }}\r\n                                                    src={toAbsoluteUrl(\"/media/wallet-icons/metamask.png\")} \r\n                                                    className=\"rounded\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex flex-column ms-3\">\r\n                                                <span className=\"mb-3\">Add your ethereum wallets</span>\r\n                                                <button\r\n                                                    className=\"py-1\"\r\n                                                    style={{\r\n                                                        background: '#ffd600',\r\n                                                        border: '#0000',\r\n                                                    }}\r\n                                                    onClick={handleMetaMaskLogin}\r\n                                                >\r\n                                                    Add Ethereum Wallet\r\n                                                    {metamaskConnecting && \r\n                                                        <span className='spinner-border spinner-border-sm align-middle ms-3'></span>\r\n                                                    }\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                        <div className=\"d-flex ms-3\">\r\n                                            <div>\r\n                                                <img \r\n                                                    style={{ width: '50px', height: '50px' }}\r\n                                                    src={toAbsoluteUrl(\"/media/wallet-icons/klaytn.png\")} \r\n                                                    className=\"rounded\"\r\n                                                />\r\n                                            </div>\r\n                                            <div className=\"d-flex flex-column ms-6\">\r\n                                                <span className=\"mb-3\">Add your klaytn wallets</span>\r\n                                                <button \r\n                                                    className=\"py-1\"\r\n                                                    style={{\r\n                                                        background: '#ffd600',\r\n                                                        border: '#0000',\r\n                                                    }}\r\n                                                    onClick={handleKaikasLogin2}\r\n                                                >\r\n                                                    Add Klaytn Wallet\r\n                                                    {kaikasConnecting && \r\n                                                        <span className='spinner-border spinner-border-sm align-middle ms-3'></span>\r\n                                                    }\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </>\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WalletLoginNew","import React, {useState} from 'react'\r\nimport {useSelector, shallowEqual, useDispatch} from 'react-redux'\r\nimport {toAbsoluteUrl} from '../../../../../../_metronic/helpers'\r\nimport {IProfileDetails} from '../SettingsModel'\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport {RootState} from '../../../../../../setup'\r\nimport {updateProfile} from '../_redux/accountCrud'\r\nimport * as auth from '../../../../auth/redux/AuthRedux'\r\nimport {UserModel} from '../../../../auth/models/UserModel'\r\nimport {AlertSuccess, AlertDanger} from '../../../../alerts/Alerts'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst profileDetailsSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Wrong email format')\r\n    .min(3, 'Minimum 3 symbols')\r\n    .max(50, 'Maximum 50 symbols')\r\n    .required('Email is required'),\r\n  handle: Yup.string().required('Can\\'t be blank'),\r\n})\r\n\r\nconst ProfileDetails: React.FC = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [checked, setChecked] = useState(false);\r\n  const [resSuccessMessage, setResSuccessMessage] = useState(\"\");\r\n  const [resFailureMessage, setResFailureMessage] = useState(\"\");\r\n\r\n  if(resSuccessMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setResSuccessMessage(\"\");\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  if(resFailureMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setResFailureMessage(\"\");\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const {fullname, email, username, authToken, userID, description} : any = useSelector<RootState>(\r\n    ({auth}) => ({\r\n      authToken: auth.accessToken,\r\n      userID: auth.user?.userID,\r\n      fullname: auth.user?.fullname,\r\n      email: auth.user?.email,\r\n      username: auth.user?.username,\r\n      description: auth.user?.description\r\n  }), shallowEqual)\r\n\r\n  const initialValues: IProfileDetails = {\r\n    email: email,\r\n    name: fullname,\r\n    handle: username,\r\n    description: description\r\n  }\r\n\r\n  const formik = useFormik<IProfileDetails>({\r\n    initialValues,\r\n    validationSchema: profileDetailsSchema,\r\n    onSubmit: (values) => {\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        const formData = new FormData();\r\n        formData.append('email', values.email)\r\n        formData.append('name', values.name)\r\n        formData.append('handle', values.handle)\r\n        formData.append('description', values.description)\r\n        formData.append('authToken', authToken)\r\n        formData.append('userID', userID)\r\n        updateProfile(formData)\r\n          .then((response) => {\r\n            if(response.data.success) {\r\n              const updatedUser: UserModel = {\r\n                userID : response.data.user.id,\r\n                userImage: response.data.user.avatar,\r\n                fullname : response.data.user.full_name,\r\n                username : response.data.user.username,\r\n                description: response.data.user.description,\r\n                email : response.data.user.email,\r\n                isVerified : response.data.user.is_verified,\r\n              }\r\n              dispatch(auth.actions.setUser(updatedUser))\r\n              setChecked(true)\r\n              setResSuccessMessage(response.data.message)\r\n              setLoading(false)\r\n            } else {\r\n              if(response.data.message) {\r\n                setResFailureMessage(response.data.message);\r\n                setLoading(false);\r\n                setChecked(true);\r\n              } else {\r\n                setResFailureMessage(\"Profile update failed\");\r\n                setLoading(false);\r\n                setChecked(true);\r\n              }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            localStorage.setItem('sessionTimeOut', error);\r\n            auth.actions.logout()\r\n          })\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n    {resSuccessMessage !== \"\"  ? (\r\n        <AlertSuccess message={resSuccessMessage} checked={checked} />\r\n      ) : null}\r\n\r\n    {resFailureMessage !== \"\"  ? (\r\n        <AlertDanger message={resFailureMessage} checked={checked} />\r\n      ) : null}\r\n      \r\n    <div className='card mb-5 mb-xl-10'>\r\n      <div\r\n        className='card-header border-0 cursor-pointer'\r\n        role='button'\r\n        data-bs-toggle='collapse'\r\n        data-bs-target='#kt_account_profile_details'\r\n        aria-expanded='true'\r\n        aria-controls='kt_account_profile_details'\r\n      >\r\n        <div className='card-title m-0'>\r\n          <h3 className='fw-bolder m-0'><FormattedMessage id='SETTINGS_PAGE.PROFILE_DEATAIL' /></h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div id='kt_account_profile_details' className='show'>\r\n        <form onSubmit={formik.handleSubmit} noValidate className='form'>\r\n          <div className='card-body border-top p-9'>\r\n\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label required fw-bold fs-6 text-muted'>\r\n                <FormattedMessage id='SETTINGS_PAGE.EMAIL' />\r\n              </label>\r\n              <div className='col-lg-8 fv-row'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-lg form-control-solid text-muted'\r\n                  placeholder='Email'\r\n                  {...formik.getFieldProps('email')}\r\n                  disabled\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>{formik.errors.email}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                <FormattedMessage id='SETTINGS_PAGE.NAME' />\r\n              </label>\r\n              <div className='col-lg-8 fv-row'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-lg form-control-solid'\r\n                  placeholder='Fullname'\r\n                  {...formik.getFieldProps('name')}\r\n                />\r\n                {formik.touched.name && formik.errors.name && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>{formik.errors.name}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n \r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label required fw-bold fs-6'>\r\n                  <FormattedMessage id='SETTINGS_PAGE.HANDLE' />\r\n              </label>\r\n              <div className='col-lg-8 fv-row'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-lg form-control-solid'\r\n                  placeholder='User Name'\r\n                  {...formik.getFieldProps('handle')}\r\n                />\r\n                {formik.touched.handle && formik.errors.handle && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>{formik.errors.handle}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                  <FormattedMessage id='SETTINGS_PAGE.DESCRIPTION' />\r\n              </label>\r\n              <div className='col-lg-8 fv-row'>\r\n                <textarea\r\n                  className='form-control form-control-lg form-control-solid'\r\n                  {...formik.getFieldProps('description')}\r\n                  rows={5}\r\n                />\r\n                {formik.touched.description && formik.errors.description && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>{formik.errors.description}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className='card-footer d-flex justify-content-end py-6 px-9'>\r\n            <button type='submit' style={{ background: '#ffd600', color: '#000', borderColor: '#0000' }} className='py-2 px-4 rounded' disabled={loading}>\r\n              {!loading && <FormattedMessage id='SETTINGS_PAGE.SAVE_CHANGES' />}\r\n              {loading && (\r\n                <span className='indicator-progress' style={{display: 'block'}}>\r\n                  <FormattedMessage id='SETTINGS_PAGE.PLEASE_WAIT' />...{' '}\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {ProfileDetails}\r\n","import React from 'react'\r\nimport {ProfileDetails} from './cards/ProfileDetails'\r\n\r\nexport function Settings() {\r\n  return (\r\n    <>\r\n      <ProfileDetails />\r\n    </>\r\n  )\r\n}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport React, {useState, useEffect} from 'react'\r\nimport {useSelector, shallowEqual} from 'react-redux'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../_metronic/helpers'\r\nimport {Link, Navigate} from 'react-router-dom'\r\nimport {Dropdown1} from '../../../_metronic/partials'\r\nimport {useLocation} from 'react-router'\r\nimport {RootState} from '../../../setup'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst AccountHeader: React.FC = () => {\r\n  const location = useLocation()\r\n\r\n  const params = new URLSearchParams(window.location.search);\r\n  const url: string | null = params.get(\"tab\");\r\n\r\n  const [tabUrl, setTabUrl] = useState(url)\r\n\r\n  useEffect(() => {\r\n    setTabUrl(url)\r\n  }, [url])\r\n\r\n  const { userImage } : any = useSelector<RootState>(\r\n    ({auth}) => ({\r\n      userImage: auth.user?.userImage\r\n    })\r\n  )\r\n\r\n  return (\r\n    <div className='card mb-5 mb-xl-10'>\r\n      <div className='card-body pb-0'>\r\n        \r\n        <div className='d-flex mb-2' style={{ overflowX: 'auto' }}>\r\n          <ul className='nav nav-stretch nav-line-tabs nav-line-tabs-2x border-transparent fs-5 fw-bolder flex-nowrap'>\r\n            <li className='nav-item'>\r\n              <Link\r\n                className={\r\n                  `nav-link text-active-success me-6 ` +\r\n                  (tabUrl === 'settings' && 'active')\r\n                }\r\n                to='/account?tab=settings'\r\n              >\r\n                <FormattedMessage id='HEADER_USER_MUENU.SETTINGS' />\r\n              </Link>\r\n            </li>\r\n            {/* <li className='nav-item'>\r\n              <Link\r\n                className={\r\n                  `nav-link text-active-success me-6 ` +\r\n                  (tabUrl === 'language' && 'active')\r\n                }\r\n                to='/account?tab=language'\r\n              >\r\n                Language\r\n              </Link>\r\n            </li> */}\r\n            <li className='nav-item'>\r\n              <Link\r\n                className={\r\n                  `nav-link text-active-success me-6 ` +\r\n                  (tabUrl === 'your-wallet' && 'active')\r\n                }\r\n                to='/account?tab=your-wallet'\r\n              >\r\n                <FormattedMessage id='SETTINGS_PAGE.WALLETS' />\r\n              </Link>\r\n            </li>\r\n            {/* <li className='nav-item'>\r\n              <Link\r\n                className={\r\n                  `nav-link text-active-success me-6 ` +\r\n                  (tabUrl === 'transaction-history' && 'active')\r\n                }\r\n                to='/account?tab=transaction-history'\r\n              >\r\n                <FormattedMessage id='SETTINGS_PAGE.TRANSACTIONS' />\r\n              </Link>\r\n            </li> */}\r\n            <li className='nav-item'>\r\n              <Link\r\n                className={\r\n                  `nav-link text-active-success me-6 ` +\r\n                  (tabUrl === 'card-history' && 'active')\r\n                }\r\n                to='/account?tab=card-history'\r\n              >\r\n                Orders\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                className={\r\n                  `nav-link text-active-success me-6 ` +\r\n                  (tabUrl === 'royalty-claim-transaction-history' && 'active')\r\n                }\r\n                to='/account?tab=royalty-claim-transaction-history'\r\n              >\r\n                <FormattedMessage id='SETTINGS_PAGE.ROYALTY' />\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                className={\r\n                  `nav-link text-active-success me-6 ` +\r\n                  (tabUrl === 'transfer-history' && 'active')\r\n                }\r\n                to='/account?tab=transfer-history'\r\n              >\r\n                Transfers\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link\r\n                className={\r\n                  `nav-link text-active-success me-6 ` +\r\n                  (tabUrl === 'submit-request' && 'active')\r\n                }\r\n                to='/account?tab=submit-request'\r\n              >\r\n                <FormattedMessage id='SETTINGS_PAGE.SUPPORT' />\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport {AccountHeader}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { CircularProgress } from '@mui/material'\r\nimport { useState, useEffect } from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\ntype Props = {\r\n    claimData: Array<any>\r\n    loading: boolean\r\n}\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\nconst EthereumRoyaltyClaimHistory: React.FC<Props> = ({claimData, loading}) => {\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    return (\r\n        <div className={`card`}>\r\n        {/* begin::Header */}\r\n        <div className='card-header border-0 pt-5'>\r\n            <h3 className='card-title align-items-start flex-column'>\r\n                <span className='card-label fw-bolder fs-3 mb-1'><FormattedMessage id='SETTINGS_PAGE.TRANSACTION_HISTORIES' /></span>\r\n                {/* <span className='text-muted mt-1 fw-bold fs-7'>Over 500 new products</span> */}\r\n            </h3>\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Body */}\r\n        <div className='card-body py-3'>\r\n            {/* begin::Table container */}\r\n            <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table align-middle gs-0 gy-4'>\r\n                {/* begin::Table head */}\r\n                <thead>\r\n                    <tr className='fw-bolder text-muted bg-light'>\r\n                        <th className='ps-4 min-w-150px rounded-start'><FormattedMessage id='SETTINGS_PAGE.TOKEN_DETAILS' /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id='ADMIN_COLLECTION_PREVIEW.DEPOSIT_NO' /></th>\r\n                        <th className='text-center min-w-125px'><FormattedMessage id='SETTINGS_PAGE.CLAIMER_ADDRESS' /></th>\r\n                        <th className='text-center min-w-200px'><FormattedMessage id='SETTINGS_PAGE.CLAIMED_AMOUNT' /></th>\r\n                        <th className='text-center min-w-200px text-end rounded-end pe-5'><FormattedMessage id='SETTINGS_PAGE.TRANSACTIONS' /></th>\r\n                    </tr>\r\n                </thead>\r\n                {/* end::Table head */}\r\n                {/* begin::Table body */}\r\n                {!loading && \r\n                    <tbody>\r\n                        {claimData.map((data: any) => (\r\n                            <tr>\r\n                                <td>\r\n                                <div className='d-flex align-items-center'>\r\n                                    <div className='symbol symbol-50px me-5'>\r\n                                    <img\r\n                                        src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${data.token_image}`}\r\n                                        className=''\r\n                                        alt=''\r\n                                    />\r\n                                    </div>\r\n                                    <div className='d-flex justify-content-start flex-column'>\r\n                                    <span className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\r\n                                        {data.collection_name}\r\n                                    </span>\r\n                                    <span className='text-muted fw-bold text-muted d-block fs-7'>\r\n                                        <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /> : \r\n                                        <span>{tokenType[data.tier.tier]}</span>\r\n                                    </span>\r\n                                    </div>\r\n                                </div>\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.depositNumber}\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Paid</span> */}\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {shrinkWalletAddress(data.claimer)}\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Rejected</span> */}\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {parseFloat(data.claimedAmount) / 10 ** 18} ETH\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Insurance</span> */}\r\n                                </td>\r\n                                <td className='text-center text-end pe-5'>\r\n                                    <a\r\n                                        href={`https://goerli.etherscan.io/tx/${data.txHash}`}\r\n                                        className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                    >\r\n                                        <FormattedMessage id='SETTINGS_PAGE.VIEW_ON_ETHERSCAN' />\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                }\r\n                {/* end::Table body */}\r\n            </table>\r\n            {/* end::Table */}\r\n            </div>\r\n            {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {EthereumRoyaltyClaimHistory}\r\n","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { CircularProgress } from '@mui/material'\r\nimport React from 'react'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport {KTSVG, toAbsoluteUrl} from '../../../../../../../_metronic/helpers'\r\n\r\ntype Props = {\r\n    claimData: Array<any>\r\n    loading: boolean\r\n}\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\nconst KlaytnRoyaltyClaimHistory: React.FC<Props> = ({claimData, loading}) => {\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    return (\r\n        <div className={`card`}>\r\n        {/* begin::Header */}\r\n        <div className='card-header border-0 pt-5'>\r\n            <h3 className='card-title align-items-start flex-column'>\r\n            <span className='card-label fw-bolder fs-3 mb-1'><FormattedMessage id='SETTINGS_PAGE.TRANSACTION_HISTORIES' /></span>\r\n            {/* <span className='text-muted mt-1 fw-bold fs-7'>Over 500 new products</span> */}\r\n            </h3>\r\n            {/* <div className='card-toolbar'>\r\n            <a href='#' className='btn btn-sm btn-light-primary'>\r\n                <KTSVG path='/media/icons/duotune/arrows/arr075.svg' className='svg-icon-2' />\r\n                New Member\r\n            </a>\r\n            </div> */}\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Body */}\r\n        <div className='card-body py-3'>\r\n            {/* begin::Table container */}\r\n            <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table align-middle gs-0 gy-4'>\r\n                {/* begin::Table head */}\r\n                <thead>\r\n                <tr className='fw-bolder text-muted bg-light'>\r\n                    <th className='ps-4 min-w-150px rounded-start'><FormattedMessage id='SETTINGS_PAGE.TOKEN_DETAILS' /></th>\r\n                    <th className='text-center min-w-125px'><FormattedMessage id='ADMIN_COLLECTION_PREVIEW.DEPOSIT_NO' /></th>\r\n                    <th className='text-center min-w-125px'><FormattedMessage id='SETTINGS_PAGE.CLAIMER_ADDRESS' /></th>\r\n                    <th className='text-center min-w-200px'><FormattedMessage id='SETTINGS_PAGE.CLAIMED_AMOUNT' /></th>\r\n                    <th className='text-center min-w-200px text-end rounded-end pe-5'><FormattedMessage id='SETTINGS_PAGE.TRANSACTIONS' /></th>\r\n                </tr>\r\n                </thead>\r\n                {/* end::Table head */}\r\n                {/* begin::Table body */}\r\n                {!loading && \r\n                    <tbody>\r\n                        {claimData.map((data: any) => (\r\n                            <tr>\r\n                                <td>\r\n                                <div className='d-flex align-items-center'>\r\n                                    <div className='symbol symbol-50px me-5'>\r\n                                    <img\r\n                                        src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${data.token_image}`}\r\n                                        className=''\r\n                                        alt=''\r\n                                    />\r\n                                    </div>\r\n                                    <div className='d-flex justify-content-start flex-column'>\r\n                                    <a href='#' className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\r\n                                        {data.collection_name}\r\n                                    </a>\r\n                                    <span className='text-muted fw-bold text-muted d-block fs-7'>\r\n                                        <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /> : \r\n                                        <span>{tokenType[data.token_tier]}</span>\r\n                                    </span>\r\n                                    </div>\r\n                                </div>\r\n                                </td>\r\n                                <td>\r\n                                <a href='#' className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.deposit_number}\r\n                                </a>\r\n                                </td>\r\n                                <td>\r\n                                <a href='#' className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {shrinkWalletAddress(data.claimer)}\r\n                                </a>\r\n                                </td>\r\n                                <td>\r\n                                <a href='#' className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {parseFloat(data.claimed_amount) / 10 ** 18} KLAY\r\n                                </a>\r\n                                </td>\r\n                                <td className='text-center text-end pe-5'>\r\n                                    <a\r\n                                        href={`https://baobab.scope.klaytn.com/tx/${data.tx_hash}`}\r\n                                        className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                    >\r\n                                        <FormattedMessage id='SETTINGS_PAGE.VIEW_ON_KLAYTNSCOPE' />\r\n                                    </a>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                }\r\n                {/* end::Table body */}\r\n            </table>\r\n            {/* end::Table */}\r\n            </div>\r\n            {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {KlaytnRoyaltyClaimHistory}\r\n","import { useState, useEffect } from \"react\"\r\nimport { useSelector, shallowEqual } from \"react-redux\"\r\nimport { RootState } from \"setup\"\r\nimport { EthereumRoyaltyClaimHistory } from \"./components/EthereumRoyaltyClaimHistory\"\r\nimport { KlaytnRoyaltyClaimHistory } from \"./components/KlaytnRoyaltyClaimHistory\"\r\nimport { getKlaytnRoyaltyClaimTransactionHistory } from \"../_redux/accountCrud\"\r\nimport { getETHRoyaltyClaimTransactionHistoryData } from \"app/modules/dropDetail/dropDetailEthereum/queries/Queries\"\r\n\r\nconst RoyaltyClaimHistory = (props: any) => {\r\n\r\n    const [claimData, setClaimData] = useState([])\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n\r\n    const {walletAddress, walletName}: any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            walletAddress: auth.walletAddress,\r\n            walletName: auth.walletName\r\n        })\r\n    )\r\n\r\n    useEffect(() => {\r\n        if(walletName == 'kaikas') {\r\n            getKlaytnRoyaltyClaimTransactionHistory(walletAddress)\r\n            .then((response) => {\r\n                if(response.data.success) {\r\n                    setClaimData(response.data.claimData)\r\n                    setLoading(false)\r\n                }\r\n            })\r\n        } else if(walletName == 'metamask') {\r\n            getETHRoyaltyClaimTransactionHistoryData(walletAddress)\r\n            .then((data: any) => {\r\n                setClaimData(data)\r\n                setLoading(false)\r\n            })\r\n        }\r\n    }, [walletName])\r\n\r\n    return (\r\n        <>\r\n            {walletName == 'metamask' && \r\n                <EthereumRoyaltyClaimHistory \r\n                    claimData={claimData}\r\n                    loading={loading}\r\n                />\r\n            }  \r\n            {walletName == 'kaikas' && \r\n                <KlaytnRoyaltyClaimHistory \r\n                    claimData={claimData}\r\n                    loading={loading}\r\n                />\r\n            }  \r\n        </>\r\n    )\r\n}\r\n\r\nexport {RoyaltyClaimHistory}","import React, {useState} from 'react'\r\nimport {useSelector, shallowEqual, useDispatch} from 'react-redux'\r\nimport {toAbsoluteUrl} from '../../../../../_metronic/helpers'\r\nimport * as Yup from 'yup'\r\nimport {useFormik} from 'formik'\r\nimport {RootState} from '../../../../../setup'\r\nimport { submitRequest } from './_redux/accountCrud'\r\nimport * as auth from '../../../auth/redux/AuthRedux'\r\nimport {UserModel} from '../../../auth/models/UserModel'\r\nimport {AlertSuccess, AlertDanger} from '../../../alerts/Alerts'\r\nimport { FormattedMessage } from 'react-intl'\r\n\r\nconst submitRequestFormSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email('Wrong email format')\r\n    .min(3, 'Minimum 3 symbols')\r\n    .max(50, 'Maximum 50 symbols')\r\n    .required('Email is required'),\r\n  subject: Yup.string().required('Can\\'t be blank'),\r\n  description: Yup.string().required('Can\\'t be blank'),\r\n})\r\n\r\ninterface SubmitRequestModel {\r\n    email: string\r\n    subject: string\r\n    description: string\r\n}\r\n\r\nconst SubmitRequest: React.FC = () => {\r\n  const [loading, setLoading] = useState(false)\r\n  const [checked, setChecked] = useState(false);\r\n  const [resSuccessMessage, setResSuccessMessage] = useState(\"\");\r\n  const [resFailureMessage, setResFailureMessage] = useState(\"\");\r\n\r\n  if(resSuccessMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setResSuccessMessage(\"\");\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  if(resFailureMessage !== \"\") {\r\n    setTimeout(() => {\r\n      setChecked(false);\r\n      setTimeout(() => {\r\n        setResFailureMessage(\"\");\r\n      }, 300);\r\n    }, 5000);\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  const {fullname, email, username, authToken, userID, description} : any = useSelector<RootState>(\r\n    ({auth}) => ({\r\n      authToken: auth.accessToken,\r\n      userID: auth.user?.userID,\r\n      fullname: auth.user?.fullname,\r\n      email: auth.user?.email,\r\n      username: auth.user?.username,\r\n      description: auth.user?.description\r\n  }), shallowEqual)\r\n\r\n  const initialValues: SubmitRequestModel = {\r\n    email: email,\r\n    subject: \"\",\r\n    description: \"\"\r\n  }\r\n\r\n  const formik = useFormik<SubmitRequestModel>({\r\n    initialValues,\r\n    validationSchema: submitRequestFormSchema,\r\n    onSubmit: (values) => {\r\n      setLoading(true)\r\n      setTimeout(() => {\r\n        submitRequest(\r\n            // authToken,\r\n            values.email,\r\n            values.subject,\r\n            values.description\r\n        )\r\n          .then((response) => {\r\n            if(response.data.success) {\r\n                setChecked(true)\r\n                setResSuccessMessage(response.data.message)\r\n                setLoading(false)\r\n            } else {\r\n                if(response.data.message) {\r\n                    setResFailureMessage(response.data.message);\r\n                    setLoading(false);\r\n                    setChecked(true);\r\n                } else {\r\n                    setResFailureMessage(\"Request Submission failed\");\r\n                    setLoading(false);\r\n                    setChecked(true);\r\n                }\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            localStorage.setItem('sessionTimeOut', error);\r\n            auth.actions.logout()\r\n          })\r\n      }, 1000)\r\n    },\r\n  })\r\n\r\n  return (\r\n    <>\r\n    {resSuccessMessage !== \"\"  ? (\r\n        <AlertSuccess message={resSuccessMessage} checked={checked} />\r\n      ) : null}\r\n\r\n    {resFailureMessage !== \"\"  ? (\r\n        <AlertDanger message={resFailureMessage} checked={checked} />\r\n      ) : null}\r\n      \r\n    <div className='card mb-5 mb-xl-10'>\r\n      <div\r\n        className='card-header border-0 cursor-pointer'\r\n        role='button'\r\n        data-bs-toggle='collapse'\r\n        data-bs-target='#kt_account_profile_details'\r\n        aria-expanded='true'\r\n        aria-controls='kt_account_profile_details'\r\n      >\r\n        <div className='card-title m-0'>\r\n          <h3 className='fw-bolder m-0'><FormattedMessage id='SETTINGS_PAGE.SUBMIT_REQUEST_TITLE' /></h3>\r\n        </div>\r\n      </div>\r\n\r\n      <div id='kt_account_profile_details' className='show'>\r\n        <form onSubmit={formik.handleSubmit} noValidate className='form'>\r\n          <div className='card-body border-top p-9'>\r\n\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label required fw-bold fs-6 text-muted'>\r\n                <FormattedMessage id='SETTINGS_PAGE.YOUR_EMAIL' />\r\n              </label>\r\n              <div className='col-lg-8 fv-row'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-lg form-control-solid text-muted'\r\n                  placeholder='Email'\r\n                  {...formik.getFieldProps('email')}\r\n                  disabled\r\n                />\r\n                {formik.touched.email && formik.errors.email && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>{formik.errors.email}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n \r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label required fw-bold fs-6'>\r\n                <FormattedMessage id='SETTINGS_PAGE.SUBJECT' />\r\n              </label>\r\n              <div className='col-lg-8 fv-row'>\r\n                <input\r\n                  type='text'\r\n                  className='form-control form-control-lg form-control-solid'\r\n                  {...formik.getFieldProps('subject')}\r\n                />\r\n                {formik.touched.subject && formik.errors.subject && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>{formik.errors.subject}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className='row mb-6'>\r\n              <label className='col-lg-4 col-form-label fw-bold fs-6'>\r\n                <FormattedMessage id='SETTINGS_PAGE.DESCRIPTION' />\r\n              </label>\r\n              <div className='col-lg-8 fv-row'>\r\n                <textarea\r\n                  className='form-control form-control-lg form-control-solid'\r\n                  rows={5}\r\n                  {...formik.getFieldProps('description')}\r\n                />\r\n                {formik.touched.description && formik.errors.description && (\r\n                  <div className='fv-plugins-message-container'>\r\n                    <div className='fv-help-block'>{formik.errors.description}</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          <div className='card-footer d-flex justify-content-end py-6 px-9'>\r\n            <button type='submit' style={{ background: '#ffd600', color: '#000', borderColor: '#0000' }} className='py-2 px-4 rounded' disabled={loading}>\r\n              {!loading && <FormattedMessage id='SETTINGS_PAGE.SUBMIT_REQUEST_BTN' />}\r\n              {loading && (\r\n                <span className='indicator-progress' style={{display: 'block'}}>\r\n                  <FormattedMessage id='SETTINGS_PAGE.PLEASE_WAIT' />...{' '}\r\n                  <span className='spinner-border spinner-border-sm align-middle ms-2'></span>\r\n                </span>\r\n              )}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport {SubmitRequest}","import axios from \"axios\";\r\n\r\nexport const GET_ORDER_HISTORY_URL = `${process.env.REACT_APP_API_URL}/get-order-history.php`;\r\n\r\nexport function getOrderHistory(userID: string) {\r\n    return axios({\r\n      method: 'post',\r\n      url: GET_ORDER_HISTORY_URL,\r\n      headers: {\r\n        'content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n      data: {\r\n        userID\r\n      } \r\n    });\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { CircularProgress } from '@mui/material'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { getOrderHistory } from './api'\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\nconst CardHistory: React.FC = () => {\r\n\r\n    const { walletAddress, userID } : any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            walletAddress: auth.walletAddress,\r\n            userID: auth.user?.userID\r\n        })\r\n    )\r\n\r\n    const [orderHistory, setOrderHistory] = useState<Array<any>>([])\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const navigate = useNavigate()\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderHistory(userID)\r\n        .then((response) => {\r\n            if(response.data.success) {\r\n                setOrderHistory(response.data.order_history)\r\n                setLoading(false)\r\n            } else {\r\n\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`card`}>\r\n        {/* begin::Header */}\r\n        <div className='card-header border-0 pt-5'>\r\n            <h3 className='card-title align-items-start flex-column'>\r\n                <span className='card-label fw-bolder fs-3 mb-1'>Order Histories</span>\r\n                {/* <span className='text-muted mt-1 fw-bold fs-7'>Over 500 new products</span> */}\r\n            </h3>\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Body */}\r\n        <div className='card-body py-3'>\r\n            {/* begin::Table container */}\r\n            <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table align-middle gs-0 gy-4'>\r\n                {/* begin::Table head */}\r\n                <thead>\r\n                    <tr className='fw-bolder text-muted bg-light'>\r\n                        <th className='ps-4 min-w-150px rounded-start'>Token Details</th>\r\n                        <th className='text-center min-w-125px'>Order Code</th>\r\n                        <th className='text-center min-w-125px'>Buyer</th>\r\n                        <th className='text-center min-w-125px'>Amount</th>\r\n                        <th className='text-center min-w-125px'>Payment Type</th>\r\n                        <th className='text-center min-w-125px'>Payment Status</th>\r\n                        <th className='text-center min-w-125px'>Mint Status</th>\r\n                        <th className='text-center min-w-200px text-end rounded-end pe-5'>Receipt</th>\r\n                    </tr>\r\n                </thead>\r\n                {/* end::Table head */}\r\n                {/* begin::Table body */}\r\n                {!loading && \r\n                    <tbody>\r\n                        {orderHistory.map((data: any) => (\r\n                            <tr>\r\n                                <td>\r\n                                <div className='d-flex align-items-center'>\r\n                                    <div className='symbol symbol-50px me-5'>\r\n                                    <img\r\n                                        src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${data.token_image}`}\r\n                                        className=''\r\n                                        alt=''\r\n                                    />\r\n                                    </div>\r\n                                    <div className='d-flex justify-content-start flex-column'>\r\n                                    <span className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\r\n                                        {data.collection_name}\r\n                                    </span>\r\n                                    <span className='text-muted fw-bold text-muted d-block fs-7'>\r\n                                        <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /> : \r\n                                        <span>{tokenType[data.tier]}</span>\r\n                                    </span>\r\n                                    </div>\r\n                                </div>\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.order_code}\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Paid</span> */}\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {shrinkWalletAddress(data.buyer)}\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Rejected</span> */}\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.amount_paid} <span className='ms-2'>{data.currency_type}</span>\r\n                                </span>\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.currency_type == 'USD' ? 'Card' : 'Crypto'}\r\n                                </span>\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.status == 'paid' ? (\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check-circle-fill text-success\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n                                        </svg>\r\n                                    ) : (\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-circle-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n                                        </svg>\r\n                                    )}\r\n                                </span>\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.minted == '1' ? (\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check-circle-fill text-success\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n                                        </svg>\r\n                                    ) : (\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-circle-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n                                        </svg>\r\n                                    )}\r\n                                </span>\r\n                                </td>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Insurance</span> */}\r\n                                <td className='text-center text-end pe-5'>\r\n                                    <span\r\n                                        className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                        onClick={() => navigate('/view-receipt', {state: { orderCode: data.order_code }})}\r\n                                    >\r\n                                        View Receipt\r\n                                    </span>\r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                }\r\n                {/* end::Table body */}\r\n            </table>\r\n            {/* end::Table */}\r\n            </div>\r\n            {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {CardHistory}\r\n","import axios from \"axios\";\r\n\r\nexport const GET_TRANSFER_HISTORY_URL = `${process.env.REACT_APP_API_URL}/get-transfer-history.php`;\r\n\r\nexport function getTransferHistory(userID: string) {\r\n    return axios({\r\n      method: 'post',\r\n      url: GET_TRANSFER_HISTORY_URL,\r\n      headers: {\r\n        'content-type': 'application/x-www-form-urlencoded',\r\n      },\r\n      data: {\r\n        userID\r\n      } \r\n    });\r\n}","/* eslint-disable jsx-a11y/anchor-is-valid */\r\nimport { CircularProgress } from '@mui/material'\r\nimport { useState, useEffect } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { FormattedMessage } from 'react-intl'\r\nimport { useSelector } from 'react-redux'\r\nimport { RootState } from 'setup'\r\nimport { getTransferHistory } from './api'\r\n\r\nconst tokenType: any = {\r\n    '0' : 'Gold',\r\n    '1': 'Platinum',\r\n    '2': 'Diamond'\r\n}\r\n\r\nconst TransferHistory: React.FC = () => {\r\n\r\n    const { userID } : any = useSelector<RootState>(\r\n        ({auth}) => ({\r\n            userID: auth.user?.userID\r\n        })\r\n    )\r\n\r\n    const [transferHistory, setTransferHistory] = useState<Array<any>>([])\r\n    const [loading, setLoading] = useState<boolean>(true)\r\n    const navigate = useNavigate()\r\n\r\n    const shrinkWalletAddress = (walletAddress: string) => {\r\n        const walletStart = walletAddress.slice(0, 6)\r\n        const walletEnd = walletAddress.slice(35)\r\n    \r\n        return walletStart + '......' + walletEnd\r\n    }\r\n\r\n    useEffect(() => {\r\n        getTransferHistory(userID)\r\n        .then((response) => {\r\n            if(response.data.success) {\r\n                setTransferHistory(response.data.transfer_history)\r\n                setLoading(false)\r\n            } else {\r\n\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`card`}>\r\n        {/* begin::Header */}\r\n        <div className='card-header border-0 pt-5'>\r\n            <h3 className='card-title align-items-start flex-column'>\r\n                <span className='card-label fw-bolder fs-3 mb-1'>Transfer Histories</span>\r\n                {/* <span className='text-muted mt-1 fw-bold fs-7'>Over 500 new products</span> */}\r\n            </h3>\r\n        </div>\r\n        {/* end::Header */}\r\n        {/* begin::Body */}\r\n        <div className='card-body py-3'>\r\n            {/* begin::Table container */}\r\n            <div className='table-responsive'>\r\n            {/* begin::Table */}\r\n            <table className='table align-middle gs-0 gy-4'>\r\n                {/* begin::Table head */}\r\n                <thead>\r\n                    <tr className='fw-bolder text-muted bg-light'>\r\n                        <th className='ps-4 min-w-150px rounded-start'>Token Details</th>\r\n                        <th className='min-w-125px text-center'>Quantity</th>\r\n                        <th className='min-w-125px text-center'>From</th>\r\n                        <th className='min-w-125px text-center'>To</th>\r\n                        <th className='min-w-200px text-center'>Status</th>\r\n                        <th className='min-w-200px text-end rounded-end pe-5 text-center'>Transaction</th>\r\n                    </tr>\r\n                </thead>\r\n                {/* end::Table head */}\r\n                {/* begin::Table body */}\r\n                {!loading && \r\n                    <tbody>\r\n                        {transferHistory.map((data: any) => (\r\n                            <tr>\r\n                                <td>\r\n                                <div className='d-flex align-items-center'>\r\n                                    <div className='symbol symbol-50px me-5'>\r\n                                    <img\r\n                                        src={`${process.env.REACT_APP_API_TOKEN_IMAGE_URL}/${data.token_image}`}\r\n                                        className=''\r\n                                        alt=''\r\n                                    />\r\n                                    </div>\r\n                                    <div className='d-flex justify-content-start flex-column'>\r\n                                    <span className='text-dark fw-bolder text-hover-primary mb-1 fs-6'>\r\n                                        {data.collection_name}\r\n                                    </span>\r\n                                    <span className='text-muted fw-bold text-muted d-block fs-7'>\r\n                                        <FormattedMessage id='CREATE_EDIT_COLLECTION.TIER' /> : \r\n                                        <span>{tokenType[data.tier]}</span>\r\n                                    </span>\r\n                                    </div>\r\n                                </div>\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {JSON.parse(data.tokenID).length}\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Paid</span> */}\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {shrinkWalletAddress(data.from_addr)}\r\n                                </span>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Rejected</span> */}\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {shrinkWalletAddress(data.to_addr)}\r\n                                </span>\r\n                                </td>\r\n                                <td>\r\n                                <span className='text-center text-dark fw-bolder text-hover-primary d-block mb-1 fs-6'>\r\n                                    {data.transfer_status == '1' && \r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-check-circle-fill text-success\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\"/>\r\n                                        </svg>\r\n                                    }\r\n\r\n                                    {data.transfer_status == '0' && \r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-x-circle-fill text-danger\" viewBox=\"0 0 16 16\">\r\n                                            <path d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z\"/>\r\n                                        </svg>\r\n                                    }\r\n                                </span>\r\n                                </td>\r\n                                {/* <span className='text-muted fw-bold text-muted d-block fs-7'>Insurance</span> */}\r\n                                <td className='text-center text-end pe-5'>\r\n                                    {data.blockchain == 'ethereum' && \r\n                                        <a\r\n                                            href={`https://goerli.etherscan.io/tx/${data.tx_hash}`}\r\n                                            className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                        >\r\n                                            <FormattedMessage id='SETTINGS_PAGE.VIEW_ON_ETHERSCAN' />\r\n                                        </a>\r\n                                    }\r\n\r\n                                    {data.blockchain == 'klaytn' && \r\n                                        <a\r\n                                            href={`https://baobab.scope.klaytn.com/tx/${data.tx_hash}`}\r\n                                            className='btn btn-bg-light btn-active-color-primary me-1'\r\n                                        >\r\n                                            <FormattedMessage id='SETTINGS_PAGE.VIEW_ON_KLAYTNSCOPE' />\r\n                                        </a>\r\n                                    }\r\n                                    \r\n                                </td>\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                }\r\n                {/* end::Table body */}\r\n            </table>\r\n            {/* end::Table */}\r\n            </div>\r\n            {/* end::Table container */}\r\n        </div>\r\n        {/* begin::Body */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {TransferHistory}\r\n","import React, {useState, useEffect} from 'react'\r\nimport {PageLink, PageTitle} from '../../../_metronic/layout/core'\r\nimport {Settings} from './components/settings/Settings'\r\nimport {AccountHeader} from './AccountHeader'\r\nimport {useSearchParams} from 'react-router-dom'\r\nimport WalletLogin from '../wallets/WalletLogin'\r\nimport WalletLoginNew from '../wallets/WalletLoginNew'\r\nimport { TransactionHistory } from './components/settings/transacionHistory/TransactionHistory'\r\nimport { RoyaltyClaimHistory } from './components/settings/royaltyClaimHistory/RoyaltyClaimHistory'\r\nimport { SubmitRequest } from './components/settings/Support'\r\nimport { CardHistory } from './components/settings/cardHistory/CardHistory'\r\nimport { LanguageChange } from './components/settings/cards/LanguageChange'\r\nimport { TransferHistory } from './components/settings/transferHistory/TransferHistory'\r\n\r\nconst accountBreadCrumbs: Array<PageLink> = [\r\n  {\r\n    title: 'Account',\r\n    path: '/crafted/account/overview',\r\n    isSeparator: false,\r\n    isActive: false,\r\n  },\r\n  {\r\n    title: '',\r\n    path: '',\r\n    isSeparator: true,\r\n    isActive: false,\r\n  },\r\n]\r\n\r\n\r\n\r\nconst AccountPage: React.FC = () => {\r\n  const [params] = useSearchParams()\r\n  const url: string | null = params.get(\"tab\")\r\n  \r\n  const [tabUrl, setTabUrl] = useState(url)\r\n\r\n  useEffect(() => {\r\n    setTabUrl(url)\r\n  }, [url])\r\n\r\n  return (\r\n    <>\r\n      <AccountHeader />\r\n\r\n      {tabUrl === 'settings' &&\r\n        <Settings />\r\n      }\r\n\r\n      {/* {tabUrl === 'language' &&\r\n        <LanguageChange />\r\n      } */}\r\n\r\n      {tabUrl === 'your-wallet' &&\r\n        // <WalletLogin />\r\n        <WalletLoginNew />\r\n      }\r\n\r\n      {/* {tabUrl === 'transaction-history' &&\r\n        <TransactionHistory />\r\n      } */}\r\n\r\n      {tabUrl === 'card-history' &&\r\n        <CardHistory />\r\n      }\r\n\r\n      {tabUrl === 'royalty-claim-transaction-history' &&\r\n        <RoyaltyClaimHistory />\r\n      }\r\n\r\n      {tabUrl === 'transfer-history' &&\r\n        <TransferHistory />\r\n      }\r\n\r\n      {tabUrl === 'submit-request' &&\r\n        <SubmitRequest />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default AccountPage\r\n"],"sourceRoot":""}